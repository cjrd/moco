time(seconds)        unlimited
file(blocks)         unlimited
data(kbytes)         unlimited
stack(kbytes)        unlimited
coredump(blocks)     unlimited
memory(kbytes)       unlimited
locked memory(kbytes) 64
process              1542210
nofiles              1024
vmemory(kbytes)      318000000
locks                unlimited
rtprio               0
  File "/userdata/smetzger/all_deepul_files/deepul_proj/moco/main_moco.py", line 54
    metavar='CDIR', help='where to store checkpointed models')
          ^
SyntaxError: invalid syntax
time(seconds)        unlimited
file(blocks)         unlimited
data(kbytes)         unlimited
stack(kbytes)        unlimited
coredump(blocks)     unlimited
memory(kbytes)       unlimited
locked memory(kbytes) 64
process              1542210
nofiles              1024
vmemory(kbytes)      318000000
locks                unlimited
rtprio               0
usage: main_moco.py [-h] [-a ARCH] [-j N] [--epochs N] [--start-epoch N]
                    [-b N] [--checkpoint_fp CHECKPOINT_FP] [--lr LR]
                    [--schedule [SCHEDULE [SCHEDULE ...]]] [--momentum M]
                    [--wd W] [-p N] [--resume PATH] [--world-size WORLD_SIZE]
                    [--rank RANK] [--dist-url DIST_URL]
                    [--dist-backend DIST_BACKEND] [--seed SEED] [--gpu GPU]
                    [--multiprocessing-distributed] [--moco-dim MOCO_DIM]
                    [--moco-k MOCO_K] [--moco-m MOCO_M] [--moco-t MOCO_T]
                    [--mlp] [--aug-plus] [--cos]
                    DIR
main_moco.py: error: unrecognized arguments: --checpoint_fp /userdata/smetzger/data/cifar_10/
avail True
ngpus_per_node 4
time(seconds)        unlimited
file(blocks)         unlimited
data(kbytes)         unlimited
stack(kbytes)        unlimited
coredump(blocks)     unlimited
memory(kbytes)       unlimited
locked memory(kbytes) 64
process              1542210
nofiles              1024
vmemory(kbytes)      318000000
locks                unlimited
rtprio               0
avail True
ngpus_per_node 4
args Namespace(arch='resnet50', aug_plus=False, batch_size=128, checkpoint_fp='/userdata/smetzger/all_deepul_files/ckpt/', cos=False, data='/userdata/smetzger/data/cifar_10/', dist_backend='nccl', dist_url='tcp://localhost:10001', epochs=200, gpu=None, lr=0.015, mlp=True, moco_dim=128, moco_k=65536, moco_m=0.999, moco_t=0.07, momentum=0.9, multiprocessing_distributed=True, print_freq=10, rank=0, resume='', schedule=[120, 160], seed=None, start_epoch=0, weight_decay=0.0001, workers=32, world_size=1)
here
ngpus_per_node 4
0it [00:00, ?it/s]0it [00:00, ?it/s]0it [00:00, ?it/s]0it [00:00, ?it/s]  0%|          | 0/170498071 [00:00<?, ?it/s]  0%|          | 0/170498071 [00:00<?, ?it/s]  0%|          | 0/170498071 [00:00<?, ?it/s]  0%|          | 0/170498071 [00:00<?, ?it/s]  0%|          | 40960/170498071 [00:00<09:51, 288261.54it/s]  0%|          | 40960/170498071 [00:00<10:20, 274626.13it/s]  0%|          | 40960/170498071 [00:00<10:26, 272048.60it/s]  0%|          | 40960/170498071 [00:00<10:28, 271421.52it/s]  0%|          | 204800/170498071 [00:00<07:25, 382653.34it/s]  0%|          | 204800/170498071 [00:00<07:46, 364756.53it/s]  0%|          | 204800/170498071 [00:00<07:56, 357123.14it/s]  0%|          | 221184/170498071 [00:00<07:59, 355219.12it/s]  0%|          | 450560/170498071 [00:00<05:34, 508997.50it/s]  0%|          | 434176/170498071 [00:00<05:50, 484916.53it/s]  0%|          | 499712/170498071 [00:00<05:50, 484623.64it/s]  0%|          | 532480/170498071 [00:00<05:51, 483763.66it/s]  1%|          | 860160/170498071 [00:00<04:06, 687403.26it/s]  0%|          | 794624/170498071 [00:00<04:19, 652779.26it/s]  1%|          | 860160/170498071 [00:00<04:20, 651555.27it/s]  1%|          | 892928/170498071 [00:00<04:20, 650495.15it/s]  1%|          | 1220608/170498071 [00:01<03:06, 907560.91it/s]  1%|          | 1122304/170498071 [00:01<03:17, 858899.57it/s]  1%|          | 1187840/170498071 [00:01<03:17, 857459.54it/s]  1%|          | 1253376/170498071 [00:01<03:16, 862051.89it/s]  1%|          | 1613824/170498071 [00:01<02:24, 1170369.26it/s]  1%|          | 1482752/170498071 [00:01<02:33, 1104307.23it/s]  1%|          | 1548288/170498071 [00:01<02:33, 1102105.99it/s]  1%|          | 1613824/170498071 [00:01<02:32, 1108799.05it/s]  1%|          | 1974272/170498071 [00:01<01:55, 1460447.62it/s]  1%|          | 1843200/170498071 [00:01<02:01, 1382780.10it/s]  1%|          | 1908736/170498071 [00:01<02:02, 1381750.28it/s]  1%|          | 1974272/170498071 [00:01<02:01, 1388110.90it/s]  1%|▏         | 2334720/170498071 [00:01<01:35, 1761991.23it/s]  1%|▏         | 2203648/170498071 [00:01<01:40, 1674459.31it/s]  1%|▏         | 2269184/170498071 [00:01<01:40, 1672117.29it/s]  1%|▏         | 2334720/170498071 [00:01<01:39, 1681657.36it/s]  2%|▏         | 2695168/170498071 [00:01<01:21, 2051544.52it/s]  2%|▏         | 2564096/170498071 [00:01<01:25, 1969169.14it/s]  2%|▏         | 2629632/170498071 [00:01<01:25, 1965301.96it/s]  2%|▏         | 2662400/170498071 [00:01<01:25, 1968610.98it/s]  2%|▏         | 3055616/170498071 [00:01<01:11, 2335864.24it/s]  2%|▏         | 2924544/170498071 [00:01<01:14, 2250253.75it/s]  2%|▏         | 2990080/170498071 [00:01<01:14, 2248086.45it/s]  2%|▏         | 3047424/170498071 [00:01<01:12, 2306789.05it/s]  2%|▏         | 3416064/170498071 [00:01<01:04, 2594242.28it/s]  2%|▏         | 3252224/170498071 [00:01<01:07, 2459761.35it/s]  2%|▏         | 3317760/170498071 [00:01<01:08, 2458159.20it/s]  2%|▏         | 3383296/170498071 [00:01<01:07, 2489890.52it/s]  2%|▏         | 3776512/170498071 [00:01<00:59, 2811708.06it/s]  2%|▏         | 3596288/170498071 [00:01<01:02, 2689533.43it/s]  2%|▏         | 3678208/170498071 [00:01<01:02, 2666720.44it/s]  2%|▏         | 3743744/170498071 [00:01<01:01, 2689832.55it/s]  2%|▏         | 4169728/170498071 [00:01<00:54, 3068493.85it/s]  2%|▏         | 3940352/170498071 [00:01<00:58, 2826065.38it/s]  2%|▏         | 4038656/170498071 [00:01<00:58, 2826770.30it/s]  2%|▏         | 4071424/170498071 [00:01<00:58, 2841593.48it/s]  3%|▎         | 4530176/170498071 [00:01<00:52, 3141386.10it/s]  3%|▎         | 4268032/170498071 [00:01<00:56, 2935867.74it/s]  3%|▎         | 4366336/170498071 [00:02<00:56, 2945437.56it/s]  3%|▎         | 4431872/170498071 [00:02<00:56, 2960406.00it/s]  3%|▎         | 4890624/170498071 [00:02<00:51, 3242379.35it/s]  3%|▎         | 4628480/170498071 [00:02<00:54, 3066107.17it/s]  3%|▎         | 4726784/170498071 [00:02<00:53, 3088157.82it/s]  3%|▎         | 4792320/170498071 [00:02<00:53, 3105610.47it/s]  3%|▎         | 5283840/170498071 [00:02<00:48, 3406365.19it/s]  3%|▎         | 4988928/170498071 [00:02<00:51, 3202251.29it/s]  3%|▎         | 5120000/170498071 [00:02<00:51, 3231571.98it/s]  3%|▎         | 5185536/170498071 [00:02<00:50, 3242097.49it/s]  3%|▎         | 5677056/170498071 [00:02<00:46, 3548535.12it/s]  3%|▎         | 5382144/170498071 [00:02<00:49, 3318722.58it/s]  3%|▎         | 5480448/170498071 [00:02<00:49, 3333978.57it/s]  3%|▎         | 5578752/170498071 [00:02<00:49, 3317780.75it/s]  4%|▎         | 6070272/170498071 [00:02<00:45, 3629738.23it/s]  3%|▎         | 5742592/170498071 [00:02<00:49, 3360620.23it/s]  3%|▎         | 5873664/170498071 [00:02<00:47, 3439213.62it/s]  3%|▎         | 5939200/170498071 [00:02<00:48, 3360454.98it/s]  4%|▍         | 6447104/170498071 [00:02<00:45, 3640732.22it/s]  4%|▎         | 6103040/170498071 [00:02<00:48, 3388395.08it/s]  4%|▎         | 6234112/170498071 [00:02<00:47, 3463628.08it/s]  4%|▎         | 6299648/170498071 [00:02<00:47, 3420889.85it/s]  4%|▍         | 6823936/170498071 [00:02<00:44, 3663229.43it/s]  4%|▍         | 6496256/170498071 [00:02<00:47, 3452672.51it/s]  4%|▍         | 6594560/170498071 [00:02<00:46, 3497520.08it/s]  4%|▍         | 6660096/170498071 [00:02<00:47, 3463004.26it/s]  4%|▍         | 7200768/170498071 [00:02<00:44, 3653829.44it/s]  4%|▍         | 6856704/170498071 [00:02<00:47, 3442525.80it/s]  4%|▍         | 6955008/170498071 [00:02<00:46, 3484671.41it/s]  4%|▍         | 7020544/170498071 [00:02<00:46, 3478283.91it/s]  4%|▍         | 7577600/170498071 [00:02<00:44, 3647414.45it/s]  4%|▍         | 7249920/170498071 [00:02<00:46, 3504454.45it/s]  4%|▍         | 7348224/170498071 [00:02<00:46, 3519903.22it/s]  4%|▍         | 7380992/170498071 [00:02<00:46, 3505996.01it/s]  5%|▍         | 7970816/170498071 [00:02<00:44, 3650682.81it/s]  4%|▍         | 7610368/170498071 [00:02<00:46, 3509833.77it/s]  5%|▍         | 7708672/170498071 [00:02<00:46, 3531567.12it/s]  5%|▍         | 7741440/170498071 [00:02<00:46, 3528099.84it/s]  5%|▍         | 8388608/170498071 [00:02<00:42, 3794219.38it/s]  5%|▍         | 8003584/170498071 [00:03<00:45, 3556425.43it/s]  5%|▍         | 8101888/170498071 [00:03<00:45, 3562524.56it/s]  5%|▍         | 8134656/170498071 [00:03<00:45, 3550514.60it/s]  5%|▌         | 8790016/170498071 [00:03<00:42, 3780002.17it/s]  5%|▍         | 8364032/170498071 [00:03<00:46, 3494546.14it/s]  5%|▍         | 8495104/170498071 [00:03<00:45, 3592709.13it/s]  5%|▍         | 8495104/170498071 [00:03<00:46, 3504297.12it/s]  5%|▌         | 9183232/170498071 [00:03<00:42, 3778578.13it/s]  5%|▌         | 8724480/170498071 [00:03<00:46, 3512730.24it/s]  5%|▌         | 8855552/170498071 [00:03<00:45, 3585849.20it/s]  5%|▌         | 8855552/170498071 [00:03<00:45, 3516080.35it/s]  6%|▌         | 9568256/170498071 [00:03<00:42, 3788092.19it/s]  5%|▌         | 9117696/170498071 [00:03<00:45, 3543355.30it/s]  5%|▌         | 9281536/170498071 [00:03<00:43, 3676787.63it/s]  5%|▌         | 9216000/170498071 [00:03<00:45, 3541948.40it/s]  6%|▌         | 9953280/170498071 [00:03<00:43, 3730864.28it/s]  6%|▌         | 9478144/170498071 [00:03<00:45, 3520153.07it/s]  6%|▌         | 9658368/170498071 [00:03<00:43, 3671465.78it/s]  6%|▌         | 9576448/170498071 [00:03<00:45, 3529379.78it/s]  6%|▌         | 10330112/170498071 [00:03<00:43, 3714983.06it/s]  6%|▌         | 9871360/170498071 [00:03<00:44, 3593993.03it/s]  6%|▌         | 10035200/170498071 [00:03<00:43, 3657709.28it/s]  6%|▌         | 9969664/170498071 [00:03<00:44, 3601057.78it/s]  6%|▋         | 10723328/170498071 [00:03<00:42, 3758552.08it/s]  6%|▌         | 10231808/170498071 [00:03<00:44, 3580432.20it/s]  6%|▌         | 10403840/170498071 [00:03<00:43, 3644238.33it/s]  6%|▌         | 10338304/170498071 [00:03<00:44, 3602493.93it/s]  7%|▋         | 11100160/170498071 [00:03<00:42, 3753810.56it/s]  6%|▌         | 10592256/170498071 [00:03<00:45, 3524519.06it/s]  6%|▋         | 10788864/170498071 [00:03<00:43, 3638511.28it/s]  6%|▋         | 10706944/170498071 [00:03<00:44, 3563720.72it/s]  7%|▋         | 11476992/170498071 [00:03<00:43, 3656403.93it/s]  6%|▋         | 10952704/170498071 [00:03<00:44, 3545868.96it/s]  7%|▋         | 11157504/170498071 [00:03<00:43, 3643665.61it/s]  6%|▋         | 11067392/170498071 [00:03<00:44, 3564833.83it/s]  7%|▋         | 11870208/170498071 [00:03<00:43, 3664204.20it/s]  7%|▋         | 11313152/170498071 [00:03<00:45, 3515003.67it/s]  7%|▋         | 11542528/170498071 [00:03<00:43, 3652272.74it/s]  7%|▋         | 11427840/170498071 [00:04<00:45, 3530776.33it/s]  7%|▋         | 12238848/170498071 [00:04<00:43, 3644280.41it/s]  7%|▋         | 11673600/170498071 [00:04<00:45, 3511964.28it/s]  7%|▋         | 11935744/170498071 [00:04<00:43, 3683724.75it/s]  7%|▋         | 11788288/170498071 [00:04<00:45, 3504160.02it/s]  7%|▋         | 12656640/170498071 [00:04<00:42, 3750244.89it/s]  7%|▋         | 12034048/170498071 [00:04<00:45, 3474830.16it/s]  7%|▋         | 12304384/170498071 [00:04<00:43, 3638064.23it/s]  7%|▋         | 12140544/170498071 [00:04<00:45, 3459925.78it/s]  8%|▊         | 13033472/170498071 [00:04<00:42, 3687288.57it/s]  7%|▋         | 12394496/170498071 [00:04<00:45, 3465174.42it/s]  7%|▋         | 12673024/170498071 [00:04<00:43, 3602018.04it/s]  7%|▋         | 12492800/170498071 [00:04<00:45, 3436824.45it/s]  8%|▊         | 13410304/170498071 [00:04<00:42, 3674304.16it/s]  8%|▊         | 12787712/170498071 [00:04<00:44, 3555310.27it/s]  8%|▊         | 13049856/170498071 [00:04<00:43, 3628455.61it/s]  8%|▊         | 12886016/170498071 [00:04<00:44, 3552085.29it/s]  8%|▊         | 13803520/170498071 [00:04<00:42, 3698703.76it/s]  8%|▊         | 13148160/170498071 [00:04<00:44, 3506057.79it/s]  8%|▊         | 13443072/170498071 [00:04<00:43, 3626835.11it/s]  8%|▊         | 13246464/170498071 [00:04<00:45, 3472489.28it/s]  8%|▊         | 14180352/170498071 [00:04<00:42, 3661474.65it/s]  8%|▊         | 13508608/170498071 [00:04<00:45, 3474197.37it/s]  8%|▊         | 13811712/170498071 [00:04<00:43, 3604589.27it/s]  8%|▊         | 13606912/170498071 [00:04<00:45, 3476751.52it/s]  9%|▊         | 14557184/170498071 [00:04<00:42, 3633489.97it/s]  8%|▊         | 13869056/170498071 [00:04<00:45, 3452112.09it/s]  8%|▊         | 13967360/170498071 [00:04<00:44, 3499898.95it/s]  8%|▊         | 14180352/170498071 [00:04<00:44, 3514072.67it/s]  9%|▉         | 14925824/170498071 [00:04<00:43, 3597014.30it/s]  8%|▊         | 14221312/170498071 [00:04<00:45, 3446046.25it/s]  8%|▊         | 14327808/170498071 [00:04<00:44, 3497233.22it/s]  9%|▊         | 14532608/170498071 [00:04<00:44, 3489726.19it/s]  9%|▉         | 15310848/170498071 [00:04<00:42, 3614602.29it/s]  9%|▊         | 14589952/170498071 [00:04<00:44, 3477452.97it/s]  9%|▊         | 14688256/170498071 [00:04<00:44, 3526514.62it/s]  9%|▊         | 14917632/170498071 [00:04<00:43, 3585889.95it/s]  9%|▉         | 15704064/170498071 [00:04<00:42, 3642954.66it/s]  9%|▉         | 14950400/170498071 [00:05<00:44, 3457760.33it/s]  9%|▉         | 15048704/170498071 [00:05<00:44, 3483827.24it/s]  9%|▉         | 15278080/170498071 [00:05<00:44, 3520293.06it/s]  9%|▉         | 16072704/170498071 [00:05<00:42, 3603910.25it/s]  9%|▉         | 15310848/170498071 [00:05<00:44, 3461823.68it/s]  9%|▉         | 15409152/170498071 [00:05<00:44, 3497877.11it/s]  9%|▉         | 15638528/170498071 [00:05<00:43, 3519575.09it/s] 10%|▉         | 16441344/170498071 [00:05<00:42, 3615972.89it/s]  9%|▉         | 15671296/170498071 [00:05<00:45, 3413357.80it/s]  9%|▉         | 15761408/170498071 [00:05<00:44, 3505154.27it/s]  9%|▉         | 15998976/170498071 [00:05<00:44, 3459810.30it/s] 10%|▉         | 16818176/170498071 [00:05<00:42, 3585038.14it/s]  9%|▉         | 16039936/170498071 [00:05<00:44, 3490726.98it/s]  9%|▉         | 16113664/170498071 [00:05<00:44, 3505399.23it/s] 10%|▉         | 16359424/170498071 [00:05<00:44, 3491404.44it/s] 10%|█         | 17211392/170498071 [00:05<00:41, 3665227.16it/s] 10%|▉         | 16392192/170498071 [00:05<00:44, 3458116.06it/s] 10%|▉         | 16465920/170498071 [00:05<00:44, 3470054.52it/s] 10%|▉         | 16719872/170498071 [00:05<00:44, 3483807.32it/s] 10%|█         | 17580032/170498071 [00:05<00:42, 3629702.17it/s] 10%|▉         | 16752640/170498071 [00:05<00:44, 3469949.50it/s] 10%|▉         | 16818176/170498071 [00:05<00:44, 3458889.64it/s] 10%|█         | 17080320/170498071 [00:05<00:43, 3496964.97it/s] 11%|█         | 17948672/170498071 [00:05<00:42, 3610740.21it/s] 10%|█         | 17113088/170498071 [00:05<00:44, 3480056.27it/s] 10%|█         | 17178624/170498071 [00:05<00:44, 3471941.24it/s] 10%|█         | 17440768/170498071 [00:05<00:43, 3491508.49it/s] 11%|█         | 18325504/170498071 [00:05<00:42, 3567578.58it/s] 10%|█         | 17473536/170498071 [00:05<00:43, 3482606.62it/s] 10%|█         | 17539072/170498071 [00:05<00:44, 3472043.72it/s] 10%|█         | 17801216/170498071 [00:05<00:43, 3487754.58it/s] 11%|█         | 18718720/170498071 [00:05<00:41, 3621758.23it/s] 10%|█         | 17866752/170498071 [00:05<00:43, 3525391.01it/s] 11%|█         | 17932288/170498071 [00:05<00:43, 3522385.21it/s] 11%|█         | 18194432/170498071 [00:05<00:43, 3536728.64it/s] 11%|█         | 19087360/170498071 [00:05<00:41, 3637130.37it/s] 11%|█         | 18227200/170498071 [00:05<00:43, 3507498.41it/s] 11%|█         | 18292736/170498071 [00:05<00:43, 3506959.28it/s] 11%|█         | 18554880/170498071 [00:05<00:43, 3514893.14it/s] 11%|█▏        | 19456000/170498071 [00:06<00:42, 3591884.88it/s] 11%|█         | 18587648/170498071 [00:06<00:43, 3498517.04it/s] 11%|█         | 18653184/170498071 [00:06<00:43, 3497371.97it/s] 11%|█         | 18915328/170498071 [00:06<00:43, 3506620.87it/s] 12%|█▏        | 19816448/170498071 [00:06<00:42, 3582111.72it/s] 11%|█         | 18972672/170498071 [00:06<00:42, 3596967.63it/s] 11%|█         | 19046400/170498071 [00:06<00:42, 3534466.53it/s] 11%|█▏        | 19308544/170498071 [00:06<00:42, 3544096.16it/s] 12%|█▏        | 20193280/170498071 [00:06<00:41, 3583267.94it/s] 11%|█▏        | 19341312/170498071 [00:06<00:42, 3567977.36it/s] 11%|█▏        | 19439616/170498071 [00:06<00:42, 3585821.55it/s] 12%|█▏        | 19701760/170498071 [00:06<00:41, 3591425.68it/s] 12%|█▏        | 20586496/170498071 [00:06<00:41, 3596171.62it/s] 12%|█▏        | 19701760/170498071 [00:06<00:42, 3574267.07it/s] 12%|█▏        | 19800064/170498071 [00:06<00:41, 3590345.61it/s] 12%|█▏        | 20086784/170498071 [00:06<00:41, 3665107.70it/s] 12%|█▏        | 20979712/170498071 [00:06<00:40, 3648921.15it/s] 12%|█▏        | 20062208/170498071 [00:06<00:42, 3572391.59it/s] 12%|█▏        | 20160512/170498071 [00:06<00:42, 3575130.74it/s] 12%|█▏        | 20455424/170498071 [00:06<00:42, 3550394.82it/s] 13%|█▎        | 21372928/170498071 [00:06<00:40, 3718717.35it/s] 12%|█▏        | 20455424/170498071 [00:06<00:41, 3587559.61it/s] 12%|█▏        | 20553728/170498071 [00:06<00:41, 3597982.95it/s] 12%|█▏        | 20848640/170498071 [00:06<00:41, 3581909.79it/s] 13%|█▎        | 21766144/170498071 [00:06<00:39, 3747034.98it/s] 12%|█▏        | 20848640/170498071 [00:06<00:41, 3609298.09it/s] 12%|█▏        | 20946944/170498071 [00:06<00:41, 3603687.40it/s] 12%|█▏        | 21233664/170498071 [00:06<00:40, 3658259.68it/s] 13%|█▎        | 22142976/170498071 [00:06<00:39, 3711279.96it/s] 12%|█▏        | 21217280/170498071 [00:06<00:41, 3593186.97it/s] 13%|█▎        | 21315584/170498071 [00:06<00:41, 3597065.80it/s] 13%|█▎        | 21602304/170498071 [00:06<00:42, 3535534.16it/s] 13%|█▎        | 22519808/170498071 [00:06<00:40, 3642659.55it/s] 13%|█▎        | 21577728/170498071 [00:06<00:41, 3574443.39it/s] 13%|█▎        | 21676032/170498071 [00:06<00:41, 3573791.03it/s] 13%|█▎        | 21995520/170498071 [00:06<00:41, 3592196.44it/s] 13%|█▎        | 22913024/170498071 [00:06<00:40, 3641461.93it/s] 13%|█▎        | 21938176/170498071 [00:06<00:42, 3536719.23it/s] 13%|█▎        | 22036480/170498071 [00:07<00:41, 3542314.92it/s] 13%|█▎        | 22364160/170498071 [00:07<00:41, 3602502.92it/s] 14%|█▎        | 23281664/170498071 [00:07<00:40, 3652420.18it/s] 13%|█▎        | 22298624/170498071 [00:07<00:42, 3493912.03it/s] 13%|█▎        | 22396928/170498071 [00:07<00:42, 3453091.98it/s] 13%|█▎        | 22732800/170498071 [00:07<00:40, 3624889.13it/s] 14%|█▍        | 23650304/170498071 [00:07<00:40, 3628405.42it/s] 13%|█▎        | 22650880/170498071 [00:07<00:43, 3394072.56it/s] 13%|█▎        | 22781952/170498071 [00:07<00:42, 3496656.18it/s] 14%|█▎        | 23109632/170498071 [00:07<00:41, 3573843.41it/s] 14%|█▍        | 24027136/170498071 [00:07<00:40, 3589079.20it/s] 13%|█▎        | 23011328/170498071 [00:07<00:42, 3433635.91it/s] 14%|█▎        | 23142400/170498071 [00:07<00:41, 3516630.58it/s] 14%|█▍        | 23502848/170498071 [00:07<00:40, 3603020.41it/s] 14%|█▍        | 24420352/170498071 [00:07<00:39, 3655003.86it/s] 14%|█▎        | 23404544/170498071 [00:07<00:41, 3515385.07it/s] 14%|█▍        | 23535616/170498071 [00:07<00:41, 3570065.72it/s] 14%|█▍        | 23896064/170498071 [00:07<00:40, 3618634.55it/s] 15%|█▍        | 24813568/170498071 [00:07<00:39, 3680536.77it/s] 14%|█▍        | 23764992/170498071 [00:07<00:41, 3514498.97it/s] 14%|█▍        | 23896064/170498071 [00:07<00:41, 3554294.68it/s] 14%|█▍        | 24289280/170498071 [00:07<00:39, 3681912.07it/s] 15%|█▍        | 25206784/170498071 [00:07<00:39, 3654968.93it/s] 14%|█▍        | 24125440/170498071 [00:07<00:41, 3507644.61it/s] 14%|█▍        | 24256512/170498071 [00:07<00:41, 3527239.39it/s] 14%|█▍        | 24666112/170498071 [00:07<00:39, 3669614.35it/s] 15%|█▌        | 25575424/170498071 [00:07<00:39, 3636684.75it/s] 14%|█▍        | 24518656/170498071 [00:07<00:41, 3543434.38it/s] 14%|█▍        | 24649728/170498071 [00:07<00:40, 3564927.14it/s] 15%|█▍        | 25042944/170498071 [00:07<00:40, 3627491.21it/s] 15%|█▌        | 25993216/170498071 [00:07<00:38, 3733627.03it/s] 15%|█▍        | 24879104/170498071 [00:07<00:40, 3555495.14it/s] 15%|█▍        | 25010176/170498071 [00:07<00:40, 3549234.88it/s] 15%|█▍        | 25436160/170498071 [00:07<00:39, 3693604.17it/s] 15%|█▌        | 26419200/170498071 [00:07<00:37, 3805029.53it/s] 15%|█▍        | 25239552/170498071 [00:07<00:40, 3557279.57it/s] 15%|█▍        | 25403392/170498071 [00:07<00:40, 3583961.81it/s] 15%|█▌        | 25829376/170498071 [00:07<00:39, 3692641.10it/s] 16%|█▌        | 26812416/170498071 [00:08<00:37, 3809224.33it/s] 15%|█▌        | 25632768/170498071 [00:08<00:40, 3588132.61it/s] 15%|█▌        | 25829376/170498071 [00:08<00:39, 3689115.16it/s] 15%|█▌        | 26206208/170498071 [00:08<00:38, 3707284.20it/s] 16%|█▌        | 27205632/170498071 [00:08<00:37, 3810063.15it/s] 15%|█▌        | 26025984/170498071 [00:08<00:39, 3633254.69it/s] 15%|█▌        | 26222592/170498071 [00:08<00:38, 3701113.89it/s] 16%|█▌        | 26583040/170498071 [00:08<00:39, 3681443.20it/s] 16%|█▌        | 27631616/170498071 [00:08<00:36, 3867988.54it/s] 15%|█▌        | 26419200/170498071 [00:08<00:39, 3674426.91it/s] 16%|█▌        | 26615808/170498071 [00:08<00:38, 3717229.80it/s] 16%|█▌        | 26976256/170498071 [00:08<00:38, 3700919.87it/s] 16%|█▋        | 28024832/170498071 [00:08<00:37, 3830433.11it/s] 16%|█▌        | 26787840/170498071 [00:08<00:39, 3663619.10it/s] 16%|█▌        | 26992640/170498071 [00:08<00:38, 3713650.92it/s] 16%|█▌        | 27369472/170498071 [00:08<00:38, 3743199.12it/s] 17%|█▋        | 28418048/170498071 [00:08<00:37, 3834939.28it/s] 16%|█▌        | 27172864/170498071 [00:08<00:39, 3648936.48it/s] 16%|█▌        | 27369472/170498071 [00:08<00:39, 3660938.35it/s] 16%|█▋        | 27762688/170498071 [00:08<00:38, 3713765.00it/s] 17%|█▋        | 28811264/170498071 [00:08<00:37, 3795653.47it/s] 16%|█▌        | 27541504/170498071 [00:08<00:39, 3633149.93it/s] 16%|█▋        | 27738112/170498071 [00:08<00:39, 3609998.53it/s] 17%|█▋        | 28155904/170498071 [00:08<00:38, 3725421.54it/s] 17%|█▋        | 29204480/170498071 [00:08<00:37, 3737982.33it/s] 16%|█▋        | 27910144/170498071 [00:08<00:39, 3602424.98it/s] 16%|█▋        | 28106752/170498071 [00:08<00:39, 3628345.37it/s] 17%|█▋        | 28540928/170498071 [00:08<00:37, 3761991.64it/s] 17%|█▋        | 29597696/170498071 [00:08<00:37, 3735946.69it/s] 17%|█▋        | 28286976/170498071 [00:08<00:39, 3572015.67it/s] 17%|█▋        | 28483584/170498071 [00:08<00:39, 3588928.05it/s] 17%|█▋        | 28917760/170498071 [00:08<00:38, 3694278.85it/s] 18%|█▊        | 29990912/170498071 [00:08<00:37, 3737765.47it/s] 17%|█▋        | 28680192/170498071 [00:08<00:39, 3596053.76it/s] 17%|█▋        | 28876800/170498071 [00:08<00:39, 3603329.48it/s] 17%|█▋        | 29302784/170498071 [00:08<00:37, 3739249.85it/s] 18%|█▊        | 30408704/170498071 [00:08<00:36, 3859264.86it/s] 17%|█▋        | 29073408/170498071 [00:08<00:38, 3641597.30it/s] 17%|█▋        | 29270016/170498071 [00:09<00:38, 3636239.96it/s] 17%|█▋        | 29696000/170498071 [00:09<00:37, 3726894.89it/s] 18%|█▊        | 30801920/170498071 [00:09<00:36, 3814740.86it/s] 17%|█▋        | 29442048/170498071 [00:09<00:39, 3611040.56it/s] 17%|█▋        | 29663232/170498071 [00:09<00:38, 3699510.96it/s] 18%|█▊        | 30072832/170498071 [00:09<00:37, 3718061.45it/s] 18%|█▊        | 31186944/170498071 [00:09<00:36, 3818257.18it/s] 17%|█▋        | 29827072/170498071 [00:09<00:38, 3615049.03it/s] 18%|█▊        | 30056448/170498071 [00:09<00:37, 3707629.40it/s] 18%|█▊        | 30449664/170498071 [00:09<00:38, 3675852.73it/s] 19%|█▊        | 31596544/170498071 [00:09<00:36, 3814226.47it/s] 18%|█▊        | 30220288/170498071 [00:09<00:38, 3674571.48it/s] 18%|█▊        | 30449664/170498071 [00:09<00:37, 3714876.71it/s] 18%|█▊        | 30842880/170498071 [00:09<00:37, 3691092.93it/s] 19%|█▉        | 31989760/170498071 [00:09<00:36, 3768778.57it/s] 18%|█▊        | 30588928/170498071 [00:09<00:38, 3637107.60it/s] 18%|█▊        | 30826496/170498071 [00:09<00:37, 3690148.77it/s] 18%|█▊        | 31219712/170498071 [00:09<00:37, 3673110.09it/s] 19%|█▉        | 32382976/170498071 [00:09<00:36, 3795918.00it/s] 18%|█▊        | 30957568/170498071 [00:09<00:38, 3643040.61it/s] 18%|█▊        | 31203328/170498071 [00:09<00:38, 3649724.23it/s] 19%|█▊        | 31596544/170498071 [00:09<00:38, 3642769.45it/s] 19%|█▉        | 32808960/170498071 [00:09<00:35, 3839921.29it/s] 18%|█▊        | 31334400/170498071 [00:09<00:38, 3649640.08it/s] 19%|█▊        | 31596544/170498071 [00:09<00:37, 3656431.80it/s] 19%|█▉        | 31989760/170498071 [00:09<00:38, 3644894.75it/s] 19%|█▉        | 33193984/170498071 [00:09<00:35, 3827282.07it/s] 19%|█▊        | 31703040/170498071 [00:09<00:37, 3653222.96it/s] 19%|█▊        | 31965184/170498071 [00:09<00:37, 3655651.33it/s] 19%|█▉        | 32358400/170498071 [00:09<00:37, 3651331.09it/s] 20%|█▉        | 33579008/170498071 [00:09<00:36, 3704285.94it/s] 19%|█▉        | 32071680/170498071 [00:09<00:38, 3585571.50it/s] 19%|█▉        | 32350208/170498071 [00:09<00:37, 3703015.25it/s] 19%|█▉        | 32727040/170498071 [00:09<00:37, 3655997.89it/s] 20%|█▉        | 33988608/170498071 [00:09<00:36, 3778708.01it/s] 19%|█▉        | 32448512/170498071 [00:09<00:37, 3633850.62it/s] 19%|█▉        | 32743424/170498071 [00:09<00:37, 3708848.51it/s] 19%|█▉        | 33103872/170498071 [00:09<00:37, 3625057.61it/s] 20%|██        | 34381824/170498071 [00:10<00:36, 3732630.70it/s] 19%|█▉        | 32817152/170498071 [00:10<00:38, 3587588.77it/s] 19%|█▉        | 33120256/170498071 [00:10<00:37, 3655031.10it/s] 20%|█▉        | 33497088/170498071 [00:10<00:37, 3644224.01it/s] 20%|██        | 34758656/170498071 [00:10<00:36, 3706519.73it/s] 19%|█▉        | 33177600/170498071 [00:10<00:38, 3555045.02it/s] 20%|█▉        | 33488896/170498071 [00:10<00:38, 3602648.52it/s] 20%|█▉        | 33865728/170498071 [00:10<00:38, 3590966.00it/s] 21%|██        | 35135488/170498071 [00:10<00:37, 3624622.76it/s] 20%|█▉        | 33538048/170498071 [00:10<00:38, 3547317.04it/s] 20%|█▉        | 33857536/170498071 [00:10<00:38, 3531176.02it/s] 20%|██        | 34250752/170498071 [00:10<00:38, 3572309.08it/s] 21%|██        | 35528704/170498071 [00:10<00:37, 3616193.81it/s] 20%|█▉        | 33898496/170498071 [00:10<00:39, 3494006.15it/s] 20%|██        | 34217984/170498071 [00:10<00:39, 3490154.73it/s] 20%|██        | 34643968/170498071 [00:10<00:37, 3612527.53it/s] 20%|██        | 34250752/170498071 [00:10<00:39, 3480723.31it/s] 21%|██        | 35921920/170498071 [00:10<00:37, 3618772.40it/s] 20%|██        | 34578432/170498071 [00:10<00:38, 3503264.93it/s] 21%|██        | 35012608/170498071 [00:10<00:37, 3612340.97it/s] 20%|██        | 34611200/170498071 [00:10<00:38, 3499380.73it/s] 21%|██▏       | 36290560/170498071 [00:10<00:37, 3619605.27it/s] 20%|██        | 34938880/170498071 [00:10<00:38, 3491140.99it/s] 21%|██        | 35381248/170498071 [00:10<00:37, 3589498.30it/s] 21%|██        | 34971648/170498071 [00:10<00:39, 3464922.43it/s] 22%|██▏       | 36659200/170498071 [00:10<00:37, 3570441.59it/s] 21%|██        | 35299328/170498071 [00:10<00:38, 3468575.52it/s] 21%|██        | 35741696/170498071 [00:10<00:38, 3538045.64it/s] 21%|██        | 35364864/170498071 [00:10<00:38, 3520017.17it/s] 22%|██▏       | 37036032/170498071 [00:10<00:37, 3551585.39it/s] 21%|██        | 35692544/170498071 [00:10<00:38, 3535505.05it/s] 21%|██        | 36118528/170498071 [00:10<00:37, 3546892.30it/s] 21%|██        | 35758080/170498071 [00:10<00:37, 3590288.78it/s] 22%|██▏       | 37429248/170498071 [00:10<00:36, 3613387.43it/s] 21%|██        | 36085760/170498071 [00:10<00:37, 3598693.58it/s] 21%|██▏       | 36511744/170498071 [00:10<00:37, 3606416.83it/s] 21%|██        | 36118528/170498071 [00:10<00:37, 3593143.76it/s] 22%|██▏       | 37797888/170498071 [00:10<00:36, 3632939.50it/s] 21%|██▏       | 36478976/170498071 [00:11<00:36, 3633236.55it/s] 22%|██▏       | 36904960/170498071 [00:11<00:36, 3632720.52it/s] 21%|██▏       | 36511744/170498071 [00:11<00:37, 3613891.62it/s] 22%|██▏       | 38182912/170498071 [00:11<00:36, 3619648.39it/s] 22%|██▏       | 36847616/170498071 [00:11<00:36, 3629666.47it/s] 22%|██▏       | 37273600/170498071 [00:11<00:36, 3627494.87it/s] 22%|██▏       | 36880384/170498071 [00:11<00:37, 3571966.25it/s] 23%|██▎       | 38576128/170498071 [00:11<00:36, 3614959.53it/s] 22%|██▏       | 37216256/170498071 [00:11<00:37, 3576933.49it/s] 22%|██▏       | 37658624/170498071 [00:11<00:36, 3626857.92it/s] 22%|██▏       | 37240832/170498071 [00:11<00:37, 3577738.64it/s] 23%|██▎       | 38969344/170498071 [00:11<00:35, 3673019.01it/s] 22%|██▏       | 37593088/170498071 [00:11<00:37, 3581702.92it/s] 22%|██▏       | 38051840/170498071 [00:11<00:36, 3663942.96it/s] 23%|██▎       | 39362560/170498071 [00:11<00:35, 3746585.19it/s] 22%|██▏       | 37625856/170498071 [00:11<00:37, 3563388.01it/s] 22%|██▏       | 37953536/170498071 [00:11<00:37, 3517302.87it/s] 23%|██▎       | 38445056/170498071 [00:11<00:35, 3670208.79it/s] 23%|██▎       | 39854080/170498071 [00:11<00:32, 3995307.42it/s] 22%|██▏       | 37986304/170498071 [00:11<00:37, 3534573.93it/s] 22%|██▏       | 38313984/170498071 [00:11<00:37, 3524059.69it/s] 23%|██▎       | 38813696/170498071 [00:11<00:36, 3653986.86it/s] 24%|██▎       | 40280064/170498071 [00:11<00:32, 4029325.65it/s] 23%|██▎       | 38379520/170498071 [00:11<00:36, 3579832.54it/s] 23%|██▎       | 38707200/170498071 [00:11<00:36, 3594136.11it/s] 23%|██▎       | 39198720/170498071 [00:11<00:35, 3667756.51it/s] 24%|██▍       | 40738816/170498071 [00:11<00:31, 4131701.19it/s] 23%|██▎       | 38772736/170498071 [00:11<00:36, 3607759.99it/s] 23%|██▎       | 39100416/170498071 [00:11<00:36, 3629640.86it/s] 23%|██▎       | 39591936/170498071 [00:11<00:35, 3677065.29it/s] 24%|██▍       | 41197568/170498071 [00:11<00:30, 4173385.30it/s] 23%|██▎       | 39165952/170498071 [00:11<00:36, 3614958.63it/s] 23%|██▎       | 39469056/170498071 [00:11<00:36, 3608149.76it/s] 23%|██▎       | 39960576/170498071 [00:11<00:35, 3641776.92it/s] 23%|██▎       | 39534592/170498071 [00:11<00:36, 3588119.38it/s] 24%|██▍       | 41623552/170498071 [00:11<00:32, 3968096.82it/s] 23%|██▎       | 39837696/170498071 [00:11<00:36, 3575061.73it/s] 24%|██▎       | 40345600/170498071 [00:11<00:35, 3650785.73it/s] 23%|██▎       | 39919616/170498071 [00:12<00:36, 3576955.75it/s] 25%|██▍       | 42024960/170498071 [00:12<00:32, 3908228.21it/s] 24%|██▎       | 40214528/170498071 [00:12<00:36, 3579253.06it/s] 24%|██▍       | 40738816/170498071 [00:12<00:35, 3671796.57it/s] 24%|██▎       | 40312832/170498071 [00:12<00:35, 3651105.19it/s] 25%|██▍       | 42426368/170498071 [00:12<00:32, 3882170.04it/s] 24%|██▍       | 40574976/170498071 [00:12<00:36, 3566871.44it/s] 24%|██▍       | 41107456/170498071 [00:12<00:35, 3659869.29it/s] 24%|██▍       | 40706048/170498071 [00:12<00:35, 3677291.32it/s] 25%|██▌       | 42819584/170498071 [00:12<00:33, 3838028.71it/s] 24%|██▍       | 40968192/170498071 [00:12<00:35, 3623515.52it/s] 24%|██▍       | 41492480/170498071 [00:12<00:35, 3666808.31it/s] 24%|██▍       | 41099264/170498071 [00:12<00:35, 3667201.31it/s] 25%|██▌       | 43212800/170498071 [00:12<00:33, 3806525.37it/s] 24%|██▍       | 41336832/170498071 [00:12<00:35, 3638576.25it/s] 25%|██▍       | 41885696/170498071 [00:12<00:34, 3739412.47it/s] 24%|██▍       | 41467904/170498071 [00:12<00:35, 3639503.32it/s] 26%|██▌       | 43597824/170498071 [00:12<00:34, 3716791.38it/s] 24%|██▍       | 41705472/170498071 [00:12<00:35, 3606988.05it/s] 25%|██▍       | 42262528/170498071 [00:12<00:34, 3699112.93it/s] 25%|██▍       | 41861120/170498071 [00:12<00:34, 3722554.72it/s] 26%|██▌       | 43982848/170498071 [00:12<00:34, 3707587.65it/s] 25%|██▍       | 42082304/170498071 [00:12<00:35, 3579865.25it/s] 25%|██▌       | 42639360/170498071 [00:12<00:35, 3647497.82it/s] 25%|██▍       | 42246144/170498071 [00:12<00:34, 3732329.24it/s] 26%|██▌       | 44376064/170498071 [00:12<00:33, 3739820.14it/s] 25%|██▍       | 42475520/170498071 [00:12<00:35, 3655648.62it/s] 25%|██▌       | 43032576/170498071 [00:12<00:34, 3706615.91it/s] 25%|██▌       | 42639360/170498071 [00:12<00:34, 3725222.31it/s] 26%|██▋       | 44769280/170498071 [00:12<00:33, 3725212.82it/s] 25%|██▌       | 42868736/170498071 [00:12<00:34, 3658494.69it/s] 25%|██▌       | 43425792/170498071 [00:12<00:34, 3686805.32it/s] 25%|██▌       | 43032576/170498071 [00:12<00:34, 3714750.74it/s] 26%|██▋       | 45162496/170498071 [00:12<00:33, 3728874.22it/s] 25%|██▌       | 43261952/170498071 [00:12<00:34, 3693289.55it/s] 26%|██▌       | 43819008/170498071 [00:12<00:34, 3717570.77it/s] 25%|██▌       | 43425792/170498071 [00:12<00:34, 3686275.23it/s] 27%|██▋       | 45555712/170498071 [00:12<00:33, 3779383.23it/s] 26%|██▌       | 43638784/170498071 [00:12<00:34, 3685196.54it/s] 26%|██▌       | 44212224/170498071 [00:12<00:33, 3750766.97it/s] 26%|██▌       | 43802624/170498071 [00:13<00:34, 3663216.61it/s] 27%|██▋       | 45940736/170498071 [00:13<00:32, 3777333.15it/s] 26%|██▌       | 44589056/170498071 [00:13<00:34, 3700384.92it/s] 26%|██▌       | 44015616/170498071 [00:13<00:35, 3568303.89it/s] 26%|██▌       | 44171264/170498071 [00:13<00:34, 3665594.90it/s] 27%|██▋       | 46325760/170498071 [00:13<00:33, 3724487.53it/s] 26%|██▌       | 44400640/170498071 [00:13<00:34, 3648294.64it/s] 26%|██▋       | 44965888/170498071 [00:13<00:34, 3630746.14it/s] 26%|██▌       | 44539904/170498071 [00:13<00:35, 3586569.96it/s] 27%|██▋       | 46702592/170498071 [00:13<00:33, 3691495.18it/s] 26%|██▋       | 44769280/170498071 [00:13<00:35, 3573689.88it/s] 27%|██▋       | 45359104/170498071 [00:13<00:34, 3627012.40it/s] 26%|██▋       | 44900352/170498071 [00:13<00:34, 3589970.35it/s] 28%|██▊       | 47095808/170498071 [00:13<00:33, 3699780.19it/s] 26%|██▋       | 45162496/170498071 [00:13<00:34, 3648933.40it/s] 27%|██▋       | 45727744/170498071 [00:13<00:34, 3621158.95it/s] 27%|██▋       | 45260800/170498071 [00:13<00:35, 3575689.57it/s] 28%|██▊       | 47489024/170498071 [00:13<00:33, 3680929.68it/s] 27%|██▋       | 45555712/170498071 [00:13<00:34, 3637865.35it/s] 27%|██▋       | 46112768/170498071 [00:13<00:34, 3592697.01it/s] 27%|██▋       | 45621248/170498071 [00:13<00:34, 3569071.21it/s] 28%|██▊       | 47882240/170498071 [00:13<00:33, 3697378.37it/s] 27%|██▋       | 45948928/170498071 [00:13<00:33, 3713951.29it/s] 27%|██▋       | 46505984/170498071 [00:13<00:33, 3688149.77it/s] 27%|██▋       | 45981696/170498071 [00:13<00:52, 2389860.66it/s] 28%|██▊       | 48259072/170498071 [00:13<00:50, 2421703.72it/s] 27%|██▋       | 46325760/170498071 [00:13<00:52, 2386013.25it/s] 27%|██▋       | 46882816/170498071 [00:13<00:52, 2372453.97it/s] 27%|██▋       | 46309376/170498071 [00:13<00:47, 2599144.07it/s] 28%|██▊       | 48570368/170498071 [00:13<00:47, 2579651.90it/s] 27%|██▋       | 46637056/170498071 [00:14<00:48, 2548648.00it/s] 28%|██▊       | 47194112/170498071 [00:14<00:48, 2542184.79it/s] 27%|██▋       | 46637056/170498071 [00:14<00:44, 2769192.41it/s] 29%|██▊       | 48930816/170498071 [00:14<00:43, 2764062.45it/s] 28%|██▊       | 46964736/170498071 [00:14<00:45, 2720053.98it/s] 28%|██▊       | 47554560/170498071 [00:14<00:44, 2779393.96it/s] 28%|██▊       | 46964736/170498071 [00:14<00:42, 2896969.83it/s] 29%|██▉       | 49291264/170498071 [00:14<00:40, 2963359.65it/s] 28%|██▊       | 47292416/170498071 [00:14<00:43, 2862030.36it/s] 28%|██▊       | 47915008/170498071 [00:14<00:41, 2980831.71it/s] 28%|██▊       | 47292416/170498071 [00:14<00:41, 2995214.53it/s] 29%|██▉       | 49651712/170498071 [00:14<00:39, 3075782.45it/s] 28%|██▊       | 47652864/170498071 [00:14<00:40, 3047688.92it/s] 28%|██▊       | 48250880/170498071 [00:14<00:39, 3078488.98it/s] 28%|██▊       | 47620096/170498071 [00:14<00:40, 3071327.69it/s] 29%|██▉       | 50012160/170498071 [00:14<00:40, 2992378.08it/s] 28%|██▊       | 47980544/170498071 [00:14<00:41, 2961439.07it/s] 28%|██▊       | 48586752/170498071 [00:14<00:40, 3012322.05it/s] 28%|██▊       | 47947776/170498071 [00:14<00:40, 3056011.84it/s] 28%|██▊       | 48373760/170498071 [00:14<00:38, 3178994.93it/s] 30%|██▉       | 50438144/170498071 [00:14<00:36, 3248644.23it/s] 29%|██▊       | 48996352/170498071 [00:14<00:37, 3246872.34it/s] 28%|██▊       | 48308224/170498071 [00:14<00:38, 3196455.10it/s] 29%|██▊       | 48734208/170498071 [00:14<00:37, 3273506.36it/s] 30%|██▉       | 50798592/170498071 [00:14<00:36, 3324814.03it/s] 29%|██▉       | 49356800/170498071 [00:14<00:36, 3321295.78it/s] 29%|██▊       | 48668672/170498071 [00:14<00:37, 3271830.24it/s] 29%|██▉       | 49094656/170498071 [00:14<00:36, 3290283.41it/s] 30%|███       | 51159040/170498071 [00:14<00:35, 3326327.62it/s] 29%|██▉       | 49717248/170498071 [00:14<00:36, 3324414.37it/s] 29%|██▉       | 49029120/170498071 [00:14<00:36, 3290066.34it/s] 29%|██▉       | 49455104/170498071 [00:14<00:36, 3348928.13it/s] 30%|███       | 51519488/170498071 [00:14<00:35, 3375018.33it/s] 29%|██▉       | 50077696/170498071 [00:14<00:35, 3380798.06it/s] 29%|██▉       | 49414144/170498071 [00:14<00:35, 3440111.08it/s] 29%|██▉       | 49815552/170498071 [00:14<00:35, 3374995.57it/s] 30%|███       | 51879936/170498071 [00:14<00:34, 3393458.25it/s] 30%|██▉       | 50438144/170498071 [00:14<00:35, 3391550.96it/s] 29%|██▉       | 49766400/170498071 [00:14<00:35, 3379605.91it/s] 29%|██▉       | 50159616/170498071 [00:15<00:35, 3391840.41it/s] 31%|███       | 52224000/170498071 [00:15<00:34, 3404441.13it/s] 30%|██▉       | 50782208/170498071 [00:15<00:35, 3403251.24it/s] 29%|██▉       | 50110464/170498071 [00:15<00:36, 3300467.79it/s] 30%|██▉       | 50503680/170498071 [00:15<00:35, 3338454.22it/s] 31%|███       | 52568064/170498071 [00:15<00:35, 3347536.74it/s] 30%|██▉       | 51126272/170498071 [00:15<00:35, 3346645.19it/s] 30%|██▉       | 50470912/170498071 [00:15<00:36, 3327308.19it/s] 30%|██▉       | 50864128/170498071 [00:15<00:35, 3353415.85it/s] 31%|███       | 52928512/170498071 [00:15<00:34, 3359785.24it/s] 30%|███       | 51486720/170498071 [00:15<00:35, 3357413.15it/s] 30%|██▉       | 50831360/170498071 [00:15<00:35, 3333953.44it/s] 30%|███       | 51224576/170498071 [00:15<00:35, 3352709.50it/s] 31%|███▏      | 53288960/170498071 [00:15<00:34, 3357147.99it/s] 30%|███       | 51847168/170498071 [00:15<00:35, 3355742.27it/s] 30%|███       | 51191808/170498071 [00:15<00:35, 3339189.47it/s] 30%|███       | 51585024/170498071 [00:15<00:35, 3352746.02it/s] 31%|███▏      | 53649408/170498071 [00:15<00:34, 3355883.09it/s] 31%|███       | 52207616/170498071 [00:15<00:35, 3360649.53it/s] 30%|███       | 51552256/170498071 [00:15<00:35, 3352174.86it/s] 30%|███       | 51945472/170498071 [00:15<00:34, 3398006.34it/s] 32%|███▏      | 54009856/170498071 [00:15<00:34, 3400605.54it/s] 31%|███       | 52568064/170498071 [00:15<00:34, 3403214.08it/s] 30%|███       | 51912704/170498071 [00:15<00:35, 3354368.87it/s] 31%|███       | 52305920/170498071 [00:15<00:34, 3427016.66it/s] 31%|███       | 52912128/170498071 [00:15<00:34, 3382340.55it/s] 32%|███▏      | 54370304/170498071 [00:15<00:34, 3367362.44it/s] 31%|███       | 52273152/170498071 [00:15<00:35, 3335372.09it/s] 31%|███       | 52666368/170498071 [00:15<00:34, 3403000.17it/s] 32%|███▏      | 54730752/170498071 [00:15<00:33, 3423384.13it/s] 31%|███       | 53256192/170498071 [00:15<00:35, 3320460.43it/s] 31%|███       | 52633600/170498071 [00:15<00:35, 3347567.48it/s] 32%|███▏      | 55091200/170498071 [00:15<00:33, 3453112.35it/s] 31%|███       | 53026816/170498071 [00:15<00:34, 3369125.09it/s] 31%|███▏      | 53616640/170498071 [00:15<00:35, 3313210.22it/s] 31%|███       | 52969472/170498071 [00:15<00:35, 3345022.50it/s] 33%|███▎      | 55451648/170498071 [00:16<00:33, 3425693.39it/s] 32%|███▏      | 53977088/170498071 [00:16<00:34, 3394723.68it/s] 31%|███▏      | 53387264/170498071 [00:16<00:35, 3343895.09it/s] 31%|███▏      | 53321728/170498071 [00:16<00:35, 3320280.55it/s] 33%|███▎      | 55820288/170498071 [00:16<00:32, 3499824.56it/s] 32%|███▏      | 54337536/170498071 [00:16<00:33, 3429127.37it/s] 32%|███▏      | 53747712/170498071 [00:16<00:34, 3394383.36it/s] 31%|███▏      | 53682176/170498071 [00:16<00:34, 3370130.79it/s] 33%|███▎      | 56172544/170498071 [00:16<00:32, 3467451.34it/s] 32%|███▏      | 54697984/170498071 [00:16<00:33, 3408089.92it/s] 32%|███▏      | 54108160/170498071 [00:16<00:34, 3377372.26it/s] 32%|███▏      | 54026240/170498071 [00:16<00:34, 3390651.74it/s] 33%|███▎      | 56532992/170498071 [00:16<00:33, 3440990.04it/s] 32%|███▏      | 55042048/170498071 [00:16<00:33, 3416608.86it/s] 32%|███▏      | 54468608/170498071 [00:16<00:34, 3371864.13it/s] 32%|███▏      | 54370304/170498071 [00:16<00:34, 3373786.64it/s] 33%|███▎      | 56958976/170498071 [00:16<00:31, 3614020.88it/s] 33%|███▎      | 55418880/170498071 [00:16<00:33, 3449490.88it/s] 32%|███▏      | 54861824/170498071 [00:16<00:33, 3446911.94it/s] 32%|███▏      | 54763520/170498071 [00:16<00:33, 3441108.92it/s] 34%|███▎      | 57327616/170498071 [00:16<00:31, 3633618.25it/s] 33%|███▎      | 55812096/170498071 [00:16<00:32, 3511790.74it/s] 32%|███▏      | 55222272/170498071 [00:16<00:33, 3407296.62it/s] 32%|███▏      | 55115776/170498071 [00:16<00:33, 3458231.78it/s] 34%|███▍      | 57696256/170498071 [00:16<00:31, 3563472.37it/s] 33%|███▎      | 56164352/170498071 [00:16<00:32, 3493400.98it/s] 33%|███▎      | 55582720/170498071 [00:16<00:33, 3448813.18it/s] 33%|███▎      | 55468032/170498071 [00:16<00:34, 3373277.19it/s] 34%|███▍      | 58056704/170498071 [00:16<00:32, 3480916.61it/s] 33%|███▎      | 56516608/170498071 [00:16<00:33, 3409865.87it/s] 33%|███▎      | 55943168/170498071 [00:16<00:33, 3404553.15it/s] 33%|███▎      | 55812096/170498071 [00:16<00:34, 3302259.35it/s] 34%|███▍      | 58408960/170498071 [00:16<00:32, 3420900.14it/s] 33%|███▎      | 56860672/170498071 [00:16<00:33, 3357125.83it/s] 33%|███▎      | 56303616/170498071 [00:16<00:33, 3411658.50it/s] 33%|███▎      | 56172544/170498071 [00:16<00:34, 3339390.47it/s] 34%|███▎      | 57221120/170498071 [00:16<00:33, 3399676.71it/s] 34%|███▍      | 58793984/170498071 [00:16<00:32, 3456686.82it/s] 33%|███▎      | 56664064/170498071 [00:16<00:33, 3441600.41it/s] 33%|███▎      | 56532992/170498071 [00:16<00:33, 3393894.05it/s] 34%|███▍      | 57614336/170498071 [00:17<00:32, 3497940.20it/s] 35%|███▍      | 59187200/170498071 [00:17<00:31, 3539557.22it/s] 33%|███▎      | 57057280/170498071 [00:17<00:32, 3541485.89it/s] 33%|███▎      | 56958976/170498071 [00:17<00:31, 3555984.79it/s] 34%|███▍      | 57966592/170498071 [00:17<00:48, 2309036.48it/s] 35%|███▍      | 59547648/170498071 [00:17<00:47, 2336912.90it/s] 34%|███▎      | 57417728/170498071 [00:17<00:48, 2343798.02it/s] 34%|███▎      | 57319424/170498071 [00:17<00:49, 2278699.84it/s] 34%|███▍      | 58302464/170498071 [00:17<00:44, 2517106.75it/s] 35%|███▌      | 59908096/170498071 [00:17<00:42, 2582127.07it/s] 34%|███▍      | 57778176/170498071 [00:17<00:43, 2582560.21it/s] 34%|███▍      | 57679872/170498071 [00:17<00:44, 2512905.83it/s] 34%|███▍      | 58662912/170498071 [00:17<00:41, 2713004.57it/s] 35%|███▌      | 60268544/170498071 [00:17<00:39, 2784720.05it/s] 34%|███▍      | 58138624/170498071 [00:17<00:40, 2766762.08it/s] 34%|███▍      | 58040320/170498071 [00:17<00:41, 2714235.13it/s] 35%|███▍      | 59023360/170498071 [00:17<00:38, 2882693.13it/s] 36%|███▌      | 60628992/170498071 [00:17<00:37, 2939024.83it/s] 34%|███▍      | 58499072/170498071 [00:17<00:38, 2922008.87it/s] 34%|███▍      | 58400768/170498071 [00:17<00:39, 2869936.43it/s] 35%|███▍      | 59383808/170498071 [00:17<00:37, 2997021.74it/s] 36%|███▌      | 60989440/170498071 [00:17<00:36, 3039473.19it/s] 35%|███▍      | 58859520/170498071 [00:17<00:36, 3028832.82it/s] 34%|███▍      | 58761216/170498071 [00:17<00:37, 3002662.22it/s] 35%|███▌      | 59744256/170498071 [00:17<00:35, 3111147.85it/s] 36%|███▌      | 61349888/170498071 [00:17<00:34, 3142995.65it/s] 35%|███▍      | 59219968/170498071 [00:17<00:35, 3135792.28it/s] 35%|███▍      | 59121664/170498071 [00:17<00:35, 3119216.57it/s] 35%|███▌      | 60104704/170498071 [00:17<00:34, 3193550.05it/s] 36%|███▌      | 61710336/170498071 [00:17<00:33, 3217017.78it/s] 35%|███▍      | 59580416/170498071 [00:17<00:34, 3213214.32it/s] 35%|███▍      | 59482112/170498071 [00:18<00:34, 3198073.64it/s] 35%|███▌      | 60465152/170498071 [00:18<00:34, 3235308.84it/s] 36%|███▋      | 62070784/170498071 [00:18<00:33, 3252147.40it/s] 35%|███▌      | 59940864/170498071 [00:18<00:33, 3257908.21it/s] 35%|███▌      | 59842560/170498071 [00:18<00:33, 3264777.18it/s] 37%|███▋      | 62431232/170498071 [00:18<00:32, 3339009.11it/s] 36%|███▌      | 60858368/170498071 [00:18<00:32, 3381293.55it/s] 35%|███▌      | 60301312/170498071 [00:18<00:33, 3324190.52it/s] 35%|███▌      | 60203008/170498071 [00:18<00:32, 3351404.64it/s] 36%|███▌      | 61218816/170498071 [00:18<00:31, 3439459.46it/s] 37%|███▋      | 62824448/170498071 [00:18<00:31, 3435918.51it/s] 36%|███▌      | 60694528/170498071 [00:18<00:31, 3457834.93it/s] 36%|███▌      | 60563456/170498071 [00:18<00:32, 3379155.95it/s] 36%|███▌      | 61579264/170498071 [00:18<00:31, 3421645.96it/s] 37%|███▋      | 63184896/170498071 [00:18<00:31, 3418025.63it/s] 36%|███▌      | 61054976/170498071 [00:18<00:31, 3428024.21it/s] 36%|███▌      | 60956672/170498071 [00:18<00:31, 3446807.73it/s] 36%|███▋      | 61939712/170498071 [00:18<00:31, 3419543.50it/s] 36%|███▌      | 61415424/170498071 [00:18<00:31, 3444854.86it/s] 36%|███▌      | 61349888/170498071 [00:18<00:31, 3502087.44it/s] 37%|███▋      | 63537152/170498071 [00:18<00:39, 2727304.83it/s] 37%|███▋      | 62332928/170498071 [00:18<00:31, 3481314.89it/s] 36%|███▋      | 61808640/170498071 [00:18<00:31, 3486850.08it/s] 36%|███▌      | 61710336/170498071 [00:18<00:31, 3494138.78it/s] 37%|███▋      | 62693376/170498071 [00:18<00:31, 3475014.26it/s] 36%|███▋      | 62169088/170498071 [00:18<00:31, 3481264.24it/s] 37%|███▋      | 63840256/170498071 [00:18<00:44, 2389470.22it/s] 36%|███▋      | 62070784/170498071 [00:18<00:30, 3505378.75it/s] 37%|███▋      | 63086592/170498071 [00:18<00:30, 3543085.21it/s] 37%|███▋      | 62562304/170498071 [00:18<00:30, 3563964.56it/s] 37%|███▋      | 62464000/170498071 [00:18<00:30, 3560893.30it/s] 38%|███▊      | 64110592/170498071 [00:18<00:47, 2227239.29it/s] 37%|███▋      | 63447040/170498071 [00:18<00:30, 3549084.61it/s] 37%|███▋      | 62955520/170498071 [00:18<00:29, 3647254.63it/s] 37%|███▋      | 62840832/170498071 [00:18<00:29, 3620462.87it/s] 38%|███▊      | 64356352/170498071 [00:19<00:49, 2164839.29it/s] 37%|███▋      | 63840256/170498071 [00:19<00:29, 3573450.87it/s] 37%|███▋      | 63348736/170498071 [00:19<00:29, 3621916.62it/s] 37%|███▋      | 63209472/170498071 [00:19<00:29, 3589289.55it/s] 38%|███▊      | 64200704/170498071 [00:19<00:30, 3518269.44it/s] 38%|███▊      | 64593920/170498071 [00:19<00:50, 2100707.77it/s] 37%|███▋      | 63741952/170498071 [00:19<00:29, 3660470.04it/s] 37%|███▋      | 63569920/170498071 [00:19<00:30, 3542843.32it/s] 38%|███▊      | 64561152/170498071 [00:19<00:30, 3469342.66it/s] 38%|███▊      | 64815104/170498071 [00:19<00:52, 2020666.01it/s] 38%|███▊      | 64110592/170498071 [00:19<00:29, 3595083.56it/s] 37%|███▋      | 63930368/170498071 [00:19<00:30, 3525238.37it/s] 38%|███▊      | 64921600/170498071 [00:19<00:30, 3506728.50it/s] 38%|███▊      | 64471040/170498071 [00:19<00:29, 3590211.24it/s] 38%|███▊      | 65028096/170498071 [00:19<00:52, 2026437.59it/s] 38%|███▊      | 64290816/170498071 [00:19<00:31, 3326720.12it/s] 38%|███▊      | 65282048/170498071 [00:19<00:30, 3499457.68it/s] 38%|███▊      | 65241088/170498071 [00:19<00:51, 2047189.69it/s] 38%|███▊      | 64856064/170498071 [00:19<00:29, 3586242.09it/s] 38%|███▊      | 64757760/170498071 [00:19<00:29, 3618611.06it/s] 39%|███▊      | 65740800/170498071 [00:19<00:27, 3745473.65it/s] 38%|███▊      | 65314816/170498071 [00:19<00:27, 3786311.91it/s] 38%|███▊      | 65454080/170498071 [00:19<00:53, 1966400.86it/s] 38%|███▊      | 65183744/170498071 [00:19<00:28, 3716244.23it/s] 39%|███▉      | 66166784/170498071 [00:19<00:27, 3831714.98it/s] 39%|███▊      | 65740800/170498071 [00:19<00:27, 3828621.99it/s] 39%|███▊      | 65675264/170498071 [00:19<00:54, 1917912.04it/s] 38%|███▊      | 65576960/170498071 [00:19<00:27, 3770695.57it/s] 39%|███▉      | 66560000/170498071 [00:19<00:27, 3821509.38it/s] 39%|███▉      | 66166784/170498071 [00:19<00:27, 3859043.64it/s] 39%|███▊      | 65871872/170498071 [00:19<00:54, 1920132.40it/s] 39%|███▊      | 65970176/170498071 [00:19<00:27, 3747081.19it/s] 39%|███▉      | 66953216/170498071 [00:19<00:27, 3825079.98it/s] 39%|███▉      | 66592768/170498071 [00:19<00:26, 3959436.36it/s] 39%|███▉      | 66117632/170498071 [00:19<00:51, 2045544.68it/s] 39%|███▉      | 66363392/170498071 [00:19<00:27, 3748492.12it/s] 39%|███▉      | 67338240/170498071 [00:19<00:27, 3704141.17it/s] 39%|███▉      | 66994176/170498071 [00:19<00:26, 3969057.73it/s] 39%|███▉      | 66330624/170498071 [00:20<00:53, 1953508.92it/s] 39%|███▉      | 66789376/170498071 [00:20<00:27, 3811982.77it/s] 40%|███▉      | 67715072/170498071 [00:20<00:28, 3599873.86it/s] 40%|███▉      | 67395584/170498071 [00:20<00:26, 3954977.54it/s] 39%|███▉      | 66560000/170498071 [00:20<00:52, 1996699.07it/s] 39%|███▉      | 67215360/170498071 [00:20<00:26, 3921999.11it/s] 40%|███▉      | 67837952/170498071 [00:20<00:25, 4081801.59it/s] 40%|███▉      | 67772416/170498071 [00:20<00:24, 4231342.93it/s] 40%|███▉      | 68083712/170498071 [00:20<00:35, 2903984.82it/s] 39%|███▉      | 66764800/170498071 [00:20<00:57, 1801424.43it/s] 40%|████      | 68296704/170498071 [00:20<00:24, 4169627.46it/s] 40%|████      | 68206592/170498071 [00:20<00:24, 4137732.32it/s] 40%|████      | 68493312/170498071 [00:20<00:32, 3155578.77it/s] 39%|███▉      | 66953216/170498071 [00:20<00:57, 1806996.18it/s] 40%|████      | 68755456/170498071 [00:20<00:23, 4245713.43it/s] 40%|████      | 68755456/170498071 [00:20<00:23, 4404742.32it/s] 40%|████      | 68837376/170498071 [00:20<00:32, 3167476.37it/s] 39%|███▉      | 67141632/170498071 [00:20<00:59, 1746484.30it/s] 41%|████      | 69378048/170498071 [00:20<00:21, 4676232.36it/s] 41%|████      | 69410816/170498071 [00:20<00:20, 4829759.46it/s] 41%|████      | 70066176/170498071 [00:20<00:19, 5145706.52it/s] 41%|████      | 69173248/170498071 [00:20<00:34, 2923126.12it/s] 39%|███▉      | 67321856/170498071 [00:20<01:02, 1648092.93it/s] 41%|████      | 70098944/170498071 [00:20<00:19, 5266325.34it/s] 41%|████▏     | 70688768/170498071 [00:20<00:18, 5382368.79it/s] 40%|███▉      | 67493888/170498071 [00:20<01:03, 1619511.56it/s] 41%|████      | 69484544/170498071 [00:20<00:36, 2730631.83it/s] 41%|████▏     | 70656000/170498071 [00:20<00:18, 5347307.93it/s] 42%|████▏     | 71254016/170498071 [00:20<00:18, 5424840.76it/s] 40%|███▉      | 67665920/170498071 [00:20<01:03, 1629737.25it/s] 41%|████      | 69771264/170498071 [00:20<00:37, 2675669.52it/s] 42%|████▏     | 71278592/170498071 [00:20<00:17, 5548591.38it/s] 42%|████▏     | 71933952/170498071 [00:20<00:17, 5722036.06it/s] 40%|███▉      | 67837952/170498071 [00:20<01:06, 1554447.26it/s] 41%|████      | 70066176/170498071 [00:20<00:36, 2723166.73it/s] 42%|████▏     | 71852032/170498071 [00:20<00:17, 5594422.05it/s] 43%|████▎     | 72523776/170498071 [00:21<00:17, 5544859.30it/s] 40%|███▉      | 68018176/170498071 [00:21<01:03, 1612359.28it/s] 41%|████▏     | 70352896/170498071 [00:21<00:36, 2748439.28it/s] 42%|████▏     | 72425472/170498071 [00:21<00:17, 5480961.50it/s] 43%|████▎     | 73097216/170498071 [00:21<00:17, 5563393.19it/s] 40%|███▉      | 68182016/170498071 [00:21<01:03, 1603885.90it/s] 41%|████▏     | 70639616/170498071 [00:21<00:36, 2746219.52it/s] 43%|████▎     | 72982528/170498071 [00:21<00:17, 5504401.14it/s] 43%|████▎     | 73670656/170498071 [00:21<00:17, 5520479.73it/s] 42%|████▏     | 70934528/170498071 [00:21<00:35, 2794179.59it/s] 40%|████      | 68362240/170498071 [00:21<01:03, 1612379.61it/s] 43%|████▎     | 73539584/170498071 [00:21<00:17, 5465900.26it/s] 44%|████▎     | 74235904/170498071 [00:21<00:17, 5444203.25it/s] 40%|████      | 68526080/170498071 [00:21<01:03, 1601826.16it/s] 42%|████▏     | 71229440/170498071 [00:21<00:35, 2800735.82it/s] 43%|████▎     | 74096640/170498071 [00:21<00:17, 5423741.82it/s] 44%|████▍     | 74792960/170498071 [00:21<00:17, 5481401.64it/s] 40%|████      | 68706304/170498071 [00:21<01:02, 1638187.26it/s] 42%|████▏     | 71516160/170498071 [00:21<00:36, 2747664.78it/s] 44%|████▍     | 74645504/170498071 [00:21<00:17, 5440573.57it/s] 44%|████▍     | 75350016/170498071 [00:21<00:17, 5494556.37it/s] 40%|████      | 68886528/170498071 [00:21<01:01, 1658849.51it/s] 42%|████▏     | 71835648/170498071 [00:21<00:35, 2810488.22it/s] 44%|████▍     | 75194368/170498071 [00:21<00:18, 5285415.86it/s] 45%|████▍     | 75907072/170498071 [00:21<00:17, 5278335.46it/s] 41%|████      | 69066752/170498071 [00:21<01:00, 1671162.86it/s] 42%|████▏     | 72130560/170498071 [00:21<00:35, 2754544.47it/s] 44%|████▍     | 75735040/170498071 [00:21<00:17, 5294491.69it/s] 45%|████▍     | 76480512/170498071 [00:21<00:17, 5407345.81it/s] 41%|████      | 69246976/170498071 [00:21<01:01, 1649539.63it/s] 42%|████▏     | 72458240/170498071 [00:21<00:34, 2844935.43it/s] 45%|████▍     | 76324864/170498071 [00:21<00:17, 5418609.00it/s] 45%|████▌     | 77078528/170498071 [00:21<00:17, 5475600.21it/s] 41%|████      | 69443584/170498071 [00:21<00:59, 1690547.06it/s] 45%|████▌     | 76873728/170498071 [00:21<00:17, 5396280.34it/s] 43%|████▎     | 72785920/170498071 [00:21<00:34, 2859500.63it/s] 46%|████▌     | 77635584/170498071 [00:21<00:17, 5265385.41it/s] 45%|████▌     | 77422592/170498071 [00:22<00:17, 5384395.29it/s] 43%|████▎     | 73113600/170498071 [00:22<00:33, 2932951.46it/s] 41%|████      | 69640192/170498071 [00:22<01:00, 1668268.24it/s] 46%|████▌     | 78241792/170498071 [00:22<00:16, 5480395.52it/s] 46%|████▌     | 77996032/170498071 [00:22<00:16, 5450548.87it/s] 43%|████▎     | 73408512/170498071 [00:22<00:33, 2888323.46it/s] 41%|████      | 69836800/170498071 [00:22<00:59, 1684052.34it/s] 46%|████▌     | 78798848/170498071 [00:22<00:17, 5358976.73it/s] 46%|████▌     | 78585856/170498071 [00:22<00:16, 5529993.69it/s] 41%|████      | 70033408/170498071 [00:22<00:58, 1727065.22it/s] 43%|████▎     | 73703424/170498071 [00:22<00:39, 2473838.25it/s] 47%|████▋     | 79536128/170498071 [00:22<00:15, 5802115.59it/s] 46%|████▋     | 79142912/170498071 [00:22<00:16, 5414455.20it/s] 41%|████      | 70213632/170498071 [00:22<00:58, 1718277.07it/s] 47%|████▋     | 80134144/170498071 [00:22<00:15, 5689498.90it/s] 43%|████▎     | 74096640/170498071 [00:22<00:35, 2707592.37it/s] 47%|████▋     | 79732736/170498071 [00:22<00:16, 5494478.43it/s] 41%|████▏     | 70393856/170498071 [00:22<00:59, 1696624.90it/s] 47%|████▋     | 80748544/170498071 [00:22<00:15, 5791307.01it/s] 44%|████▎     | 74383360/170498071 [00:22<00:37, 2535460.55it/s] 47%|████▋     | 80388096/170498071 [00:22<00:15, 5714548.95it/s] 41%|████▏     | 70590464/170498071 [00:22<00:59, 1687893.06it/s] 48%|████▊     | 81338368/170498071 [00:22<00:15, 5807118.18it/s] 47%|████▋     | 80977920/170498071 [00:22<00:15, 5671160.78it/s] 44%|████▍     | 74653696/170498071 [00:22<00:39, 2415817.86it/s] 42%|████▏     | 70787072/170498071 [00:22<00:58, 1695358.38it/s] 48%|████▊     | 81928192/170498071 [00:22<00:15, 5547744.32it/s] 48%|████▊     | 81567744/170498071 [00:22<00:15, 5689130.34it/s] 44%|████▍     | 74907648/170498071 [00:22<00:39, 2421091.62it/s] 42%|████▏     | 71000064/170498071 [00:22<00:55, 1790917.08it/s] 48%|████▊     | 82583552/170498071 [00:22<00:15, 5814687.49it/s] 48%|████▊     | 82190336/170498071 [00:22<00:15, 5772039.85it/s] 44%|████▍     | 75161600/170498071 [00:22<00:40, 2345404.75it/s] 42%|████▏     | 71188480/170498071 [00:22<00:56, 1761115.73it/s] 49%|████▉     | 83173376/170498071 [00:22<00:15, 5656538.28it/s] 49%|████▊     | 82780160/170498071 [00:22<00:15, 5727968.97it/s] 44%|████▍     | 75407360/170498071 [00:23<00:42, 2241898.64it/s] 42%|████▏     | 71376896/170498071 [00:23<00:56, 1760629.41it/s] 49%|████▉     | 83763200/170498071 [00:23<00:15, 5642980.88it/s] 49%|████▉     | 83361792/170498071 [00:23<00:15, 5701246.74it/s] 44%|████▍     | 75669504/170498071 [00:23<00:40, 2331519.82it/s] 42%|████▏     | 71573504/170498071 [00:23<00:55, 1773929.37it/s] 49%|████▉     | 84385792/170498071 [00:23<00:15, 5728899.66it/s] 49%|████▉     | 83935232/170498071 [00:23<00:15, 5590868.81it/s] 45%|████▍     | 75907072/170498071 [00:23<00:40, 2311496.59it/s] 42%|████▏     | 71786496/170498071 [00:23<00:53, 1860552.72it/s] 50%|████▉     | 84975616/170498071 [00:23<00:14, 5712245.53it/s] 50%|████▉     | 84516864/170498071 [00:23<00:15, 5655295.71it/s] 45%|████▍     | 76161024/170498071 [00:23<00:40, 2343450.35it/s] 42%|████▏     | 71983104/170498071 [00:23<00:53, 1848660.12it/s] 50%|█████     | 85565440/170498071 [00:23<00:14, 5742962.18it/s] 50%|████▉     | 85139456/170498071 [00:23<00:14, 5691553.77it/s] 45%|████▍     | 76414976/170498071 [00:23<00:39, 2398583.18it/s] 51%|█████     | 86188032/170498071 [00:23<00:14, 5870097.32it/s] 42%|████▏     | 72196096/170498071 [00:23<00:52, 1859171.97it/s] 50%|█████     | 85762048/170498071 [00:23<00:14, 5787740.91it/s] 45%|████▍     | 76660736/170498071 [00:23<00:40, 2340701.22it/s] 51%|█████     | 86843392/170498071 [00:23<00:14, 5949265.14it/s] 42%|████▏     | 72392704/170498071 [00:23<00:52, 1853245.48it/s] 51%|█████     | 86417408/170498071 [00:23<00:14, 5908376.03it/s] 45%|████▌     | 76914688/170498071 [00:23<00:39, 2348662.58it/s] 51%|█████▏    | 87465984/170498071 [00:23<00:13, 6027650.93it/s] 43%|████▎     | 72605696/170498071 [00:23<00:51, 1910476.75it/s] 51%|█████     | 87105536/170498071 [00:23<00:13, 6036841.29it/s] 45%|████▌     | 77176832/170498071 [00:23<00:39, 2386289.72it/s] 52%|█████▏    | 88088576/170498071 [00:23<00:13, 6007992.33it/s] 43%|████▎     | 72818688/170498071 [00:23<00:51, 1902612.69it/s] 51%|█████▏    | 87793664/170498071 [00:23<00:13, 6180145.34it/s] 45%|████▌     | 77438976/170498071 [00:23<00:38, 2393592.65it/s] 52%|█████▏    | 88743936/170498071 [00:23<00:13, 6064115.31it/s] 43%|████▎     | 73015296/170498071 [00:23<00:50, 1918581.29it/s] 52%|█████▏    | 88416256/170498071 [00:23<00:13, 6152581.31it/s] 46%|████▌     | 77701120/170498071 [00:23<00:38, 2422075.37it/s] 52%|█████▏    | 89366528/170498071 [00:23<00:13, 6103381.82it/s] 43%|████▎     | 73244672/170498071 [00:23<00:50, 1932691.20it/s] 52%|█████▏    | 89038848/170498071 [00:24<00:13, 6046357.30it/s] 46%|████▌     | 77963264/170498071 [00:24<00:38, 2395928.11it/s] 43%|████▎     | 73457664/170498071 [00:24<00:48, 1984235.73it/s] 53%|█████▎    | 90054656/170498071 [00:24<00:15, 5108337.56it/s] 53%|█████▎    | 89645056/170498071 [00:24<00:15, 5214406.84it/s] 46%|████▌     | 78225408/170498071 [00:24<00:37, 2458646.45it/s] 43%|████▎     | 73670656/170498071 [00:24<00:48, 2006702.67it/s] 53%|█████▎    | 90710016/170498071 [00:24<00:14, 5404878.31it/s] 53%|█████▎    | 90251264/170498071 [00:24<00:14, 5435468.24it/s] 46%|████▌     | 78487552/170498071 [00:24<00:37, 2461106.46it/s] 43%|████▎     | 73875456/170498071 [00:24<00:48, 1999340.96it/s] 54%|█████▎    | 91332608/170498071 [00:24<00:14, 5530809.09it/s] 53%|█████▎    | 90873856/170498071 [00:24<00:14, 5539903.05it/s] 46%|████▌     | 78749696/170498071 [00:24<00:37, 2449405.38it/s] 43%|████▎     | 74096640/170498071 [00:24<00:47, 2028794.22it/s] 54%|█████▍    | 91922432/170498071 [00:24<00:14, 5557428.49it/s] 54%|█████▎    | 91529216/170498071 [00:24<00:13, 5747323.80it/s] 46%|████▋     | 79011840/170498071 [00:24<00:37, 2457837.24it/s] 44%|████▎     | 74309632/170498071 [00:24<00:47, 2028316.11it/s] 54%|█████▍    | 92495872/170498071 [00:24<00:14, 5449919.50it/s] 54%|█████▍    | 92119040/170498071 [00:24<00:14, 5476817.87it/s] 47%|████▋     | 79306752/170498071 [00:24<00:36, 2514636.62it/s] 44%|████▎     | 74522624/170498071 [00:24<00:47, 2006902.23it/s] 47%|████▋     | 79568896/170498071 [00:24<00:36, 2478873.64it/s] 55%|█████▍    | 93052928/170498071 [00:24<00:15, 5061829.91it/s] 54%|█████▍    | 92684288/170498071 [00:24<00:14, 5191242.04it/s] 44%|████▍     | 74752000/170498071 [00:24<00:46, 2045664.99it/s] 55%|█████▍    | 93577216/170498071 [00:24<00:15, 5107709.33it/s] 47%|████▋     | 79863808/170498071 [00:24<00:35, 2556307.20it/s] 55%|█████▍    | 93216768/170498071 [00:24<00:15, 5008174.46it/s] 44%|████▍     | 74981376/170498071 [00:24<00:46, 2066205.32it/s] 47%|████▋     | 80125952/170498071 [00:24<00:36, 2504929.09it/s] 55%|█████▍    | 93732864/170498071 [00:24<00:15, 5046790.45it/s] 55%|█████▌    | 94101504/170498071 [00:24<00:15, 4845151.69it/s] 44%|████▍     | 75210752/170498071 [00:24<00:45, 2093746.41it/s] 47%|████▋     | 80388096/170498071 [00:25<00:35, 2513362.14it/s] 55%|█████▌    | 94609408/170498071 [00:25<00:15, 4900812.55it/s] 55%|█████▌    | 94248960/170498071 [00:25<00:15, 4978745.77it/s] 44%|████▍     | 75440128/170498071 [00:25<00:45, 2099656.34it/s] 47%|████▋     | 80650240/170498071 [00:25<00:35, 2522614.57it/s] 56%|█████▌    | 95109120/170498071 [00:25<00:15, 4822655.39it/s] 56%|█████▌    | 94756864/170498071 [00:25<00:15, 4863221.78it/s] 44%|████▍     | 75669504/170498071 [00:25<00:44, 2124586.11it/s] 47%|████▋     | 80912384/170498071 [00:25<00:35, 2548478.57it/s] 56%|█████▌    | 95600640/170498071 [00:25<00:15, 4753767.70it/s] 56%|█████▌    | 95264768/170498071 [00:25<00:15, 4907240.45it/s] 45%|████▍     | 75898880/170498071 [00:25<00:44, 2140500.28it/s] 48%|████▊     | 81174528/170498071 [00:25<00:35, 2532110.14it/s] 56%|█████▋    | 96165888/170498071 [00:25<00:14, 4990983.71it/s] 56%|█████▌    | 95789056/170498071 [00:25<00:15, 4968446.33it/s] 45%|████▍     | 76128256/170498071 [00:25<00:43, 2151791.47it/s] 48%|████▊     | 81469440/170498071 [00:25<00:34, 2544911.39it/s] 56%|█████▋    | 96313344/170498071 [00:25<00:14, 5021697.81it/s] 57%|█████▋    | 96673792/170498071 [00:25<00:15, 4869090.95it/s] 45%|████▍     | 76357632/170498071 [00:25<00:44, 2121865.99it/s] 48%|████▊     | 81731584/170498071 [00:25<00:34, 2562606.17it/s] 45%|████▍     | 76619776/170498071 [00:25<00:42, 2201232.30it/s] 57%|█████▋    | 97165312/170498071 [00:25<00:17, 4099312.99it/s] 57%|█████▋    | 96821248/170498071 [00:25<00:17, 4104441.13it/s] 48%|████▊     | 82010112/170498071 [00:25<00:33, 2602751.11it/s] 57%|█████▋    | 97869824/170498071 [00:25<00:15, 4604353.23it/s] 57%|█████▋    | 97263616/170498071 [00:25<00:17, 4182674.48it/s] 45%|████▌     | 76840960/170498071 [00:25<00:47, 1952681.77it/s] 48%|████▊     | 82272256/170498071 [00:25<00:34, 2565919.07it/s] 57%|█████▋    | 97869824/170498071 [00:25<00:15, 4552946.70it/s] 45%|████▌     | 77078528/170498071 [00:25<00:45, 2047147.65it/s] 58%|█████▊    | 98369536/170498071 [00:25<00:16, 4367197.40it/s] 48%|████▊     | 82550784/170498071 [00:25<00:34, 2544647.39it/s] 45%|████▌     | 77291520/170498071 [00:25<00:47, 1942693.98it/s] 49%|████▊     | 82812928/170498071 [00:25<00:34, 2562519.12it/s] 58%|█████▊    | 98836480/170498071 [00:25<00:17, 4121227.06it/s] 58%|█████▊    | 98353152/170498071 [00:26<00:20, 3598746.67it/s] 45%|████▌     | 77496320/170498071 [00:26<00:48, 1925939.53it/s] 49%|████▊     | 83107840/170498071 [00:26<00:33, 2585615.39it/s] 46%|████▌     | 77692928/170498071 [00:26<00:50, 1831693.39it/s] 49%|████▉     | 83402752/170498071 [00:26<00:33, 2623068.33it/s] 58%|█████▊    | 99278848/170498071 [00:26<00:22, 3210037.72it/s] 58%|█████▊    | 98762752/170498071 [00:26<00:24, 2935683.71it/s] 49%|████▉     | 83673088/170498071 [00:26<00:33, 2621376.58it/s] 46%|████▌     | 77881344/170498071 [00:26<00:51, 1810734.19it/s] 59%|█████▊    | 99868672/170498071 [00:26<00:19, 3691095.35it/s] 58%|█████▊    | 99115008/170498071 [00:26<00:25, 2825848.84it/s] 49%|████▉     | 83959808/170498071 [00:26<00:33, 2600534.52it/s] 46%|████▌     | 78069760/170498071 [00:26<00:52, 1753795.23it/s] 59%|█████▉    | 100302848/170498071 [00:26<00:21, 3250263.68it/s] 49%|████▉     | 84254720/170498071 [00:26<00:32, 2646086.76it/s] 46%|████▌     | 78290944/170498071 [00:26<00:51, 1802101.18it/s] 58%|█████▊    | 99442688/170498071 [00:26<00:33, 2139290.16it/s] 50%|████▉     | 84549632/170498071 [00:26<00:32, 2661830.24it/s] 46%|████▌     | 78487552/170498071 [00:26<00:50, 1826417.61it/s] 59%|█████▉    | 100679680/170498071 [00:26<00:24, 2879262.76it/s] 50%|████▉     | 84844544/170498071 [00:26<00:31, 2701981.99it/s] 46%|████▌     | 78700544/170498071 [00:26<00:48, 1878947.06it/s] 59%|█████▉    | 101015552/170498071 [00:26<00:25, 2774082.43it/s] 58%|█████▊    | 99713024/170498071 [00:26<00:39, 1779667.30it/s] 46%|████▋     | 78897152/170498071 [00:26<00:48, 1875124.56it/s] 50%|████▉     | 85123072/170498071 [00:26<00:37, 2303685.54it/s] 59%|█████▉    | 101326848/170498071 [00:26<00:27, 2494973.30it/s] 46%|████▋     | 79093760/170498071 [00:26<00:51, 1785183.82it/s] 50%|█████     | 85499904/170498071 [00:26<00:32, 2582242.60it/s] 59%|█████▊    | 99942400/170498071 [00:27<00:47, 1488342.54it/s] 60%|█████▉    | 101605376/170498071 [00:27<00:29, 2350460.44it/s] 46%|████▋     | 79273984/170498071 [00:27<00:51, 1783659.50it/s] 50%|█████     | 85778432/170498071 [00:27<00:34, 2421337.07it/s] 60%|█████▉    | 101867520/170498071 [00:27<00:31, 2201493.14it/s] 47%|████▋     | 79454208/170498071 [00:27<00:55, 1635826.62it/s] 59%|█████▊    | 100139008/170498071 [00:27<00:53, 1322783.24it/s] 50%|█████     | 86040576/170498071 [00:27<00:36, 2340436.50it/s] 60%|█████▉    | 102129664/170498071 [00:27<00:30, 2263595.34it/s] 47%|████▋     | 79626240/170498071 [00:27<00:55, 1622834.30it/s] 51%|█████     | 86286336/170498071 [00:27<00:37, 2230419.39it/s] 47%|████▋     | 79798272/170498071 [00:27<00:57, 1577972.38it/s] 59%|█████▉    | 100311040/170498071 [00:27<01:01, 1141225.75it/s] 60%|██████    | 102375424/170498071 [00:27<00:31, 2181142.33it/s] 51%|█████     | 86523904/170498071 [00:27<00:37, 2222952.10it/s] 60%|██████    | 102604800/170498071 [00:27<00:31, 2153542.28it/s] 47%|████▋     | 79962112/170498071 [00:27<00:59, 1522033.53it/s] 51%|█████     | 86753280/170498071 [00:27<00:37, 2230363.10it/s] 59%|█████▉    | 100458496/170498071 [00:27<01:07, 1041659.55it/s] 60%|██████    | 102834176/170498071 [00:27<00:31, 2169148.31it/s] 47%|████▋     | 80142336/170498071 [00:27<00:57, 1571234.69it/s] 51%|█████     | 86982656/170498071 [00:27<00:37, 2207766.30it/s] 60%|██████    | 103063552/170498071 [00:27<00:30, 2176052.22it/s] 47%|████▋     | 80306176/170498071 [00:27<00:58, 1542621.32it/s] 51%|█████     | 87236608/170498071 [00:27<00:36, 2271862.30it/s] 59%|█████▉    | 100589568/170498071 [00:27<01:25, 820469.67it/s]  47%|████▋     | 80486400/170498071 [00:27<00:57, 1565280.56it/s] 51%|█████▏    | 87482368/170498071 [00:27<00:36, 2253573.64it/s] 61%|██████    | 103284736/170498071 [00:27<00:38, 1754306.57it/s] 59%|█████▉    | 100720640/170498071 [00:27<01:18, 887952.51it/s] 47%|████▋     | 80650240/170498071 [00:27<00:58, 1540729.92it/s] 51%|█████▏    | 87744512/170498071 [00:27<00:35, 2350289.08it/s] 61%|██████    | 103636992/170498071 [00:28<00:32, 2047011.65it/s] 47%|████▋     | 80846848/170498071 [00:28<00:57, 1551477.41it/s] 52%|█████▏    | 87982080/170498071 [00:28<00:35, 2350544.62it/s] 59%|█████▉    | 100827136/170498071 [00:28<01:25, 818914.88it/s] 61%|██████    | 103874560/170498071 [00:28<00:34, 1926775.18it/s] 52%|█████▏    | 88236032/170498071 [00:28<00:34, 2381989.17it/s] 48%|████▊     | 81043456/170498071 [00:28<00:55, 1625391.44it/s] 59%|█████▉    | 100925440/170498071 [00:28<01:31, 760287.68it/s] 61%|██████    | 104095744/170498071 [00:28<00:36, 1829004.98it/s] 52%|█████▏    | 88481792/170498071 [00:28<00:34, 2374503.03it/s] 48%|████▊     | 81215488/170498071 [00:28<00:55, 1615452.15it/s] 59%|█████▉    | 101015552/170498071 [00:28<01:37, 712040.07it/s] 52%|█████▏    | 88727552/170498071 [00:28<00:34, 2398170.34it/s] 61%|██████    | 104300544/170498071 [00:28<00:36, 1793761.93it/s] 48%|████▊     | 81379328/170498071 [00:28<01:08, 1302641.23it/s] 52%|█████▏    | 89006080/170498071 [00:28<00:32, 2484311.90it/s] 61%|██████▏   | 104497152/170498071 [00:28<00:37, 1765690.20it/s] 59%|█████▉    | 101097472/170498071 [00:28<01:43, 668987.46it/s] 52%|█████▏    | 89260032/170498071 [00:28<00:32, 2488205.28it/s] 48%|████▊     | 81633280/170498071 [00:28<01:00, 1472309.49it/s] 61%|██████▏   | 104685568/170498071 [00:28<00:37, 1754882.98it/s] 59%|█████▉    | 101171200/170498071 [00:28<01:46, 647981.10it/s] 53%|█████▎    | 89546752/170498071 [00:28<00:31, 2590661.67it/s] 48%|████▊     | 81797120/170498071 [00:28<01:04, 1380387.88it/s] 62%|██████▏   | 104873984/170498071 [00:28<00:37, 1767001.17it/s] 59%|█████▉    | 101261312/170498071 [00:28<01:48, 637302.64it/s] 53%|█████▎    | 89808896/170498071 [00:28<00:32, 2482814.36it/s] 62%|██████▏   | 105062400/170498071 [00:28<00:37, 1754467.83it/s] 48%|████▊     | 81952768/170498071 [00:28<01:04, 1375088.80it/s] 53%|█████▎    | 90087424/170498071 [00:28<00:31, 2556056.19it/s] 59%|█████▉    | 101359616/170498071 [00:28<01:45, 657596.68it/s] 62%|██████▏   | 105242624/170498071 [00:28<00:36, 1768273.77it/s] 48%|████▊     | 82100224/170498071 [00:28<01:05, 1354713.63it/s] 53%|█████▎    | 90349568/170498071 [00:29<00:31, 2541904.94it/s] 62%|██████▏   | 105422848/170498071 [00:29<00:37, 1731118.73it/s] 60%|█████▉    | 101457920/170498071 [00:29<01:43, 665860.83it/s] 48%|████▊     | 82247680/170498071 [00:29<01:08, 1293384.65it/s] 53%|█████▎    | 90644480/170498071 [00:29<00:30, 2599128.62it/s] 62%|██████▏   | 105635840/170498071 [00:29<00:35, 1801965.47it/s] 48%|████▊     | 82386944/170498071 [00:29<01:09, 1275124.06it/s] 60%|█████▉    | 101556224/170498071 [00:29<01:40, 682942.26it/s] 53%|█████▎    | 90923008/170498071 [00:29<00:30, 2651990.73it/s] 62%|██████▏   | 105824256/170498071 [00:29<00:36, 1794351.98it/s] 48%|████▊     | 82518016/170498071 [00:29<01:09, 1268221.47it/s] 60%|█████▉    | 101654528/170498071 [00:29<01:31, 751365.33it/s] 53%|█████▎    | 91193344/170498071 [00:29<00:30, 2628879.48it/s] 62%|██████▏   | 106012672/170498071 [00:29<00:36, 1772205.46it/s] 48%|████▊     | 82665472/170498071 [00:29<01:07, 1305935.99it/s] 60%|█████▉    | 101736448/170498071 [00:29<01:34, 725050.44it/s] 54%|█████▎    | 91463680/170498071 [00:29<00:30, 2628213.26it/s] 62%|██████▏   | 106209280/170498071 [00:29<00:35, 1813159.77it/s] 49%|████▊     | 82804736/170498071 [00:29<01:20, 1089072.67it/s] 62%|██████▏   | 106422272/170498071 [00:29<00:34, 1844816.18it/s] 54%|█████▍    | 91734016/170498071 [00:29<00:37, 2100846.74it/s] 60%|█████▉    | 101834752/170498071 [00:29<01:48, 634241.48it/s] 49%|████▊     | 82993152/170498071 [00:29<01:10, 1242908.33it/s] 63%|██████▎   | 106618880/170498071 [00:29<00:34, 1852733.79it/s] 60%|█████▉    | 101949440/170498071 [00:29<01:33, 732187.86it/s] 54%|█████▍    | 92151808/170498071 [00:29<00:32, 2400827.35it/s] 63%|██████▎   | 106807296/170498071 [00:29<00:34, 1834696.48it/s] 49%|████▉     | 83132416/170498071 [00:29<01:14, 1173523.53it/s] 54%|█████▍    | 92422144/170498071 [00:29<00:34, 2287171.27it/s] 60%|█████▉    | 102031360/170498071 [00:29<01:40, 679476.82it/s] 63%|██████▎   | 107012096/170498071 [00:29<00:33, 1882989.37it/s] 49%|████▉     | 83263488/170498071 [00:29<01:18, 1109357.03it/s] 54%|█████▍    | 92676096/170498071 [00:30<00:36, 2122397.99it/s] 63%|██████▎   | 107208704/170498071 [00:30<00:34, 1848079.31it/s] 60%|█████▉    | 102113280/170498071 [00:30<01:45, 646797.44it/s] 49%|████▉     | 83386368/170498071 [00:30<01:23, 1046674.10it/s] 54%|█████▍    | 92905472/170498071 [00:30<00:36, 2150544.85it/s] 63%|██████▎   | 107421696/170498071 [00:30<00:33, 1897256.33it/s] 60%|█████▉    | 102195200/170498071 [00:30<01:41, 672208.80it/s] 49%|████▉     | 83501056/170498071 [00:30<01:26, 1006920.90it/s] 60%|█████▉    | 102268928/170498071 [00:30<01:38, 689460.65it/s] 63%|██████▎   | 107618304/170498071 [00:30<00:33, 1873854.64it/s] 55%|█████▍    | 93134848/170498071 [00:30<00:36, 2093893.05it/s] 49%|████▉     | 83632128/170498071 [00:30<01:22, 1050030.59it/s] 63%|██████▎   | 107814912/170498071 [00:30<00:33, 1897264.01it/s] 55%|█████▍    | 93356032/170498071 [00:30<00:36, 2127541.62it/s] 60%|██████    | 102342656/170498071 [00:30<01:40, 676422.86it/s] 63%|██████▎   | 108011520/170498071 [00:30<00:33, 1883547.86it/s] 55%|█████▍    | 93577216/170498071 [00:30<00:36, 2110122.38it/s] 60%|██████    | 102416384/170498071 [00:30<01:38, 690532.32it/s] 49%|████▉     | 83746816/170498071 [00:30<01:26, 1000497.90it/s] 55%|█████▌    | 93798400/170498071 [00:30<00:36, 2089231.27it/s] 49%|████▉     | 83853312/170498071 [00:30<01:31, 951802.81it/s]  63%|██████▎   | 108208128/170498071 [00:30<00:40, 1552612.59it/s] 60%|██████    | 102490112/170498071 [00:30<01:57, 578564.62it/s] 55%|█████▌    | 94019584/170498071 [00:30<00:36, 2084500.94it/s] 49%|████▉     | 83951616/170498071 [00:30<01:37, 889642.24it/s] 64%|██████▎   | 108486656/170498071 [00:30<00:34, 1773231.52it/s] 60%|██████    | 102588416/170498071 [00:30<01:44, 647996.11it/s] 55%|█████▌    | 94248960/170498071 [00:30<00:36, 2107649.77it/s] 49%|████▉     | 84049920/170498071 [00:30<01:41, 850095.49it/s] 60%|██████    | 102662144/170498071 [00:30<01:47, 628714.39it/s] 64%|██████▎   | 108683264/170498071 [00:30<00:37, 1650252.64it/s] 55%|█████▌    | 94478336/170498071 [00:30<00:35, 2121892.41it/s] 49%|████▉     | 84140032/170498071 [00:30<01:41, 851797.62it/s] 56%|█████▌    | 94707712/170498071 [00:30<00:35, 2144089.02it/s] 64%|██████▍   | 108863488/170498071 [00:30<00:38, 1611867.10it/s] 60%|██████    | 102735872/170498071 [00:31<01:59, 567976.62it/s] 49%|████▉     | 84230144/170498071 [00:31<01:45, 814351.05it/s] 56%|█████▌    | 94937088/170498071 [00:31<00:34, 2181715.61it/s] 64%|██████▍   | 109035520/170498071 [00:31<00:39, 1570854.15it/s] 60%|██████    | 102801408/170498071 [00:31<01:57, 574808.23it/s] 56%|█████▌    | 95166464/170498071 [00:31<00:34, 2206413.63it/s] 64%|██████▍   | 109207552/170498071 [00:31<00:38, 1598782.92it/s] 49%|████▉     | 84336640/170498071 [00:31<01:46, 811101.15it/s] 60%|██████    | 102866944/170498071 [00:31<04:50, 232450.29it/s] 50%|████▉     | 84426752/170498071 [00:31<04:06, 348976.16it/s] 56%|█████▌    | 95395840/170498071 [00:31<01:26, 864114.56it/s]  64%|██████▍   | 109379584/170498071 [00:31<01:33, 657054.18it/s]  61%|██████    | 103161856/170498071 [00:31<03:30, 320239.49it/s] 57%|█████▋    | 96444416/170498071 [00:31<01:02, 1188172.74it/s] 50%|████▉     | 84828160/170498071 [00:31<03:00, 473977.44it/s] 65%|██████▍   | 110125056/170498071 [00:31<01:07, 896774.45it/s] 50%|████▉     | 84959232/170498071 [00:32<02:33, 557046.88it/s] 57%|█████▋    | 96845824/170498071 [00:32<00:51, 1422189.27it/s] 61%|██████    | 103276544/170498071 [00:32<02:57, 378981.91it/s] 65%|██████▍   | 110395392/170498071 [00:32<00:56, 1065471.11it/s] 50%|████▉     | 85090304/170498071 [00:32<02:14, 634945.75it/s] 61%|██████    | 103383040/170498071 [00:32<02:30, 445750.18it/s] 57%|█████▋    | 97206272/170498071 [00:32<00:44, 1634811.74it/s] 65%|██████▍   | 110641152/170498071 [00:32<00:49, 1205250.47it/s] 65%|██████▌   | 110870528/170498071 [00:32<00:42, 1387170.64it/s] 50%|████▉     | 85221376/170498071 [00:32<02:01, 703956.67it/s] 61%|██████    | 103481344/170498071 [00:32<02:13, 500290.39it/s] 57%|█████▋    | 97533952/170498071 [00:32<00:40, 1795323.12it/s] 65%|██████▌   | 111091712/170498071 [00:32<00:38, 1527856.03it/s] 50%|█████     | 85368832/170498071 [00:32<01:48, 782337.16it/s] 61%|██████    | 103571456/170498071 [00:32<02:04, 536863.49it/s] 57%|█████▋    | 97837056/170498071 [00:32<00:38, 1892025.99it/s] 65%|██████▌   | 111312896/170498071 [00:32<00:38, 1546015.77it/s] 50%|█████     | 85499904/170498071 [00:32<01:41, 836677.56it/s] 58%|█████▊    | 98115584/170498071 [00:32<00:36, 1963012.86it/s] 61%|██████    | 103653376/170498071 [00:32<02:01, 549446.28it/s] 65%|██████▌   | 111534080/170498071 [00:32<00:35, 1678855.44it/s] 61%|██████    | 103727104/170498071 [00:32<02:03, 540069.87it/s] 58%|█████▊    | 98377728/170498071 [00:32<00:38, 1881631.44it/s] 66%|██████▌   | 111738880/170498071 [00:32<00:33, 1734091.95it/s] 50%|█████     | 85614592/170498071 [00:32<01:51, 758190.73it/s] 66%|██████▌   | 111943680/170498071 [00:32<00:32, 1799436.83it/s] 58%|█████▊    | 98623488/170498071 [00:32<00:37, 1907446.19it/s] 50%|█████     | 85778432/170498071 [00:32<01:34, 900537.70it/s] 61%|██████    | 103800832/170498071 [00:32<02:14, 494637.58it/s] 66%|██████▌   | 112148480/170498071 [00:33<00:32, 1822297.56it/s] 58%|█████▊    | 98844672/170498071 [00:33<00:36, 1953056.76it/s] 50%|█████     | 85893120/170498071 [00:33<01:37, 867978.93it/s] 61%|██████    | 103866368/170498071 [00:33<02:26, 454983.82it/s] 58%|█████▊    | 99065856/170498071 [00:33<00:37, 1921933.48it/s] 66%|██████▌   | 112345088/170498071 [00:33<00:35, 1653582.20it/s] 50%|█████     | 85999616/170498071 [00:33<01:40, 842920.57it/s] 61%|██████    | 103923712/170498071 [00:33<02:20, 472593.82it/s] 66%|██████▌   | 112566272/170498071 [00:33<00:32, 1782598.96it/s] 58%|█████▊    | 99278848/170498071 [00:33<00:38, 1829404.22it/s] 50%|█████     | 86097920/170498071 [00:33<01:51, 756241.40it/s] 58%|█████▊    | 99475456/170498071 [00:33<00:38, 1850450.28it/s] 61%|██████    | 103981056/170498071 [00:33<02:27, 450914.12it/s] 66%|██████▌   | 112762880/170498071 [00:33<00:35, 1643743.63it/s] 58%|█████▊    | 99672064/170498071 [00:33<00:38, 1843530.82it/s] 66%|██████▌   | 112943104/170498071 [00:33<00:36, 1579591.40it/s] 61%|██████    | 104030208/170498071 [00:33<02:39, 417335.18it/s] 51%|█████     | 86188032/170498071 [00:33<02:08, 656965.64it/s] 59%|█████▊    | 99868672/170498071 [00:33<00:37, 1862022.08it/s] 66%|██████▋   | 113115136/170498071 [00:33<00:38, 1509762.17it/s] 61%|██████    | 104095744/170498071 [00:33<02:34, 430665.75it/s] 51%|█████     | 86269952/170498071 [00:33<02:12, 634989.44it/s] 59%|█████▊    | 100065280/170498071 [00:33<00:37, 1859689.02it/s] 66%|██████▋   | 113278976/170498071 [00:33<00:37, 1530587.54it/s] 51%|█████     | 86351872/170498071 [00:33<02:07, 657519.64it/s] 59%|█████▉    | 100278272/170498071 [00:33<00:36, 1910957.57it/s] 61%|██████    | 104161280/170498071 [00:33<02:30, 441401.66it/s] 51%|█████     | 86425600/170498071 [00:33<02:06, 667209.39it/s] 59%|█████▉    | 100474880/170498071 [00:33<00:36, 1895546.12it/s] 61%|██████    | 104226816/170498071 [00:33<02:17, 483064.41it/s] 67%|██████▋   | 113442816/170498071 [00:33<00:48, 1180360.58it/s] 61%|██████    | 104284160/170498071 [00:34<02:14, 494087.99it/s] 51%|█████     | 86499328/170498071 [00:34<02:13, 627191.99it/s] 59%|█████▉    | 100671488/170498071 [00:34<00:42, 1650968.34it/s] 67%|██████▋   | 113664000/170498071 [00:34<00:42, 1350034.19it/s] 61%|██████    | 104341504/170498071 [00:34<02:08, 513753.03it/s] 51%|█████     | 86581248/170498071 [00:34<02:14, 623056.89it/s] 59%|█████▉    | 100966400/170498071 [00:34<00:38, 1816172.15it/s] 67%|██████▋   | 113819648/170498071 [00:34<00:44, 1271570.65it/s] 61%|██████    | 104398848/170498071 [00:34<02:07, 516817.15it/s] 51%|█████     | 86679552/170498071 [00:34<02:09, 646021.89it/s] 59%|█████▉    | 101163008/170498071 [00:34<00:41, 1668031.49it/s] 67%|██████▋   | 113967104/170498071 [00:34<00:43, 1300509.55it/s] 61%|██████▏   | 104456192/170498071 [00:34<02:04, 530875.99it/s] 59%|█████▉    | 101359616/170498071 [00:34<00:40, 1706670.01it/s] 51%|█████     | 86777856/170498071 [00:34<02:06, 662319.65it/s] 61%|██████▏   | 104513536/170498071 [00:34<02:03, 533086.09it/s] 67%|██████▋   | 114114560/170498071 [00:34<00:46, 1209699.50it/s] 61%|██████▏   | 104570880/170498071 [00:34<02:01, 542075.31it/s] 60%|█████▉    | 101539840/170498071 [00:34<00:41, 1653270.60it/s] 51%|█████     | 86876160/170498071 [00:34<01:57, 713498.02it/s] 67%|██████▋   | 114245632/170498071 [00:34<00:46, 1202175.08it/s] 61%|██████▏   | 104636416/170498071 [00:34<01:58, 556219.48it/s] 51%|█████     | 86958080/170498071 [00:34<01:54, 727700.66it/s] 60%|█████▉    | 101711872/170498071 [00:34<00:44, 1557966.48it/s] 67%|██████▋   | 114376704/170498071 [00:34<00:46, 1207807.06it/s] 61%|██████▏   | 104718336/170498071 [00:34<01:47, 610885.58it/s] 60%|█████▉    | 101900288/170498071 [00:34<00:42, 1604572.35it/s] 67%|██████▋   | 114507776/170498071 [00:34<00:46, 1215660.45it/s] 51%|█████     | 87040000/170498071 [00:34<01:59, 699949.66it/s] 61%|██████▏   | 104783872/170498071 [00:34<01:48, 603904.03it/s] 60%|█████▉    | 102072320/170498071 [00:34<00:42, 1622538.24it/s] 67%|██████▋   | 114638848/170498071 [00:34<00:46, 1214294.33it/s] 51%|█████     | 87138304/170498071 [00:34<01:51, 744756.48it/s] 60%|█████▉    | 102244352/170498071 [00:35<00:42, 1612315.50it/s] 67%|██████▋   | 114769920/170498071 [00:35<00:45, 1224794.62it/s] 51%|█████     | 87220224/170498071 [00:35<01:49, 762268.22it/s] 62%|██████▏   | 104865792/170498071 [00:35<01:48, 603192.63it/s] 60%|██████    | 102408192/170498071 [00:35<00:42, 1607436.87it/s] 62%|██████▏   | 104947712/170498071 [00:35<01:40, 649507.62it/s] 67%|██████▋   | 114900992/170498071 [00:35<00:45, 1220320.54it/s] 51%|█████     | 87318528/170498071 [00:35<01:50, 753127.58it/s] 60%|██████    | 102588416/170498071 [00:35<00:41, 1623426.99it/s] 67%|██████▋   | 115032064/170498071 [00:35<00:45, 1231433.06it/s] 62%|██████▏   | 105021440/170498071 [00:35<01:39, 656554.51it/s] 51%|█████▏    | 87433216/170498071 [00:35<01:47, 772901.63it/s] 60%|██████    | 102752256/170498071 [00:35<00:41, 1618801.00it/s] 62%|██████▏   | 105095168/170498071 [00:35<01:36, 676645.56it/s] 68%|██████▊   | 115163136/170498071 [00:35<00:45, 1225119.27it/s] 51%|█████▏    | 87547904/170498071 [00:35<01:39, 830986.93it/s] 60%|██████    | 102948864/170498071 [00:35<00:40, 1669252.29it/s] 62%|██████▏   | 105168896/170498071 [00:35<01:36, 680461.84it/s] 68%|██████▊   | 115294208/170498071 [00:35<00:44, 1233850.30it/s] 51%|█████▏    | 87646208/170498071 [00:35<01:35, 870704.96it/s] 60%|██████    | 103120896/170498071 [00:35<00:40, 1652154.95it/s] 62%|██████▏   | 105242624/170498071 [00:35<01:34, 693779.95it/s] 68%|██████▊   | 115425280/170498071 [00:35<00:45, 1216619.43it/s] 51%|█████▏    | 87736320/170498071 [00:35<01:36, 859009.43it/s] 61%|██████    | 103292928/170498071 [00:35<00:41, 1638667.01it/s] 68%|██████▊   | 115548160/170498071 [00:35<00:45, 1214429.53it/s] 62%|██████▏   | 105324544/170498071 [00:35<01:32, 703947.90it/s] 52%|█████▏    | 87826432/170498071 [00:35<01:36, 859816.59it/s] 61%|██████    | 103464960/170498071 [00:35<00:40, 1651471.50it/s] 68%|██████▊   | 115679232/170498071 [00:35<00:45, 1198193.07it/s] 62%|██████▏   | 105422848/170498071 [00:35<01:32, 706931.36it/s] 52%|█████▏    | 87924736/170498071 [00:35<01:33, 884106.06it/s] 61%|██████    | 103653376/170498071 [00:35<00:39, 1673783.68it/s] 68%|██████▊   | 115826688/170498071 [00:35<00:43, 1269383.27it/s] 62%|██████▏   | 105521152/170498071 [00:35<01:24, 764456.11it/s] 52%|█████▏    | 88023040/170498071 [00:35<01:32, 893052.27it/s] 61%|██████    | 103825408/170498071 [00:35<00:39, 1667743.77it/s] 68%|██████▊   | 115957760/170498071 [00:35<00:43, 1245346.33it/s] 62%|██████▏   | 105603072/170498071 [00:35<01:25, 759934.44it/s] 52%|█████▏    | 88121344/170498071 [00:36<01:30, 908914.47it/s] 61%|██████    | 104030208/170498071 [00:36<00:38, 1715779.23it/s] 68%|██████▊   | 116088832/170498071 [00:36<00:43, 1249703.22it/s] 62%|██████▏   | 105684992/170498071 [00:36<01:23, 773669.20it/s] 52%|█████▏    | 88219648/170498071 [00:36<01:28, 924794.70it/s] 61%|██████    | 104210432/170498071 [00:36<00:39, 1687423.45it/s] 68%|██████▊   | 116236288/170498071 [00:36<00:42, 1286546.40it/s] 62%|██████▏   | 105783296/170498071 [00:36<01:20, 802786.65it/s] 52%|█████▏    | 88334336/170498071 [00:36<01:25, 963916.62it/s] 61%|██████    | 104407040/170498071 [00:36<00:38, 1712482.35it/s] 68%|██████▊   | 116367360/170498071 [00:36<00:42, 1268355.32it/s] 62%|██████▏   | 105881600/170498071 [00:36<01:16, 842282.37it/s] 52%|█████▏    | 88432640/170498071 [00:36<01:25, 964888.78it/s] 61%|██████▏   | 104579072/170498071 [00:36<00:39, 1664782.73it/s] 68%|██████▊   | 116531200/170498071 [00:36<00:40, 1327225.72it/s] 62%|██████▏   | 105971712/170498071 [00:36<01:16, 846747.57it/s] 52%|█████▏    | 88547328/170498071 [00:36<01:22, 989605.49it/s] 61%|██████▏   | 104783872/170498071 [00:36<00:37, 1759956.52it/s] 68%|██████▊   | 116678656/170498071 [00:36<00:39, 1356259.58it/s] 62%|██████▏   | 106061824/170498071 [00:36<01:16, 847442.67it/s] 52%|█████▏    | 88653824/170498071 [00:36<01:21, 1008544.40it/s] 69%|██████▊   | 116826112/170498071 [00:36<00:39, 1368982.06it/s] 62%|██████▏   | 104964096/170498071 [00:36<00:39, 1666766.66it/s] 62%|██████▏   | 106151936/170498071 [00:36<01:15, 857222.14it/s] 52%|█████▏    | 88776704/170498071 [00:36<01:23, 983993.91it/s]  69%|██████▊   | 116965376/170498071 [00:36<00:39, 1359398.96it/s] 62%|██████▏   | 105177088/170498071 [00:36<00:37, 1753952.61it/s] 62%|██████▏   | 106258432/170498071 [00:36<01:12, 891084.76it/s] 52%|█████▏    | 88924160/170498071 [00:36<01:17, 1057026.88it/s] 69%|██████▊   | 117121024/170498071 [00:36<00:38, 1386981.89it/s] 62%|██████▏   | 105357312/170498071 [00:36<00:38, 1688758.34it/s] 62%|██████▏   | 106356736/170498071 [00:36<01:10, 904573.44it/s] 52%|█████▏    | 89038848/170498071 [00:36<01:15, 1073218.61it/s] 69%|██████▉   | 117268480/170498071 [00:36<00:37, 1402503.09it/s] 62%|██████▏   | 105570304/170498071 [00:36<00:36, 1785053.03it/s] 62%|██████▏   | 106455040/170498071 [00:36<01:09, 921062.09it/s] 52%|█████▏    | 89153536/170498071 [00:36<01:14, 1087034.74it/s] 69%|██████▉   | 117432320/170498071 [00:37<00:37, 1429659.14it/s] 62%|██████▏   | 106553344/170498071 [00:37<01:09, 915548.42it/s] 62%|██████▏   | 105758720/170498071 [00:37<00:43, 1474951.86it/s] 52%|█████▏    | 89268224/170498071 [00:37<01:19, 1022991.38it/s] 69%|██████▉   | 117579776/170498071 [00:37<00:37, 1421368.86it/s] 63%|██████▎   | 106668032/170498071 [00:37<01:05, 969109.57it/s] 62%|██████▏   | 106029056/170498071 [00:37<00:38, 1680278.14it/s] 52%|█████▏    | 89374720/170498071 [00:37<01:21, 995625.24it/s]  69%|██████▉   | 117760000/170498071 [00:37<00:35, 1483136.28it/s] 63%|██████▎   | 106766336/170498071 [00:37<01:07, 945866.70it/s] 69%|██████▉   | 117915648/170498071 [00:37<00:35, 1483707.60it/s] 63%|██████▎   | 106881024/170498071 [00:37<01:03, 995126.78it/s] 62%|██████▏   | 106217472/170498071 [00:37<00:40, 1577863.64it/s] 52%|█████▏    | 89481216/170498071 [00:37<01:27, 926530.78it/s] 69%|██████▉   | 118087680/170498071 [00:37<00:34, 1507905.29it/s] 63%|██████▎   | 106987520/170498071 [00:37<01:04, 989171.45it/s] 62%|██████▏   | 106389504/170498071 [00:37<00:41, 1538739.60it/s] 53%|█████▎    | 89595904/170498071 [00:37<01:24, 953192.80it/s] 69%|██████▉   | 118243328/170498071 [00:37<00:34, 1509605.83it/s] 63%|██████▎   | 107094016/170498071 [00:37<01:02, 1006546.64it/s] 53%|█████▎    | 89694208/170498071 [00:37<01:28, 908666.31it/s] 62%|██████▏   | 106553344/170498071 [00:37<00:44, 1444582.02it/s] 69%|██████▉   | 118415360/170498071 [00:37<00:33, 1538521.64it/s] 63%|██████▎   | 107208704/170498071 [00:37<01:02, 1016879.10it/s] 53%|█████▎    | 89792512/170498071 [00:37<01:30, 889825.09it/s] 63%|██████▎   | 106717184/170498071 [00:37<00:43, 1467045.36it/s] 70%|██████▉   | 118579200/170498071 [00:37<00:33, 1535789.31it/s] 63%|██████▎   | 107323392/170498071 [00:37<01:00, 1049956.89it/s] 63%|██████▎   | 106872832/170498071 [00:37<00:43, 1463248.37it/s] 53%|█████▎    | 89907200/170498071 [00:37<01:26, 927352.49it/s] 70%|██████▉   | 118759424/170498071 [00:37<00:32, 1581971.10it/s] 63%|██████▎   | 107438080/170498071 [00:37<01:00, 1039016.50it/s] 63%|██████▎   | 107044864/170498071 [00:37<00:41, 1512732.56it/s] 53%|█████▎    | 90005504/170498071 [00:37<01:26, 935294.74it/s] 70%|██████▉   | 118923264/170498071 [00:37<00:32, 1568785.11it/s] 63%|██████▎   | 107569152/170498071 [00:38<00:57, 1092074.37it/s] 63%|██████▎   | 107200512/170498071 [00:38<00:42, 1498810.78it/s] 53%|█████▎    | 90120192/170498071 [00:38<01:22, 973737.53it/s] 70%|██████▉   | 119103488/170498071 [00:38<00:31, 1606262.49it/s] 63%|██████▎   | 107683840/170498071 [00:38<00:57, 1089311.12it/s] 63%|██████▎   | 107372544/170498071 [00:38<00:40, 1557437.68it/s] 53%|█████▎    | 90226688/170498071 [00:38<01:21, 980046.17it/s] 70%|██████▉   | 119267328/170498071 [00:38<00:32, 1583821.60it/s] 63%|██████▎   | 107806720/170498071 [00:38<00:55, 1127592.05it/s] 63%|██████▎   | 107536384/170498071 [00:38<00:40, 1548100.54it/s] 53%|█████▎    | 90333184/170498071 [00:38<01:20, 998993.17it/s] 70%|███████   | 119463936/170498071 [00:38<00:31, 1634586.19it/s] 63%|██████▎   | 107929600/170498071 [00:38<00:55, 1121946.72it/s] 63%|██████▎   | 107716608/170498071 [00:38<00:39, 1603917.79it/s] 53%|█████▎    | 90439680/170498071 [00:38<01:20, 999159.27it/s] 70%|███████   | 119635968/170498071 [00:38<00:30, 1644613.56it/s] 63%|██████▎   | 108060672/170498071 [00:38<00:54, 1153923.99it/s] 63%|██████▎   | 107880448/170498071 [00:38<00:39, 1572559.96it/s] 53%|█████▎    | 90546176/170498071 [00:38<01:19, 1010326.10it/s] 70%|███████   | 119824384/170498071 [00:38<00:30, 1638612.12it/s] 63%|██████▎   | 108183552/170498071 [00:38<00:53, 1159779.26it/s] 63%|██████▎   | 108077056/170498071 [00:38<00:37, 1665071.78it/s] 53%|█████▎    | 90652672/170498071 [00:38<01:19, 1010058.33it/s] 70%|███████   | 120004608/170498071 [00:38<00:30, 1676480.32it/s] 64%|██████▎   | 108306432/170498071 [00:38<00:53, 1151736.28it/s] 53%|█████▎    | 90775552/170498071 [00:38<01:15, 1052160.54it/s] 63%|██████▎   | 108249088/170498071 [00:38<00:38, 1635576.19it/s] 70%|███████   | 120184832/170498071 [00:38<00:30, 1657211.62it/s] 64%|██████▎   | 108437504/170498071 [00:38<00:52, 1174763.44it/s] 64%|██████▎   | 108437504/170498071 [00:38<00:36, 1699024.30it/s] 53%|█████▎    | 90882048/170498071 [00:38<01:16, 1045284.90it/s] 71%|███████   | 120365056/170498071 [00:38<00:29, 1694791.56it/s] 64%|██████▎   | 108568576/170498071 [00:38<00:51, 1195766.91it/s] 64%|██████▎   | 108609536/170498071 [00:38<00:36, 1689470.27it/s] 53%|█████▎    | 91004928/170498071 [00:38<01:13, 1084554.17it/s] 64%|██████▍   | 108699648/170498071 [00:38<00:51, 1206706.09it/s] 71%|███████   | 120561664/170498071 [00:38<00:29, 1695057.44it/s] 64%|██████▍   | 108797952/170498071 [00:38<00:35, 1739103.59it/s] 53%|█████▎    | 91119616/170498071 [00:38<01:13, 1076020.44it/s] 64%|██████▍   | 108830720/170498071 [00:39<00:50, 1223145.73it/s] 64%|██████▍   | 108978176/170498071 [00:39<00:36, 1705008.78it/s] 54%|█████▎    | 91234304/170498071 [00:39<01:12, 1094630.93it/s] 71%|███████   | 120733696/170498071 [00:39<00:34, 1431720.78it/s] 64%|██████▍   | 108978176/170498071 [00:39<00:48, 1263843.60it/s] 64%|██████▍   | 109174784/170498071 [00:39<00:34, 1775382.62it/s] 54%|█████▎    | 91348992/170498071 [00:39<01:13, 1082510.41it/s] 71%|███████   | 120971264/170498071 [00:39<00:30, 1604419.01it/s] 64%|██████▍   | 109109248/170498071 [00:39<00:48, 1264619.16it/s] 64%|██████▍   | 109355008/170498071 [00:39<00:35, 1731357.80it/s] 54%|█████▎    | 91463680/170498071 [00:39<01:12, 1097232.22it/s] 71%|███████   | 121151488/170498071 [00:39<00:33, 1485209.65it/s] 64%|██████▍   | 109256704/170498071 [00:39<00:47, 1291283.24it/s] 54%|█████▎    | 91578368/170498071 [00:39<01:11, 1097377.05it/s] 64%|██████▍   | 109551616/170498071 [00:39<00:34, 1753790.00it/s] 64%|██████▍   | 109387776/170498071 [00:39<00:48, 1264094.89it/s] 71%|███████   | 121315328/170498071 [00:39<00:34, 1433614.53it/s] 54%|█████▍    | 91693056/170498071 [00:39<01:11, 1101462.78it/s] 64%|██████▍   | 109748224/170498071 [00:39<00:34, 1749613.87it/s] 71%|███████   | 121470976/170498071 [00:39<00:33, 1450624.36it/s] 64%|██████▍   | 109551616/170498071 [00:39<00:46, 1314340.59it/s] 54%|█████▍    | 91807744/170498071 [00:39<01:11, 1096542.56it/s] 64%|██████▍   | 109944832/170498071 [00:39<00:33, 1800835.15it/s] 64%|██████▍   | 109690880/170498071 [00:39<00:45, 1329170.42it/s] 71%|███████▏  | 121626624/170498071 [00:39<00:33, 1444623.19it/s] 54%|█████▍    | 91938816/170498071 [00:39<01:08, 1139772.77it/s] 65%|██████▍   | 110141440/170498071 [00:39<00:33, 1781205.35it/s] 64%|██████▍   | 109846528/170498071 [00:39<00:44, 1357076.01it/s] 71%|███████▏  | 121782272/170498071 [00:39<00:33, 1446241.70it/s] 54%|█████▍    | 92053504/170498071 [00:39<01:09, 1125315.23it/s] 65%|██████▍   | 110370816/170498071 [00:39<00:33, 1812333.57it/s] 65%|██████▍   | 109985792/170498071 [00:39<00:44, 1358039.71it/s] 72%|███████▏  | 121929728/170498071 [00:39<00:33, 1441214.92it/s] 54%|█████▍    | 92184576/170498071 [00:39<01:07, 1157850.48it/s] 65%|██████▍   | 110567424/170498071 [00:39<00:33, 1808725.09it/s] 65%|██████▍   | 110141440/170498071 [00:40<00:42, 1407286.68it/s] 72%|███████▏  | 122077184/170498071 [00:40<00:33, 1432792.81it/s] 65%|██████▍   | 110755840/170498071 [00:40<00:35, 1675497.57it/s] 54%|█████▍    | 92307456/170498071 [00:40<01:19, 979043.32it/s]  65%|██████▍   | 110288896/170498071 [00:40<00:42, 1401405.94it/s] 72%|███████▏  | 122232832/170498071 [00:40<00:33, 1456084.82it/s] 65%|██████▌   | 110960640/170498071 [00:40<00:35, 1674020.99it/s] 65%|██████▍   | 110469120/170498071 [00:40<00:40, 1487394.05it/s] 54%|█████▍    | 92479488/170498071 [00:40<01:15, 1040236.16it/s] 72%|███████▏  | 122396672/170498071 [00:40<00:33, 1455083.97it/s] 65%|██████▌   | 111132672/170498071 [00:40<00:36, 1613446.65it/s] 65%|██████▍   | 110632960/170498071 [00:40<00:40, 1486015.74it/s] 72%|███████▏  | 122576896/170498071 [00:40<00:31, 1540164.13it/s] 54%|█████▍    | 92594176/170498071 [00:40<01:14, 1051060.15it/s] 65%|██████▌   | 110829568/170498071 [00:40<00:37, 1587519.50it/s] 72%|███████▏  | 122740736/170498071 [00:40<00:31, 1509425.88it/s] 65%|██████▌   | 111296512/170498071 [00:40<00:38, 1525145.34it/s] 54%|█████▍    | 92708864/170498071 [00:40<01:16, 1021621.29it/s] 65%|██████▌   | 110993408/170498071 [00:40<00:37, 1596138.16it/s] 72%|███████▏  | 122937344/170498071 [00:40<00:30, 1577270.61it/s] 65%|██████▌   | 111452160/170498071 [00:40<00:40, 1470846.98it/s] 54%|█████▍    | 92815360/170498071 [00:40<01:20, 970787.08it/s]  65%|██████▌   | 111206400/170498071 [00:40<00:34, 1713327.78it/s] 72%|███████▏  | 123101184/170498071 [00:40<00:30, 1574567.73it/s] 65%|██████▌   | 111616000/170498071 [00:40<00:39, 1507049.48it/s] 55%|█████▍    | 92938240/170498071 [00:40<01:22, 942188.10it/s] 65%|██████▌   | 111386624/170498071 [00:40<00:34, 1717994.10it/s] 72%|███████▏  | 123281408/170498071 [00:40<00:28, 1631910.26it/s] 66%|██████▌   | 111771648/170498071 [00:40<00:39, 1495446.51it/s] 55%|█████▍    | 93069312/170498071 [00:40<01:16, 1015492.11it/s] 65%|██████▌   | 111616000/170498071 [00:40<00:31, 1843118.68it/s] 72%|███████▏  | 123453440/170498071 [00:40<00:29, 1613164.60it/s] 66%|██████▌   | 111927296/170498071 [00:40<00:39, 1486882.37it/s] 55%|█████▍    | 93175808/170498071 [00:40<01:15, 1019652.35it/s] 66%|██████▌   | 111828992/170498071 [00:40<00:30, 1901965.67it/s] 73%|███████▎  | 123641856/170498071 [00:40<00:28, 1669005.82it/s] 66%|██████▌   | 112091136/170498071 [00:40<00:38, 1509470.54it/s] 55%|█████▍    | 93298688/170498071 [00:41<01:12, 1060001.15it/s] 66%|██████▌   | 112041984/170498071 [00:41<00:29, 1952418.83it/s] 73%|███████▎  | 123813888/170498071 [00:41<00:28, 1643743.12it/s] 55%|█████▍    | 93413376/170498071 [00:41<01:14, 1030017.22it/s] 66%|██████▌   | 112246784/170498071 [00:41<00:46, 1261035.43it/s] 66%|██████▌   | 112287744/170498071 [00:41<00:28, 2072587.56it/s] 73%|███████▎  | 124002304/170498071 [00:41<00:27, 1690583.15it/s] 66%|██████▌   | 112467968/170498071 [00:41<00:40, 1444668.29it/s] 66%|██████▌   | 112533504/170498071 [00:41<00:26, 2146999.37it/s] 55%|█████▍    | 93544448/170498071 [00:41<01:14, 1033068.37it/s] 73%|███████▎  | 124174336/170498071 [00:41<00:28, 1641013.47it/s] 66%|██████▌   | 112812032/170498071 [00:41<00:25, 2246831.20it/s] 55%|█████▍    | 93675520/170498071 [00:41<01:10, 1095733.44it/s] 66%|██████▌   | 112631808/170498071 [00:41<00:43, 1334828.28it/s] 73%|███████▎  | 124379136/170498071 [00:41<00:26, 1727294.91it/s] 66%|██████▋   | 113090560/170498071 [00:41<00:24, 2333004.86it/s] 55%|█████▌    | 93790208/170498071 [00:41<01:10, 1088491.91it/s] 66%|██████▌   | 112779264/170498071 [00:41<00:43, 1312191.99it/s] 73%|███████▎  | 124559360/170498071 [00:41<00:27, 1675652.48it/s] 55%|█████▌    | 93921280/170498071 [00:41<01:07, 1137995.35it/s] 67%|██████▋   | 113385472/170498071 [00:41<00:23, 2385186.44it/s] 73%|███████▎  | 124772352/170498071 [00:41<00:26, 1716905.07it/s] 66%|██████▌   | 112926720/170498071 [00:41<00:45, 1272813.33it/s] 55%|█████▌    | 94044160/170498071 [00:41<01:07, 1139199.12it/s] 67%|██████▋   | 113713152/170498071 [00:41<00:22, 2577711.13it/s] 66%|██████▋   | 113065984/170498071 [00:41<00:44, 1295220.39it/s] 73%|███████▎  | 124952576/170498071 [00:41<00:26, 1700277.85it/s] 55%|█████▌    | 94167040/170498071 [00:41<01:05, 1159879.65it/s] 67%|██████▋   | 113991680/170498071 [00:41<00:21, 2635328.65it/s] 66%|██████▋   | 113205248/170498071 [00:41<00:44, 1287571.43it/s] 73%|███████▎  | 125149184/170498071 [00:41<00:26, 1730752.03it/s] 67%|██████▋   | 114319360/170498071 [00:41<00:20, 2790436.74it/s] 55%|█████▌    | 94289920/170498071 [00:41<01:06, 1143071.38it/s] 66%|██████▋   | 113344512/170498071 [00:41<00:43, 1312081.21it/s] 74%|███████▎  | 125345792/170498071 [00:41<00:26, 1710539.15it/s] 67%|██████▋   | 114663424/170498071 [00:42<00:19, 2863735.45it/s] 55%|█████▌    | 94429184/170498071 [00:42<01:08, 1107585.44it/s] 67%|██████▋   | 113483776/170498071 [00:42<00:45, 1251444.05it/s] 74%|███████▎  | 125542400/170498071 [00:42<00:26, 1707577.60it/s] 67%|██████▋   | 114991104/170498071 [00:42<00:18, 2953772.27it/s] 55%|█████▌    | 94576640/170498071 [00:42<01:03, 1193116.59it/s] 67%|██████▋   | 113614848/170498071 [00:42<00:45, 1260683.71it/s] 74%|███████▍  | 125755392/170498071 [00:42<00:24, 1794981.88it/s] 68%|██████▊   | 115384320/170498071 [00:42<00:17, 3127738.47it/s] 56%|█████▌    | 94699520/170498071 [00:42<01:04, 1172370.61it/s] 67%|██████▋   | 113762304/170498071 [00:42<00:43, 1300641.87it/s] 74%|███████▍  | 125943808/170498071 [00:42<00:25, 1750620.57it/s] 68%|██████▊   | 115712000/170498071 [00:42<00:17, 3165858.02it/s] 56%|█████▌    | 94838784/170498071 [00:42<01:07, 1128463.18it/s] 67%|██████▋   | 113909760/170498071 [00:42<00:43, 1299129.23it/s] 74%|███████▍  | 126132224/170498071 [00:42<00:24, 1788040.25it/s] 68%|██████▊   | 116105216/170498071 [00:42<00:16, 3356711.18it/s] 56%|█████▌    | 94986240/170498071 [00:42<01:02, 1200859.81it/s] 67%|██████▋   | 114040832/170498071 [00:42<00:43, 1297606.35it/s] 74%|███████▍  | 126312448/170498071 [00:42<00:25, 1737596.01it/s] 68%|██████▊   | 116498432/170498071 [00:42<00:15, 3454716.16it/s] 56%|█████▌    | 95109120/170498071 [00:42<01:03, 1182525.69it/s] 67%|██████▋   | 114204672/170498071 [00:42<00:42, 1326715.27it/s] 74%|███████▍  | 126492672/170498071 [00:42<00:25, 1743785.98it/s] 69%|██████▊   | 116924416/170498071 [00:42<00:14, 3651643.79it/s] 56%|█████▌    | 95248384/170498071 [00:42<01:01, 1232058.81it/s] 67%|██████▋   | 114352128/170498071 [00:42<00:42, 1326727.50it/s] 74%|███████▍  | 126689280/170498071 [00:42<00:25, 1748890.07it/s] 69%|██████▉   | 117350400/170498071 [00:42<00:14, 3714788.16it/s] 56%|█████▌    | 95379456/170498071 [00:42<01:03, 1188262.10it/s] 74%|███████▍  | 126869504/170498071 [00:42<00:24, 1764364.47it/s] 67%|██████▋   | 114499584/170498071 [00:42<00:42, 1327675.93it/s] 69%|██████▉   | 117776384/170498071 [00:42<00:13, 3860653.17it/s] 75%|███████▍  | 127066112/170498071 [00:42<00:24, 1774396.05it/s] 67%|██████▋   | 114647040/170498071 [00:42<00:41, 1355082.58it/s] 69%|██████▉   | 118267904/170498071 [00:42<00:12, 4117761.28it/s] 56%|█████▌    | 95526912/170498071 [00:42<01:03, 1179517.32it/s] 75%|███████▍  | 127246336/170498071 [00:43<00:24, 1763131.12it/s] 70%|██████▉   | 118693888/170498071 [00:43<00:12, 4128761.22it/s] 56%|█████▌    | 95674368/170498071 [00:43<00:59, 1249366.13it/s] 67%|██████▋   | 114794496/170498071 [00:43<00:41, 1349129.16it/s] 56%|█████▌    | 95805440/170498071 [00:43<01:29, 832735.30it/s]  75%|███████▍  | 127426560/170498071 [00:43<00:37, 1142796.27it/s] 67%|██████▋   | 114933760/170498071 [00:43<01:02, 886050.94it/s]  70%|██████▉   | 119119872/170498071 [00:43<00:19, 2624219.28it/s] 75%|███████▍  | 127836160/170498071 [00:43<00:29, 1456373.54it/s] 56%|█████▋    | 96083968/170498071 [00:43<01:11, 1045473.80it/s] 70%|███████   | 119578624/170498071 [00:43<00:16, 2999350.47it/s] 68%|██████▊   | 115286016/170498071 [00:43<00:49, 1105308.95it/s] 56%|█████▋    | 96239616/170498071 [00:43<01:04, 1157788.35it/s] 75%|███████▌  | 128065536/170498071 [00:43<00:26, 1576228.51it/s] 71%|███████   | 120365056/170498071 [00:43<00:13, 3668629.47it/s] 68%|██████▊   | 115449856/170498071 [00:43<00:45, 1205269.03it/s] 71%|███████   | 121085952/170498071 [00:43<00:11, 4286150.46it/s] 57%|█████▋    | 96395264/170498071 [00:43<01:01, 1195989.64it/s] 75%|███████▌  | 128286720/170498071 [00:43<00:25, 1651774.31it/s] 68%|██████▊   | 115613696/170498071 [00:43<00:43, 1272200.12it/s] 71%|███████▏  | 121839616/170498071 [00:43<00:09, 4917022.07it/s] 75%|███████▌  | 128499712/170498071 [00:43<00:24, 1741929.71it/s] 57%|█████▋    | 96542720/170498071 [00:43<01:01, 1198934.06it/s] 68%|██████▊   | 115777536/170498071 [00:43<00:40, 1355489.85it/s] 72%|███████▏  | 122609664/170498071 [00:43<00:08, 5509625.97it/s] 75%|███████▌  | 128704512/170498071 [00:43<00:23, 1777575.67it/s] 68%|██████▊   | 115933184/170498071 [00:43<00:38, 1405490.62it/s] 57%|█████▋    | 96706560/170498071 [00:43<00:58, 1258841.92it/s] 72%|███████▏  | 123273216/170498071 [00:43<00:08, 5801263.53it/s] 76%|███████▌  | 128909312/170498071 [00:43<00:22, 1817748.10it/s] 57%|█████▋    | 96854016/170498071 [00:43<00:56, 1306984.62it/s] 68%|██████▊   | 116105216/170498071 [00:44<00:38, 1430519.98it/s] 73%|███████▎  | 123936768/170498071 [00:44<00:08, 5805373.01it/s] 76%|███████▌  | 129105920/170498071 [00:44<00:22, 1835448.20it/s] 57%|█████▋    | 97001472/170498071 [00:44<00:54, 1347673.71it/s] 68%|██████▊   | 116260864/170498071 [00:44<00:37, 1448947.06it/s] 73%|███████▎  | 124592128/170498071 [00:44<00:07, 5964175.47it/s] 76%|███████▌  | 129310720/170498071 [00:44<00:21, 1874595.86it/s] 57%|█████▋    | 97148928/170498071 [00:44<00:54, 1357490.73it/s] 68%|██████▊   | 116432896/170498071 [00:44<00:36, 1492969.75it/s] 73%|███████▎  | 125313024/170498071 [00:44<00:07, 6247472.02it/s] 76%|███████▌  | 129507328/170498071 [00:44<00:22, 1860167.56it/s] 57%|█████▋    | 97312768/170498071 [00:44<00:52, 1398950.93it/s] 68%|██████▊   | 116588544/170498071 [00:44<00:36, 1495412.33it/s] 74%|███████▍  | 126001152/170498071 [00:44<00:06, 6365855.76it/s] 57%|█████▋    | 97460224/170498071 [00:44<00:51, 1408277.25it/s] 76%|███████▌  | 129736704/170498071 [00:44<00:21, 1898921.42it/s] 68%|██████▊   | 116760576/170498071 [00:44<00:35, 1517012.54it/s] 74%|███████▍  | 126664704/170498071 [00:44<00:07, 6089247.33it/s] 57%|█████▋    | 97624064/170498071 [00:44<00:50, 1454695.52it/s] 76%|███████▌  | 129933312/170498071 [00:44<00:21, 1900515.66it/s] 69%|██████▊   | 116924416/170498071 [00:44<00:35, 1504439.94it/s] 75%|███████▍  | 127377408/170498071 [00:44<00:06, 6367325.37it/s] 76%|███████▋  | 130129920/170498071 [00:44<00:21, 1902364.96it/s] 57%|█████▋    | 97779712/170498071 [00:44<00:50, 1451139.06it/s] 69%|██████▊   | 117121024/170498071 [00:44<00:33, 1573567.05it/s] 75%|███████▌  | 128196608/170498071 [00:44<00:06, 6738086.86it/s] 76%|███████▋  | 130359296/170498071 [00:44<00:20, 1970317.82it/s] 69%|██████▉   | 117284864/170498071 [00:44<00:34, 1556141.85it/s] 57%|█████▋    | 97951744/170498071 [00:44<00:52, 1384643.99it/s] 76%|███████▌  | 128917504/170498071 [00:44<00:06, 6764824.85it/s] 77%|███████▋  | 130572288/170498071 [00:44<00:20, 1955962.29it/s] 58%|█████▊    | 98131968/170498071 [00:44<00:48, 1484347.43it/s] 69%|██████▉   | 117481472/170498071 [00:44<00:32, 1611030.08it/s] 76%|███████▌  | 129753088/170498071 [00:44<00:05, 7174531.55it/s] 77%|███████▋  | 130801664/170498071 [00:44<00:19, 2015419.36it/s] 58%|█████▊    | 98287616/170498071 [00:44<00:49, 1449124.47it/s] 69%|██████▉   | 117645312/170498071 [00:44<00:33, 1564575.61it/s] 77%|███████▋  | 130523136/170498071 [00:45<00:05, 7207600.79it/s] 77%|███████▋  | 131014656/170498071 [00:45<00:19, 2007612.20it/s] 58%|█████▊    | 98476032/170498071 [00:45<00:47, 1527431.89it/s] 69%|██████▉   | 117841920/170498071 [00:45<00:32, 1621231.47it/s] 77%|███████▋  | 131735552/170498071 [00:45<00:04, 8192950.33it/s] 77%|███████▋  | 131244032/170498071 [00:45<00:18, 2078701.44it/s] 58%|█████▊    | 98631680/170498071 [00:45<00:47, 1513261.46it/s] 69%|██████▉   | 118022144/170498071 [00:45<00:32, 1632691.74it/s] 78%|███████▊  | 132612096/170498071 [00:45<00:04, 8323261.01it/s] 77%|███████▋  | 131457024/170498071 [00:45<00:18, 2077605.08it/s] 58%|█████▊    | 98803712/170498071 [00:45<00:46, 1544795.67it/s] 69%|██████▉   | 118218752/170498071 [00:45<00:30, 1689854.94it/s] 78%|███████▊  | 133668864/170498071 [00:45<00:04, 8828785.97it/s] 77%|███████▋  | 131670016/170498071 [00:45<00:18, 2069693.15it/s] 58%|█████▊    | 98967552/170498071 [00:45<00:46, 1525158.59it/s] 69%|██████▉   | 118398976/170498071 [00:45<00:31, 1653269.85it/s] 79%|███████▉  | 134594560/170498071 [00:45<00:04, 8671172.98it/s] 77%|███████▋  | 131899392/170498071 [00:45<00:18, 2105794.00it/s] 70%|██████▉   | 118595584/170498071 [00:45<00:30, 1719484.72it/s] 80%|███████▉  | 135749632/170498071 [00:45<00:03, 9284153.87it/s] 77%|███████▋  | 132112384/170498071 [00:45<00:18, 2101976.57it/s] 58%|█████▊    | 99147776/170498071 [00:45<00:54, 1309912.20it/s] 70%|██████▉   | 118775808/170498071 [00:45<00:30, 1705618.44it/s] 80%|████████  | 136708096/170498071 [00:45<00:03, 9073542.23it/s] 78%|███████▊  | 132325376/170498071 [00:45<00:18, 2093939.30it/s] 58%|█████▊    | 99393536/170498071 [00:45<00:47, 1497425.43it/s] 70%|██████▉   | 118956032/170498071 [00:45<00:30, 1692185.34it/s] 81%|████████  | 137830400/170498071 [00:45<00:03, 9623387.46it/s] 78%|███████▊  | 132554752/170498071 [00:45<00:18, 2091168.67it/s] 58%|█████▊    | 99557376/170498071 [00:45<00:51, 1382351.14it/s] 70%|██████▉   | 119152640/170498071 [00:45<00:29, 1746148.82it/s] 81%|████████▏ | 138821632/170498071 [00:45<00:03, 9586490.63it/s] 78%|███████▊  | 132800512/170498071 [00:45<00:17, 2169043.26it/s] 58%|█████▊    | 99713024/170498071 [00:45<00:50, 1406331.69it/s] 70%|███████   | 119349248/170498071 [00:45<00:29, 1756793.80it/s] 82%|████████▏ | 139804672/170498071 [00:45<00:03, 9101114.10it/s] 78%|███████▊  | 133021696/170498071 [00:45<00:17, 2170076.87it/s] 70%|███████   | 119545856/170498071 [00:46<00:28, 1773692.34it/s] 83%|████████▎ | 140845056/170498071 [00:46<00:03, 9420947.00it/s] 59%|█████▊    | 99868672/170498071 [00:46<00:51, 1360065.63it/s] 78%|███████▊  | 133242880/170498071 [00:46<00:17, 2121653.32it/s] 70%|███████   | 119742464/170498071 [00:46<00:28, 1781477.96it/s] 83%|████████▎ | 141803520/170498071 [00:46<00:03, 9123434.68it/s] 59%|█████▊    | 100016128/170498071 [00:46<00:53, 1320149.55it/s] 78%|███████▊  | 133472256/170498071 [00:46<00:17, 2169687.78it/s] 84%|████████▎ | 142729216/170498071 [00:46<00:03, 8593798.78it/s] 78%|███████▊  | 133701632/170498071 [00:46<00:17, 2127867.92it/s] 70%|███████   | 119939072/170498071 [00:46<00:33, 1499073.70it/s] 59%|█████▊    | 100155392/170498071 [00:46<01:02, 1119885.73it/s] 79%|███████▊  | 133963776/170498071 [00:46<00:16, 2229502.76it/s] 84%|████████▍ | 143695872/170498071 [00:46<00:03, 8655728.47it/s] 71%|███████   | 120217600/170498071 [00:46<00:28, 1734720.88it/s] 59%|█████▉    | 100343808/170498071 [00:46<00:55, 1255438.51it/s] 79%|███████▊  | 134193152/170498071 [00:46<00:16, 2169399.13it/s] 85%|████████▍ | 144572416/170498071 [00:46<00:03, 8138488.42it/s] 71%|███████   | 120414208/170498071 [00:46<00:30, 1618756.22it/s] 59%|█████▉    | 100483072/170498071 [00:46<00:58, 1187514.43it/s] 79%|███████▉  | 134471680/170498071 [00:46<00:15, 2316532.52it/s] 85%|████████▌ | 145563648/170498071 [00:46<00:02, 8577251.04it/s] 71%|███████   | 120594432/170498071 [00:46<00:32, 1519899.83it/s] 59%|█████▉    | 100614144/170498071 [00:46<01:03, 1096737.22it/s] 79%|███████▉  | 134709248/170498071 [00:46<00:16, 2230785.54it/s] 86%|████████▌ | 146440192/170498071 [00:46<00:02, 8225612.39it/s] 71%|███████   | 120774656/170498071 [00:46<00:32, 1542651.13it/s] 79%|███████▉  | 134979584/170498071 [00:46<00:15, 2337289.18it/s] 86%|████████▋ | 147447808/170498071 [00:46<00:02, 8688403.38it/s] 59%|█████▉    | 100737024/170498071 [00:46<01:05, 1065527.37it/s] 71%|███████   | 120938496/170498071 [00:46<00:32, 1523838.65it/s] 79%|███████▉  | 135217152/170498071 [00:46<00:15, 2257295.80it/s] 87%|████████▋ | 148340736/170498071 [00:46<00:02, 8434548.18it/s] 59%|█████▉    | 100868096/170498071 [00:46<01:04, 1071300.00it/s] 71%|███████   | 121102336/170498071 [00:47<00:31, 1555295.04it/s] 79%|███████▉  | 135487488/170498071 [00:47<00:14, 2353836.05it/s] 88%|████████▊ | 149364736/170498071 [00:47<00:02, 8881527.31it/s] 59%|█████▉    | 100982784/170498071 [00:47<01:04, 1076728.56it/s] 71%|███████   | 121266176/170498071 [00:47<00:31, 1548875.84it/s] 80%|███████▉  | 135733248/170498071 [00:47<00:15, 2281361.65it/s] 88%|████████▊ | 150274048/170498071 [00:47<00:02, 8591945.00it/s] 59%|█████▉    | 101097472/170498071 [00:47<01:04, 1068728.33it/s] 71%|███████   | 121446400/170498071 [00:47<00:31, 1567535.90it/s] 89%|████████▉ | 151330816/170498071 [00:47<00:02, 9042394.57it/s] 80%|███████▉  | 136011776/170498071 [00:47<00:14, 2363235.92it/s] 59%|█████▉    | 101212160/170498071 [00:47<01:04, 1075641.43it/s] 71%|███████▏  | 121610240/170498071 [00:47<00:31, 1554389.35it/s] 89%|████████▉ | 152256512/170498071 [00:47<00:02, 8849850.10it/s] 80%|███████▉  | 136257536/170498071 [00:47<00:14, 2303011.34it/s] 59%|█████▉    | 101326848/170498071 [00:47<01:04, 1078237.99it/s] 71%|███████▏  | 121806848/170498071 [00:47<00:29, 1628716.34it/s] 90%|████████▉ | 153296896/170498071 [00:47<00:01, 9215540.79it/s] 80%|████████  | 136536064/170498071 [00:47<00:14, 2407324.73it/s] 59%|█████▉    | 101441536/170498071 [00:47<01:03, 1088330.03it/s] 72%|███████▏  | 121978880/170498071 [00:47<00:29, 1628131.30it/s] 90%|█████████ | 154230784/170498071 [00:47<00:01, 8912896.34it/s] 80%|████████  | 136781824/170498071 [00:47<00:14, 2317157.85it/s] 60%|█████▉    | 101556224/170498071 [00:47<01:04, 1069277.97it/s] 72%|███████▏  | 122167296/170498071 [00:47<00:29, 1647598.67it/s] 91%|█████████ | 155353088/170498071 [00:47<00:01, 9499004.45it/s] 80%|████████  | 137076736/170498071 [00:47<00:13, 2426695.98it/s] 60%|█████▉    | 101687296/170498071 [00:47<01:02, 1108517.69it/s] 72%|███████▏  | 122339328/170498071 [00:47<00:29, 1656767.82it/s] 92%|█████████▏| 156327936/170498071 [00:47<00:01, 9210733.60it/s] 81%|████████  | 137330688/170498071 [00:47<00:13, 2425268.63it/s] 60%|█████▉    | 101801984/170498071 [00:47<01:03, 1090311.65it/s] 72%|███████▏  | 122527744/170498071 [00:47<00:28, 1706987.26it/s] 92%|█████████▏| 157343744/170498071 [00:47<00:01, 9351567.19it/s] 81%|████████  | 137617408/170498071 [00:47<00:13, 2528409.41it/s] 60%|█████▉    | 101949440/170498071 [00:47<01:01, 1110919.56it/s] 72%|███████▏  | 122699776/170498071 [00:48<00:27, 1709504.08it/s] 81%|████████  | 137879552/170498071 [00:48<00:13, 2474547.94it/s] 93%|█████████▎| 158294016/170498071 [00:48<00:01, 8223188.11it/s] 60%|█████▉    | 102096896/170498071 [00:48<00:59, 1155408.08it/s] 72%|███████▏  | 122871808/170498071 [00:48<00:27, 1706928.56it/s] 81%|████████  | 138158080/170498071 [00:48<00:12, 2560120.15it/s] 93%|█████████▎| 159408128/170498071 [00:48<00:01, 8917035.33it/s] 60%|█████▉    | 102219776/170498071 [00:48<00:58, 1174953.45it/s] 72%|███████▏  | 123068416/170498071 [00:48<00:27, 1750323.12it/s] 81%|████████  | 138420224/170498071 [00:48<00:12, 2507664.03it/s] 60%|██████    | 102342656/170498071 [00:48<00:58, 1169783.93it/s] 94%|█████████▍| 160342016/170498071 [00:48<00:01, 8411653.85it/s] 72%|███████▏  | 123248640/170498071 [00:48<00:28, 1676452.50it/s] 81%|████████▏ | 138747904/170498071 [00:48<00:11, 2669346.59it/s] 60%|██████    | 102473728/170498071 [00:48<00:57, 1173883.26it/s] 95%|█████████▍| 161218560/170498071 [00:48<00:01, 7813594.30it/s] 72%|███████▏  | 123478016/170498071 [00:48<00:26, 1763989.33it/s] 82%|████████▏ | 139026432/170498071 [00:48<00:11, 2679000.32it/s] 60%|██████    | 102604800/170498071 [00:48<00:57, 1189881.01it/s] 95%|█████████▌| 162037760/170498071 [00:48<00:01, 7527007.49it/s] 73%|███████▎  | 123658240/170498071 [00:48<00:26, 1739717.64it/s] 82%|████████▏ | 139304960/170498071 [00:48<00:11, 2694847.54it/s] 60%|██████    | 102735872/170498071 [00:48<00:55, 1217200.80it/s] 96%|█████████▌| 162848768/170498071 [00:48<00:01, 7530457.67it/s] 73%|███████▎  | 123871232/170498071 [00:48<00:25, 1812203.02it/s] 82%|████████▏ | 139665408/170498071 [00:48<00:10, 2817945.07it/s] 60%|██████    | 102866944/170498071 [00:48<00:54, 1241014.96it/s] 73%|███████▎  | 124059648/170498071 [00:48<00:25, 1796083.03it/s] 96%|█████████▌| 163627008/170498071 [00:48<00:00, 7315023.50it/s] 82%|████████▏ | 139960320/170498071 [00:48<00:10, 2841687.24it/s] 60%|██████    | 102998016/170498071 [00:48<00:54, 1237134.96it/s] 73%|███████▎  | 124264448/170498071 [00:48<00:25, 1846232.39it/s] 96%|█████████▋| 164372480/170498071 [00:48<00:00, 7261820.56it/s] 82%|████████▏ | 140320768/170498071 [00:48<00:09, 3031404.44it/s] 60%|██████    | 103145472/170498071 [00:48<00:53, 1263088.07it/s] 97%|█████████▋| 165158912/170498071 [00:48<00:00, 7393969.30it/s] 73%|███████▎  | 124452864/170498071 [00:48<00:25, 1819432.11it/s] 82%|████████▏ | 140632064/170498071 [00:49<00:10, 2940130.84it/s] 61%|██████    | 103276544/170498071 [00:49<00:52, 1271703.05it/s] 97%|█████████▋| 165912576/170498071 [00:49<00:00, 7175804.33it/s] 73%|███████▎  | 124674048/170498071 [00:49<00:24, 1870618.14it/s] 83%|████████▎ | 140959744/170498071 [00:49<00:09, 3018753.16it/s] 61%|██████    | 103424000/170498071 [00:49<00:51, 1297671.55it/s] 98%|█████████▊| 166780928/170498071 [00:49<00:00, 7533176.53it/s] 73%|███████▎  | 124862464/170498071 [00:49<00:24, 1852735.44it/s] 83%|████████▎ | 141336576/170498071 [00:49<00:09, 3131771.95it/s] 61%|██████    | 103555072/170498071 [00:49<00:53, 1256325.06it/s] 73%|███████▎  | 125067264/170498071 [00:49<00:24, 1872367.45it/s] 98%|█████████▊| 167550976/170498071 [00:49<00:00, 7367310.96it/s] 83%|████████▎ | 141697024/170498071 [00:49<00:08, 3237826.88it/s] 61%|██████    | 103718912/170498071 [00:49<00:49, 1349282.57it/s] 99%|█████████▊| 168337408/170498071 [00:49<00:00, 7444159.59it/s] 73%|███████▎  | 125255680/170498071 [00:49<00:24, 1834055.78it/s] 83%|████████▎ | 142090240/170498071 [00:49<00:08, 3323644.58it/s] 61%|██████    | 103858176/170498071 [00:49<00:51, 1289894.26it/s] 99%|█████████▉| 169156608/170498071 [00:49<00:00, 7517570.62it/s] 74%|███████▎  | 125460480/170498071 [00:49<00:23, 1877646.88it/s] 84%|████████▎ | 142483456/170498071 [00:49<00:08, 3415014.92it/s] 61%|██████    | 104030208/170498071 [00:49<00:48, 1382474.77it/s]100%|█████████▉| 169943040/170498071 [00:49<00:00, 7425669.06it/s] 74%|███████▎  | 125657088/170498071 [00:49<00:24, 1855984.94it/s] 84%|████████▍ | 142876672/170498071 [00:49<00:07, 3506863.42it/s] 61%|██████    | 104177664/170498071 [00:49<00:48, 1370154.66it/s] 74%|███████▍  | 125845504/170498071 [00:50<00:45, 976540.68it/s]  84%|████████▍ | 143237120/170498071 [00:50<00:14, 1886740.82it/s] 61%|██████    | 104325120/170498071 [00:50<01:20, 820996.59it/s]  61%|██████▏   | 104603648/170498071 [00:50<01:03, 1037455.04it/s] 74%|███████▍  | 126296064/170498071 [00:50<00:34, 1272164.85it/s] 85%|████████▍ | 144252928/170498071 [00:50<00:10, 2489954.62it/s] 74%|███████▍  | 126574592/170498071 [00:50<00:29, 1511384.12it/s] 61%|██████▏   | 104833024/170498071 [00:50<00:53, 1231543.50it/s] 85%|████████▌ | 144924672/170498071 [00:50<00:08, 3031749.88it/s] 62%|██████▏   | 105013248/170498071 [00:50<00:48, 1345007.16it/s] 74%|███████▍  | 126820352/170498071 [00:50<00:26, 1674231.02it/s] 85%|████████▌ | 145514496/170498071 [00:50<00:07, 3504798.12it/s] 86%|████████▌ | 146055168/170498071 [00:50<00:06, 3779257.97it/s] 62%|██████▏   | 105193472/170498071 [00:50<00:49, 1331829.53it/s] 75%|███████▍  | 127057920/170498071 [00:50<00:25, 1682228.32it/s] 62%|██████▏   | 105357312/170498071 [00:50<00:46, 1396101.67it/s] 75%|███████▍  | 127279104/170498071 [00:50<00:24, 1797185.46it/s] 86%|████████▌ | 146595840/170498071 [00:50<00:06, 3885589.45it/s] 62%|██████▏   | 105521152/170498071 [00:50<00:45, 1432813.93it/s] 75%|███████▍  | 127500288/170498071 [00:50<00:23, 1862693.13it/s] 86%|████████▋ | 147251200/170498071 [00:50<00:05, 4364128.69it/s] 62%|██████▏   | 105684992/170498071 [00:50<00:43, 1484366.85it/s] 87%|████████▋ | 147775488/170498071 [00:50<00:05, 4486993.21it/s] 75%|███████▍  | 127713280/170498071 [00:50<00:24, 1751791.81it/s] 62%|██████▏   | 105848832/170498071 [00:50<00:43, 1495920.62it/s] 87%|████████▋ | 148381696/170498071 [00:50<00:04, 4813418.06it/s] 75%|███████▌  | 127934464/170498071 [00:50<00:22, 1857042.94it/s] 62%|██████▏   | 106012672/170498071 [00:51<00:42, 1532443.91it/s] 87%|████████▋ | 148914176/170498071 [00:51<00:04, 4844490.44it/s] 75%|███████▌  | 128139264/170498071 [00:51<00:22, 1864091.10it/s] 62%|██████▏   | 106176512/170498071 [00:51<00:41, 1531765.13it/s] 88%|████████▊ | 149479424/170498071 [00:51<00:04, 4997464.67it/s] 75%|███████▌  | 128344064/170498071 [00:51<00:22, 1909598.24it/s] 62%|██████▏   | 106356736/170498071 [00:51<00:40, 1598539.73it/s] 88%|████████▊ | 150011904/170498071 [00:51<00:04, 4780400.97it/s] 75%|███████▌  | 128557056/170498071 [00:51<00:21, 1923286.62it/s] 62%|██████▏   | 106520576/170498071 [00:51<00:40, 1576381.90it/s] 76%|███████▌  | 128786432/170498071 [00:51<00:20, 2006090.23it/s] 88%|████████▊ | 150511616/170498071 [00:51<00:04, 4387646.74it/s] 63%|██████▎   | 106700800/170498071 [00:51<00:39, 1634281.35it/s] 76%|███████▌  | 128999424/170498071 [00:51<00:20, 1989797.54it/s] 89%|████████▊ | 150978560/170498071 [00:51<00:04, 4097692.19it/s] 63%|██████▎   | 106872832/170498071 [00:51<00:39, 1626574.36it/s] 76%|███████▌  | 129212416/170498071 [00:51<00:20, 2026077.22it/s] 89%|████████▉ | 151527424/170498071 [00:51<00:04, 4378378.30it/s] 63%|██████▎   | 107061248/170498071 [00:51<00:37, 1688241.87it/s] 76%|███████▌  | 129425408/170498071 [00:51<00:20, 2003771.06it/s] 63%|██████▎   | 107233280/170498071 [00:51<00:38, 1664286.84it/s] 89%|████████▉ | 151986176/170498071 [00:51<00:04, 4271999.46it/s] 76%|███████▌  | 129654784/170498071 [00:51<00:19, 2072671.20it/s] 63%|██████▎   | 107421696/170498071 [00:51<00:36, 1719150.37it/s] 89%|████████▉ | 152477696/170498071 [00:51<00:04, 4444331.47it/s] 76%|███████▌  | 129867776/170498071 [00:51<00:19, 2039094.61it/s] 63%|██████▎   | 107601920/170498071 [00:51<00:36, 1706181.47it/s] 90%|████████▉ | 152936448/170498071 [00:51<00:04, 4328609.71it/s] 76%|███████▋  | 130113536/170498071 [00:52<00:18, 2132478.82it/s] 63%|██████▎   | 107798528/170498071 [00:52<00:35, 1758835.28it/s] 90%|████████▉ | 153444352/170498071 [00:52<00:03, 4506160.65it/s] 76%|███████▋  | 130334720/170498071 [00:52<00:19, 2104177.60it/s] 63%|██████▎   | 107978752/170498071 [00:52<00:35, 1746090.23it/s] 90%|█████████ | 153903104/170498071 [00:52<00:03, 4398922.36it/s] 77%|███████▋  | 130555904/170498071 [00:52<00:18, 2126197.12it/s] 63%|██████▎   | 108175360/170498071 [00:52<00:34, 1790123.75it/s] 91%|█████████ | 154443776/170498071 [00:52<00:03, 4601656.03it/s] 77%|███████▋  | 130785280/170498071 [00:52<00:18, 2121669.27it/s] 64%|██████▎   | 108355584/170498071 [00:52<00:35, 1769054.76it/s] 91%|█████████ | 154910720/170498071 [00:52<00:03, 4515960.92it/s] 77%|███████▋  | 131031040/170498071 [00:52<00:17, 2197561.88it/s] 64%|██████▎   | 108552192/170498071 [00:52<00:34, 1808615.96it/s] 91%|█████████ | 155459584/170498071 [00:52<00:03, 4725588.62it/s] 77%|███████▋  | 131260416/170498071 [00:52<00:18, 2166458.27it/s] 64%|██████▍   | 108740608/170498071 [00:52<00:34, 1806661.79it/s] 91%|█████████▏| 155942912/170498071 [00:52<00:03, 4627679.24it/s] 77%|███████▋  | 131489792/170498071 [00:52<00:17, 2197818.21it/s] 64%|██████▍   | 108945408/170498071 [00:52<00:33, 1853358.67it/s] 92%|█████████▏| 156508160/170498071 [00:52<00:02, 4854433.16it/s] 77%|███████▋  | 131719168/170498071 [00:52<00:17, 2173185.37it/s] 64%|██████▍   | 109133824/170498071 [00:52<00:33, 1836866.96it/s] 92%|█████████▏| 157007872/170498071 [00:52<00:02, 4755165.68it/s] 77%|███████▋  | 131964928/170498071 [00:52<00:17, 2236322.92it/s] 64%|██████▍   | 109355008/170498071 [00:52<00:31, 1912535.13it/s] 92%|█████████▏| 157573120/170498071 [00:52<00:02, 4948930.44it/s] 78%|███████▊  | 132210688/170498071 [00:52<00:17, 2234321.49it/s] 64%|██████▍   | 109551616/170498071 [00:52<00:32, 1898046.80it/s] 93%|█████████▎| 158081024/170498071 [00:53<00:02, 4849237.19it/s] 78%|███████▊  | 132456448/170498071 [00:53<00:16, 2290390.06it/s] 64%|██████▍   | 109748224/170498071 [00:53<00:31, 1904532.00it/s] 93%|█████████▎| 158654464/170498071 [00:53<00:02, 5015951.87it/s] 78%|███████▊  | 132694016/170498071 [00:53<00:16, 2259957.68it/s] 64%|██████▍   | 109944832/170498071 [00:53<00:31, 1893439.86it/s] 93%|█████████▎| 159162368/170498071 [00:53<00:02, 4938995.94it/s] 78%|███████▊  | 132947968/170498071 [00:53<00:16, 2320252.75it/s] 65%|██████▍   | 110157824/170498071 [00:53<00:31, 1943102.22it/s] 94%|█████████▎| 159752192/170498071 [00:53<00:02, 5179697.80it/s] 78%|███████▊  | 133185536/170498071 [00:53<00:16, 2283491.87it/s] 65%|██████▍   | 110354432/170498071 [00:53<00:31, 1896633.14it/s] 94%|█████████▍| 160276480/170498071 [00:53<00:02, 5024097.92it/s] 78%|███████▊  | 133439488/170498071 [00:53<00:15, 2339320.96it/s] 65%|██████▍   | 110551040/170498071 [00:53<00:34, 1741752.24it/s] 94%|█████████▍| 160866304/170498071 [00:53<00:01, 5238700.84it/s] 78%|███████▊  | 133677056/170498071 [00:53<00:17, 2083793.25it/s] 95%|█████████▍| 161398784/170498071 [00:53<00:01, 5093028.40it/s] 65%|██████▍   | 110731264/170498071 [00:53<00:36, 1630551.22it/s] 79%|███████▊  | 133947392/170498071 [00:53<00:16, 2200742.05it/s] 95%|█████████▌| 162013184/170498071 [00:53<00:01, 5342293.08it/s] 65%|██████▌   | 110927872/170498071 [00:53<00:36, 1650356.14it/s]avail True
ngpus_per_node 4
Use GPU: 0 for training
=> creating model 'resnet50'
MoCo(
  (encoder_q): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Sequential(
      (0): Linear(in_features=2048, out_features=2048, bias=True)
      (1): ReLU()
      (2): Linear(in_features=2048, out_features=128, bias=True)
    )
  )
  (encoder_k): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Sequential(
      (0): Linear(in_features=2048, out_features=2048, bias=True)
      (1): ReLU()
      (2): Linear(in_features=2048, out_features=128, bias=True)
    )
  )
)
Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to /userdata/smetzger/data/cifar_10/train/cifar-10-python.tar.gz
Extracting /userdata/smetzger/data/cifar_10/train/cifar-10-python.tar.gz to /userdata/smetzger/data/cifar_10/train
 79%|███████▊  | 134176768/170498071 [00:53<00:16, 2188574.05it/s] 95%|█████████▌| 162562048/170498071 [00:53<00:01, 5205683.08it/s] 65%|██████▌   | 111099904/170498071 [00:53<00:36, 1641793.72it/s] 79%|███████▉  | 134406144/170498071 [00:53<00:18, 1997264.93it/s] 96%|█████████▌| 163160064/170498071 [00:53<00:01, 5337773.68it/s] 65%|██████▌   | 111271936/170498071 [00:54<00:38, 1545247.71it/s] 79%|███████▉  | 134619136/170498071 [00:54<00:18, 1975249.50it/s] 96%|█████████▌| 163700736/170498071 [00:54<00:01, 5244600.15it/s] 65%|██████▌   | 111468544/170498071 [00:54<00:37, 1592829.47it/s] 79%|███████▉  | 134823936/170498071 [00:54<00:17, 1984695.82it/s] 96%|█████████▋| 164306944/170498071 [00:54<00:01, 5452578.94it/s] 65%|██████▌   | 111632384/170498071 [00:54<00:37, 1581258.09it/s] 79%|███████▉  | 135028736/170498071 [00:54<00:18, 1950291.02it/s] 97%|█████████▋| 164864000/170498071 [00:54<00:01, 5298099.94it/s] 66%|██████▌   | 111828992/170498071 [00:54<00:35, 1665035.07it/s] 79%|███████▉  | 135233536/170498071 [00:54<00:17, 1968952.28it/s] 97%|█████████▋| 165470208/170498071 [00:54<00:00, 5498790.41it/s] 66%|██████▌   | 112001024/170498071 [00:54<00:35, 1656132.50it/s] 79%|███████▉  | 135438336/170498071 [00:54<00:18, 1944903.39it/s] 97%|█████████▋| 166027264/170498071 [00:54<00:00, 5331297.78it/s] 66%|██████▌   | 112189440/170498071 [00:54<00:34, 1704193.38it/s] 80%|███████▉  | 135634944/170498071 [00:54<00:17, 1945349.72it/s] 98%|█████████▊| 166649856/170498071 [00:54<00:00, 5552453.18it/s] 66%|██████▌   | 112361472/170498071 [00:54<00:34, 1685028.95it/s] 80%|███████▉  | 135831552/170498071 [00:54<00:18, 1907925.73it/s] 98%|█████████▊| 167215104/170498071 [00:54<00:00, 5397572.27it/s] 66%|██████▌   | 112549888/170498071 [00:54<00:33, 1722885.19it/s] 98%|█████████▊| 167829504/170498071 [00:54<00:00, 5584432.70it/s] 80%|███████▉  | 136028160/170498071 [00:54<00:20, 1722499.68it/s] 66%|██████▌   | 112730112/170498071 [00:54<00:33, 1730983.31it/s] 99%|█████████▉| 168394752/170498071 [00:54<00:00, 5421397.54it/s] 80%|███████▉  | 136257536/170498071 [00:54<00:18, 1857507.26it/s] 66%|██████▌   | 112943104/170498071 [00:54<00:31, 1806289.27it/s] 99%|█████████▉| 169025536/170498071 [00:55<00:00, 5596644.39it/s] 80%|████████  | 136454144/170498071 [00:55<00:18, 1803879.77it/s] 66%|██████▋   | 113131520/170498071 [00:55<00:31, 1813494.65it/s] 99%|█████████▉| 169590784/170498071 [00:55<00:00, 5465594.34it/s] 66%|██████▋   | 113336320/170498071 [00:55<00:31, 1836945.52it/s] 80%|████████  | 136642560/170498071 [00:55<00:20, 1640960.35it/s]100%|█████████▉| 170205184/170498071 [00:55<00:00, 5623471.90it/s] 67%|██████▋   | 113524736/170498071 [00:55<00:30, 1844517.49it/s] 80%|████████  | 136830976/170498071 [00:55<00:19, 1706422.72it/s] 67%|██████▋   | 113729536/170498071 [00:55<00:30, 1866959.33it/s] 80%|████████  | 137011200/170498071 [00:55<00:27, 1196003.49it/s] 67%|██████▋   | 113917952/170498071 [00:55<00:38, 1452404.93it/s] 81%|████████  | 137306112/170498071 [00:55<00:23, 1401351.19it/s] 67%|██████▋   | 114204672/170498071 [00:55<00:33, 1687631.28it/s] 67%|██████▋   | 114401280/170498071 [00:55<00:32, 1746440.16it/s] 81%|████████  | 137502720/170498071 [00:55<00:22, 1494730.81it/s] 81%|████████  | 137682944/170498071 [00:55<00:20, 1571848.84it/s] 67%|██████▋   | 114614272/170498071 [00:55<00:30, 1822530.19it/s] 67%|██████▋   | 114827264/170498071 [00:56<00:29, 1883942.81it/s] 81%|████████  | 137863168/170498071 [00:56<00:20, 1589234.69it/s] 81%|████████  | 138035200/170498071 [00:56<00:19, 1626386.58it/s] 67%|██████▋   | 115032064/170498071 [00:56<00:29, 1905422.50it/s] 68%|██████▊   | 115236864/170498071 [00:56<00:28, 1925163.58it/s] 81%|████████  | 138223616/170498071 [00:56<00:19, 1648395.65it/s] 68%|██████▊   | 115441664/170498071 [00:56<00:28, 1934581.43it/s] 81%|████████  | 138403840/170498071 [00:56<00:18, 1689196.81it/s] 68%|██████▊   | 115646464/170498071 [00:56<00:28, 1950345.98it/s] 81%|████████▏ | 138584064/170498071 [00:56<00:19, 1677129.57it/s] 68%|██████▊   | 115851264/170498071 [00:56<00:28, 1946938.19it/s] 81%|████████▏ | 138764288/170498071 [00:56<00:18, 1707400.13it/s] 68%|██████▊   | 116072448/170498071 [00:56<00:27, 1995407.79it/s] 82%|████████▏ | 138960896/170498071 [00:56<00:18, 1703130.72it/s] 68%|██████▊   | 116277248/170498071 [00:56<00:27, 1982075.86it/s] 82%|████████▏ | 139190272/170498071 [00:56<00:18, 1683286.37it/s] 68%|██████▊   | 116482048/170498071 [00:56<00:27, 1983037.75it/s] 82%|████████▏ | 139370496/170498071 [00:56<00:20, 1535970.73it/s] 68%|██████▊   | 116686848/170498071 [00:56<00:27, 1974020.76it/s] 69%|██████▊   | 116891648/170498071 [00:57<00:27, 1973127.24it/s] 82%|████████▏ | 139550720/170498071 [00:57<00:21, 1448538.56it/s] 69%|██████▊   | 117104640/170498071 [00:57<00:26, 1989409.57it/s] 82%|████████▏ | 139730944/170498071 [00:57<00:21, 1399550.42it/s] 69%|██████▉   | 117317632/170498071 [00:57<00:26, 2007607.88it/s] 82%|████████▏ | 139911168/170498071 [00:57<00:20, 1496193.76it/s] 69%|██████▉   | 117522432/170498071 [00:57<00:26, 1992696.01it/s] 82%|████████▏ | 140066816/170498071 [00:57<00:22, 1375672.60it/s] 69%|██████▉   | 117727232/170498071 [00:57<00:26, 1984452.45it/s] 82%|████████▏ | 140222464/170498071 [00:57<00:22, 1359487.88it/s] 69%|██████▉   | 117940224/170498071 [00:57<00:26, 1997528.70it/s] 69%|██████▉   | 118153216/170498071 [00:57<00:26, 2012111.35it/s] 82%|████████▏ | 140419072/170498071 [00:57<00:21, 1371250.93it/s] 69%|██████▉   | 118358016/170498071 [00:57<00:26, 2003037.39it/s] 82%|████████▏ | 140615680/170498071 [00:57<00:21, 1380475.77it/s] 70%|██████▉   | 118579200/170498071 [00:57<00:25, 2021094.34it/s] 83%|████████▎ | 140795904/170498071 [00:57<00:20, 1484375.23it/s] 70%|██████▉   | 118784000/170498071 [00:57<00:25, 2024332.26it/s] 83%|████████▎ | 140951552/170498071 [00:58<00:21, 1377396.58it/s] 70%|██████▉   | 119005184/170498071 [00:58<00:25, 2042080.74it/s] 83%|████████▎ | 141123584/170498071 [00:58<00:21, 1397493.17it/s] 70%|██████▉   | 119218176/170498071 [00:58<00:25, 2042956.38it/s] 83%|████████▎ | 141303808/170498071 [00:58<00:19, 1497634.20it/s] 70%|███████   | 119447552/170498071 [00:58<00:24, 2080751.21it/s] 70%|███████   | 119660544/170498071 [00:58<00:24, 2078544.58it/s] 83%|████████▎ | 141459456/170498071 [00:58<00:20, 1384794.71it/s] 70%|███████   | 119873536/170498071 [00:58<00:24, 2062989.22it/s] 83%|████████▎ | 141631488/170498071 [00:58<00:20, 1414321.48it/s] 70%|███████   | 120102912/170498071 [00:58<00:23, 2106531.81it/s] 83%|████████▎ | 141811712/170498071 [00:58<00:19, 1501236.63it/s] 71%|███████   | 120332288/170498071 [00:58<00:23, 2126469.05it/s] 83%|████████▎ | 141967360/170498071 [00:58<00:19, 1467183.19it/s] 71%|███████   | 120561664/170498071 [00:58<00:23, 2157046.79it/s] 83%|████████▎ | 142155776/170498071 [00:58<00:18, 1542930.90it/s] 83%|████████▎ | 142319616/170498071 [00:59<00:19, 1436119.98it/s] 71%|███████   | 120782848/170498071 [00:58<00:27, 1779482.79it/s] 71%|███████   | 121069568/170498071 [00:59<00:24, 2003684.77it/s] 84%|████████▎ | 142467072/170498071 [00:59<00:21, 1293982.66it/s] 71%|███████   | 121290752/170498071 [00:59<00:25, 1949004.16it/s] 84%|████████▎ | 142606336/170498071 [00:59<00:23, 1202549.03it/s] 71%|███████▏  | 121503744/170498071 [00:59<00:26, 1846262.59it/s] 84%|████████▎ | 142737408/170498071 [00:59<00:23, 1179548.66it/s]avail True
ngpus_per_node 4
 71%|███████▏  | 121700352/170498071 [00:59<00:26, 1855318.76it/s] 84%|████████▍ | 142860288/170498071 [00:59<00:23, 1185258.55it/s] 71%|███████▏  | 121896960/170498071 [00:59<00:28, 1724908.21it/s] 84%|████████▍ | 142983168/170498071 [00:59<00:23, 1169878.63it/s] 72%|███████▏  | 122077184/170498071 [00:59<00:27, 1734655.65it/s] 84%|████████▍ | 143106048/170498071 [00:59<00:23, 1177957.12it/s] 72%|███████▏  | 122265600/170498071 [00:59<00:27, 1747509.10it/s] 84%|████████▍ | 143237120/170498071 [00:59<00:22, 1188300.96it/s] 72%|███████▏  | 122445824/170498071 [00:59<00:27, 1745560.87it/s] 84%|████████▍ | 143368192/170498071 [00:59<00:22, 1213934.01it/s] 72%|███████▏  | 122626048/170498071 [01:00<00:28, 1704611.75it/s] 84%|████████▍ | 143515648/170498071 [01:00<00:21, 1253296.80it/s] 84%|████████▍ | 143646720/170498071 [01:00<00:21, 1258325.03it/s] 72%|███████▏  | 122806272/170498071 [01:00<00:30, 1559618.60it/s]170500096it [01:00, 7425669.06it/s]                                84%|████████▍ | 143794176/170498071 [01:00<00:21, 1248706.28it/s] 72%|███████▏  | 122970112/170498071 [01:00<00:32, 1445551.33it/s] 84%|████████▍ | 143958016/170498071 [01:00<00:19, 1339656.86it/s] 72%|███████▏  | 123125760/170498071 [01:00<00:32, 1447518.33it/s] 85%|████████▍ | 144097280/170498071 [01:00<00:20, 1318823.48it/s] 72%|███████▏  | 123281408/170498071 [01:00<00:32, 1450367.21it/s] 85%|████████▍ | 144252928/170498071 [01:00<00:19, 1379538.44it/s] 72%|███████▏  | 123428864/170498071 [01:00<00:32, 1441542.74it/s] 85%|████████▍ | 144400384/170498071 [01:00<00:19, 1361689.47it/s] 72%|███████▏  | 123576320/170498071 [01:00<00:32, 1442825.11it/s] 85%|████████▍ | 144564224/170498071 [01:00<00:18, 1428887.46it/s] 73%|███████▎  | 123723776/170498071 [01:00<00:32, 1429481.00it/s] 85%|████████▍ | 144711680/170498071 [01:00<00:18, 1402159.89it/s] 73%|███████▎  | 123871232/170498071 [01:00<00:32, 1432087.84it/s] 85%|████████▍ | 144875520/170498071 [01:00<00:17, 1459065.82it/s] 73%|███████▎  | 124035072/170498071 [01:01<00:31, 1463016.36it/s] 85%|████████▌ | 145031168/170498071 [01:01<00:17, 1445032.14it/s] 73%|███████▎  | 124182528/170498071 [01:01<00:31, 1458137.21it/s] 85%|████████▌ | 145186816/170498071 [01:01<00:17, 1473394.75it/s] 73%|███████▎  | 124346368/170498071 [01:01<00:31, 1481615.36it/s] 85%|████████▌ | 145342464/170498071 [01:01<00:17, 1459075.31it/s] 73%|███████▎  | 124502016/170498071 [01:01<00:30, 1498639.78it/s] 85%|████████▌ | 145514496/170498071 [01:01<00:16, 1514472.99it/s] 73%|███████▎  | 124674048/170498071 [01:01<00:30, 1526226.51it/s] 85%|████████▌ | 145670144/170498071 [01:01<00:16, 1487988.48it/s] 73%|███████▎  | 124829696/170498071 [01:01<00:29, 1525650.33it/s] 86%|████████▌ | 145842176/170498071 [01:01<00:15, 1541997.00it/s] 73%|███████▎  | 124985344/170498071 [01:01<00:29, 1527190.06it/s] 86%|████████▌ | 145997824/170498071 [01:01<00:16, 1495250.16it/s] 73%|███████▎  | 125140992/170498071 [01:01<00:30, 1511673.16it/s] 73%|███████▎  | 125313024/170498071 [01:01<00:29, 1553854.60it/s] 86%|████████▌ | 146186240/170498071 [01:01<00:16, 1460358.84it/s] 74%|███████▎  | 125476864/170498071 [01:01<00:29, 1547497.01it/s] 86%|████████▌ | 146366464/170498071 [01:01<00:15, 1539997.88it/s] 74%|███████▎  | 125640704/170498071 [01:02<00:28, 1567012.36it/s] 86%|████████▌ | 146530304/170498071 [01:02<00:16, 1495375.95it/s] 74%|███████▍  | 125804544/170498071 [01:02<00:28, 1561553.84it/s] 86%|████████▌ | 146726912/170498071 [01:02<00:15, 1493803.30it/s] 74%|███████▍  | 125984768/170498071 [01:02<00:27, 1612621.28it/s] 86%|████████▌ | 146907136/170498071 [01:02<00:15, 1558782.04it/s] 74%|███████▍  | 126148608/170498071 [01:02<00:27, 1593628.61it/s] 86%|████████▋ | 147070976/170498071 [01:02<00:15, 1510788.47it/s] 74%|███████▍  | 126328832/170498071 [01:02<00:26, 1637240.87it/s] 86%|████████▋ | 147267584/170498071 [01:02<00:15, 1505384.80it/s] 74%|███████▍  | 126500864/170498071 [01:02<00:26, 1636201.39it/s] 86%|████████▋ | 147447808/170498071 [01:02<00:14, 1579210.07it/s] 74%|███████▍  | 126689280/170498071 [01:02<00:26, 1667621.59it/s] 87%|████████▋ | 147611648/170498071 [01:02<00:14, 1550309.45it/s] 74%|███████▍  | 126861312/170498071 [01:02<00:25, 1681041.41it/s] 87%|████████▋ | 147791872/170498071 [01:02<00:14, 1604238.79it/s] 75%|███████▍  | 127049728/170498071 [01:02<00:25, 1700537.79it/s] 87%|████████▋ | 147955712/170498071 [01:02<00:14, 1578605.06it/s] 75%|███████▍  | 127221760/170498071 [01:02<00:25, 1701101.38it/s] 87%|████████▋ | 148135936/170498071 [01:03<00:13, 1636377.25it/s] 75%|███████▍  | 127410176/170498071 [01:03<00:24, 1738312.52it/s] 87%|████████▋ | 148307968/170498071 [01:03<00:13, 1604291.13it/s] 75%|███████▍  | 127590400/170498071 [01:03<00:24, 1727053.39it/s] 87%|████████▋ | 148496384/170498071 [01:03<00:13, 1672592.49it/s] 75%|███████▍  | 127787008/170498071 [01:03<00:23, 1781307.55it/s] 87%|████████▋ | 148668416/170498071 [01:03<00:13, 1640863.57it/s] 75%|███████▌  | 127967232/170498071 [01:03<00:24, 1753246.54it/s] 87%|████████▋ | 148856832/170498071 [01:03<00:12, 1700559.72it/s] 75%|███████▌  | 128163840/170498071 [01:03<00:23, 1800788.73it/s] 75%|███████▌  | 128352256/170498071 [01:03<00:23, 1795361.28it/s] 87%|████████▋ | 149028864/170498071 [01:03<00:12, 1658079.37it/s] 75%|███████▌  | 128557056/170498071 [01:03<00:22, 1849224.48it/s] 88%|████████▊ | 149217280/170498071 [01:03<00:12, 1714106.40it/s] 76%|███████▌  | 128745472/170498071 [01:03<00:22, 1829360.83it/s] 88%|████████▊ | 149397504/170498071 [01:03<00:12, 1662968.10it/s] 76%|███████▌  | 128950272/170498071 [01:03<00:22, 1873700.68it/s] 88%|████████▊ | 149626880/170498071 [01:03<00:12, 1681673.86it/s] 76%|███████▌  | 129138688/170498071 [01:04<00:22, 1847761.59it/s] 88%|████████▊ | 149839872/170498071 [01:04<00:11, 1783639.61it/s] 76%|███████▌  | 129343488/170498071 [01:04<00:21, 1888245.10it/s] 88%|████████▊ | 150028288/170498071 [01:04<00:11, 1755863.81it/s] 76%|███████▌  | 129540096/170498071 [01:04<00:21, 1876509.14it/s] 88%|████████▊ | 150233088/170498071 [01:04<00:11, 1831985.05it/s] 76%|███████▌  | 129753088/170498071 [01:04<00:21, 1935508.26it/s] 88%|████████▊ | 150421504/170498071 [01:04<00:11, 1762573.72it/s] 76%|███████▌  | 129949696/170498071 [01:04<00:21, 1912405.35it/s] 88%|████████▊ | 150659072/170498071 [01:04<00:11, 1773144.38it/s] 76%|███████▋  | 130179072/170498071 [01:04<00:20, 1991791.35it/s] 88%|████████▊ | 150888448/170498071 [01:04<00:10, 1890366.77it/s] 76%|███████▋  | 130383872/170498071 [01:04<00:20, 1954884.28it/s] 89%|████████▊ | 151085056/170498071 [01:04<00:10, 1816067.27it/s] 77%|███████▋  | 130621440/170498071 [01:04<00:19, 2043275.76it/s] 77%|███████▋  | 130834432/170498071 [01:04<00:19, 2021394.69it/s] 89%|████████▊ | 151314432/170498071 [01:04<00:10, 1804680.36it/s] 77%|███████▋  | 131047424/170498071 [01:04<00:19, 2051102.34it/s] 89%|████████▉ | 151543808/170498071 [01:04<00:09, 1925138.50it/s] 77%|███████▋  | 131260416/170498071 [01:05<00:19, 2026766.83it/s] 89%|████████▉ | 151740416/170498071 [01:05<00:10, 1872957.64it/s] 77%|███████▋  | 131489792/170498071 [01:05<00:18, 2086231.72it/s] 89%|████████▉ | 151969792/170498071 [01:05<00:09, 1960286.93it/s] 77%|███████▋  | 131702784/170498071 [01:05<00:18, 2061936.79it/s] 89%|████████▉ | 152174592/170498071 [01:05<00:09, 1933203.62it/s] 77%|███████▋  | 131932160/170498071 [01:05<00:18, 2111734.42it/s] 89%|████████▉ | 152395776/170498071 [01:05<00:09, 2000704.63it/s] 78%|███████▊  | 132145152/170498071 [01:05<00:18, 2081161.24it/s] 90%|████████▉ | 152600576/170498071 [01:05<00:09, 1961555.08it/s] 78%|███████▊  | 132390912/170498071 [01:05<00:17, 2163433.37it/s] 90%|████████▉ | 152821760/170498071 [01:05<00:08, 2023669.37it/s] 78%|███████▊  | 132612096/170498071 [01:05<00:17, 2140346.77it/s] 90%|████████▉ | 153026560/170498071 [01:05<00:08, 1985298.39it/s] 78%|███████▊  | 132849664/170498071 [01:05<00:17, 2190400.25it/s] 90%|████████▉ | 153247744/170498071 [01:05<00:08, 2039640.91it/s] 78%|███████▊  | 133070848/170498071 [01:05<00:17, 2158871.37it/s] 90%|█████████ | 153460736/170498071 [01:05<00:08, 1998614.57it/s] 78%|███████▊  | 133308416/170498071 [01:06<00:16, 2202080.39it/s] 90%|█████████ | 153690112/170498071 [01:06<00:08, 2076593.69it/s] 78%|███████▊  | 133529600/170498071 [01:06<00:17, 2170798.02it/s] 90%|█████████ | 153903104/170498071 [01:06<00:08, 2031087.34it/s] 78%|███████▊  | 133783552/170498071 [01:06<00:16, 2247650.13it/s] 90%|█████████ | 154148864/170498071 [01:06<00:07, 2137108.95it/s] 79%|███████▊  | 134012928/170498071 [01:06<00:16, 2223522.55it/s] 91%|█████████ | 154370048/170498071 [01:06<00:07, 2066426.10it/s] 79%|███████▊  | 134242304/170498071 [01:06<00:17, 2050094.70it/s] 91%|█████████ | 154607616/170498071 [01:06<00:08, 1974933.25it/s] 79%|███████▉  | 134455296/170498071 [01:06<00:17, 2065010.59it/s] 91%|█████████ | 154812416/170498071 [01:06<00:08, 1958638.27it/s] 79%|███████▉  | 134668288/170498071 [01:06<00:17, 1996056.65it/s] 91%|█████████ | 155017216/170498071 [01:06<00:08, 1794114.17it/s] 79%|███████▉  | 134873088/170498071 [01:06<00:19, 1821064.02it/s] 91%|█████████ | 155205632/170498071 [01:06<00:09, 1696124.96it/s] 79%|███████▉  | 135077888/170498071 [01:06<00:19, 1820855.17it/s] 91%|█████████ | 155394048/170498071 [01:06<00:09, 1640218.55it/s] 79%|███████▉  | 135266304/170498071 [01:07<00:19, 1832324.44it/s] 91%|█████████▏| 155607040/170498071 [01:07<00:08, 1753854.30it/s] 79%|███████▉  | 135454720/170498071 [01:07<00:18, 1845763.87it/s] 91%|█████████▏| 155787264/170498071 [01:07<00:08, 1717505.58it/s] 80%|███████▉  | 135643136/170498071 [01:07<00:18, 1837362.94it/s] 91%|█████████▏| 155983872/170498071 [01:07<00:08, 1779178.55it/s] 80%|███████▉  | 135847936/170498071 [01:07<00:18, 1872566.89it/s] 92%|█████████▏| 156172288/170498071 [01:07<00:08, 1762040.26it/s] 80%|███████▉  | 136036352/170498071 [01:07<00:18, 1854652.76it/s] 92%|█████████▏| 156377088/170498071 [01:07<00:07, 1829537.72it/s] 80%|███████▉  | 136224768/170498071 [01:07<00:21, 1560523.23it/s] 92%|█████████▏| 156565504/170498071 [01:07<00:07, 1795286.18it/s] 80%|████████  | 136503296/170498071 [01:07<00:19, 1769864.24it/s] 92%|█████████▏| 156753920/170498071 [01:07<00:08, 1628016.66it/s] 80%|████████  | 136699904/170498071 [01:07<00:20, 1646591.58it/s] 92%|█████████▏| 156925952/170498071 [01:07<00:08, 1633238.80it/s] 80%|████████  | 136880128/170498071 [01:07<00:20, 1610554.11it/s] 92%|█████████▏| 157097984/170498071 [01:08<00:08, 1499459.15it/s] 80%|████████  | 137052160/170498071 [01:08<00:20, 1623470.35it/s] 92%|█████████▏| 157253632/170498071 [01:08<00:08, 1473968.90it/s] 80%|████████  | 137224192/170498071 [01:08<00:21, 1513864.49it/s] 92%|█████████▏| 157409280/170498071 [01:08<00:08, 1490634.06it/s] 81%|████████  | 137404416/170498071 [01:08<00:21, 1541283.39it/s] 92%|█████████▏| 157564928/170498071 [01:08<00:08, 1471376.27it/s] 81%|████████  | 137568256/170498071 [01:08<00:21, 1553225.56it/s] 93%|█████████▎| 157720576/170498071 [01:08<00:08, 1490234.93it/s] 81%|████████  | 137732096/170498071 [01:08<00:21, 1555794.09it/s] 93%|█████████▎| 157876224/170498071 [01:08<00:08, 1470782.88it/s] 81%|████████  | 137895936/170498071 [01:08<00:20, 1563437.83it/s] 93%|█████████▎| 158031872/170498071 [01:08<00:08, 1489738.42it/s] 93%|█████████▎| 158187520/170498071 [01:08<00:08, 1472036.79it/s] 81%|████████  | 138076160/170498071 [01:08<00:21, 1516516.22it/s] 93%|█████████▎| 158359552/170498071 [01:08<00:07, 1526804.90it/s] 81%|████████  | 138256384/170498071 [01:08<00:20, 1591247.63it/s] 93%|█████████▎| 158515200/170498071 [01:08<00:07, 1500404.44it/s] 81%|████████  | 138420224/170498071 [01:08<00:20, 1560352.43it/s] 93%|█████████▎| 158687232/170498071 [01:09<00:07, 1548229.55it/s] 81%|████████▏ | 138616832/170498071 [01:09<00:19, 1662258.74it/s] 93%|█████████▎| 158851072/170498071 [01:09<00:07, 1537028.98it/s] 81%|████████▏ | 138788864/170498071 [01:09<00:19, 1614949.60it/s] 93%|█████████▎| 159014912/170498071 [01:09<00:07, 1556186.90it/s] 82%|████████▏ | 138977280/170498071 [01:09<00:19, 1639243.36it/s] 93%|█████████▎| 159178752/170498071 [01:09<00:07, 1544206.24it/s] 82%|████████▏ | 139149312/170498071 [01:09<00:18, 1656025.77it/s] 93%|█████████▎| 159358976/170498071 [01:09<00:06, 1598445.49it/s] 82%|████████▏ | 139321344/170498071 [01:09<00:18, 1642301.16it/s] 94%|█████████▎| 159522816/170498071 [01:09<00:06, 1573252.79it/s] 82%|████████▏ | 139501568/170498071 [01:09<00:18, 1674918.90it/s] 94%|█████████▎| 159686656/170498071 [01:09<00:06, 1579702.57it/s] 82%|████████▏ | 139681792/170498071 [01:09<00:18, 1680306.97it/s] 94%|█████████▍| 159850496/170498071 [01:09<00:06, 1566593.66it/s] 82%|████████▏ | 139853824/170498071 [01:09<00:18, 1683931.85it/s] 94%|█████████▍| 160047104/170498071 [01:09<00:06, 1646434.80it/s] 82%|████████▏ | 140042240/170498071 [01:09<00:17, 1705423.58it/s] 94%|█████████▍| 160219136/170498071 [01:10<00:06, 1636295.29it/s] 82%|████████▏ | 140214272/170498071 [01:10<00:17, 1702720.37it/s] 94%|█████████▍| 160391168/170498071 [01:10<00:06, 1643309.92it/s] 82%|████████▏ | 140402688/170498071 [01:10<00:17, 1718518.75it/s] 94%|█████████▍| 160563200/170498071 [01:10<00:06, 1637455.48it/s] 82%|████████▏ | 140582912/170498071 [01:10<00:17, 1734184.27it/s] 94%|█████████▍| 160751616/170498071 [01:10<00:05, 1682309.05it/s] 83%|████████▎ | 140763136/170498071 [01:10<00:17, 1721725.93it/s] 94%|█████████▍| 160923648/170498071 [01:10<00:05, 1665375.88it/s] 83%|████████▎ | 140943360/170498071 [01:10<00:17, 1735653.39it/s] 94%|█████████▍| 161112064/170498071 [01:10<00:05, 1699692.57it/s] 83%|████████▎ | 141139968/170498071 [01:10<00:16, 1766648.14it/s]170500096it [01:10, 5623471.90it/s]                                95%|█████████▍| 161292288/170498071 [01:10<00:05, 1702484.23it/s] 83%|████████▎ | 141336576/170498071 [01:10<00:16, 1808702.03it/s] 95%|█████████▍| 161488896/170498071 [01:10<00:05, 1745306.83it/s] 83%|████████▎ | 141524992/170498071 [01:10<00:16, 1802123.97it/s] 95%|█████████▍| 161669120/170498071 [01:10<00:05, 1736469.40it/s] 83%|████████▎ | 141713408/170498071 [01:10<00:15, 1812314.94it/s] 95%|█████████▍| 161865728/170498071 [01:10<00:04, 1773329.15it/s] 83%|████████▎ | 141910016/170498071 [01:10<00:15, 1823700.16it/s] 83%|████████▎ | 142106624/170498071 [01:11<00:15, 1862796.42it/s] 95%|█████████▌| 162045952/170498071 [01:11<00:04, 1755428.19it/s] 95%|█████████▌| 162258944/170498071 [01:11<00:04, 1824284.47it/s] 83%|████████▎ | 142303232/170498071 [01:11<00:15, 1849184.50it/s] 84%|████████▎ | 142516224/170498071 [01:11<00:14, 1907859.66it/s] 95%|█████████▌| 162447360/170498071 [01:11<00:04, 1810468.49it/s] 95%|█████████▌| 162652160/170498071 [01:11<00:04, 1852865.32it/s] 84%|████████▎ | 142712832/170498071 [01:11<00:14, 1894741.29it/s] 84%|████████▍ | 142925824/170498071 [01:11<00:14, 1940762.15it/s] 96%|█████████▌| 162840576/170498071 [01:11<00:04, 1835166.40it/s] 84%|████████▍ | 143122432/170498071 [01:11<00:14, 1921657.38it/s] 96%|█████████▌| 163045376/170498071 [01:11<00:03, 1864406.53it/s] 84%|████████▍ | 143335424/170498071 [01:11<00:13, 1963335.61it/s] 96%|█████████▌| 163241984/170498071 [01:11<00:03, 1858736.57it/s] 84%|████████▍ | 143548416/170498071 [01:11<00:13, 1973533.05it/s] 96%|█████████▌| 163454976/170498071 [01:11<00:03, 1910796.49it/s] 84%|████████▍ | 143753216/170498071 [01:11<00:13, 1994517.70it/s] 96%|█████████▌| 163651584/170498071 [01:11<00:03, 1889665.36it/s] 84%|████████▍ | 143958016/170498071 [01:12<00:13, 1969303.54it/s] 96%|█████████▌| 163864576/170498071 [01:12<00:03, 1933904.16it/s] 85%|████████▍ | 144171008/170498071 [01:12<00:13, 2008573.82it/s] 96%|█████████▌| 164061184/170498071 [01:12<00:03, 1916210.74it/s] 85%|████████▍ | 144384000/170498071 [01:12<00:13, 2002316.49it/s] 96%|█████████▋| 164290560/170498071 [01:12<00:03, 1982498.72it/s] 85%|████████▍ | 144613376/170498071 [01:12<00:12, 2065446.79it/s] 96%|█████████▋| 164495360/170498071 [01:12<00:03, 1975700.47it/s] 85%|████████▍ | 144826368/170498071 [01:12<00:12, 2047769.18it/s] 97%|█████████▋| 164716544/170498071 [01:12<00:02, 2006706.79it/s] 85%|████████▌ | 145055744/170498071 [01:12<00:12, 2099615.69it/s] 97%|█████████▋| 164921344/170498071 [01:12<00:02, 1991331.92it/s] 85%|████████▌ | 145268736/170498071 [01:12<00:12, 2072990.99it/s] 97%|█████████▋| 165142528/170498071 [01:12<00:02, 2021142.52it/s] 85%|████████▌ | 145498112/170498071 [01:12<00:11, 2104519.16it/s] 97%|█████████▋| 165355520/170498071 [01:12<00:02, 2019099.31it/s] 85%|████████▌ | 145727488/170498071 [01:12<00:11, 2093036.43it/s] 97%|█████████▋| 165584896/170498071 [01:12<00:02, 2065031.54it/s] 86%|████████▌ | 145956864/170498071 [01:12<00:11, 2130304.09it/s] 97%|█████████▋| 165797888/170498071 [01:12<00:02, 2046831.84it/s] 86%|████████▌ | 146186240/170498071 [01:13<00:11, 2142240.49it/s] 97%|█████████▋| 166027264/170498071 [01:13<00:02, 2088867.58it/s] 86%|████████▌ | 146415616/170498071 [01:13<00:11, 2165654.16it/s] 98%|█████████▊| 166240256/170498071 [01:13<00:02, 2061568.22it/s] 86%|████████▌ | 146644992/170498071 [01:13<00:10, 2178138.03it/s] 98%|█████████▊| 166486016/170498071 [01:13<00:01, 2142438.52it/s] 86%|████████▌ | 146874368/170498071 [01:13<00:10, 2191229.00it/s] 98%|█████████▊| 166707200/170498071 [01:13<00:01, 2122150.92it/s] 86%|████████▋ | 147103744/170498071 [01:13<00:10, 2195685.12it/s] 98%|█████████▊| 166961152/170498071 [01:13<00:01, 2197720.05it/s] 86%|████████▋ | 147349504/170498071 [01:13<00:10, 2262505.40it/s] 98%|█████████▊| 167182336/170498071 [01:13<00:01, 2166035.26it/s] 87%|████████▋ | 147578880/170498071 [01:13<00:10, 2260251.35it/s] 98%|█████████▊| 167419904/170498071 [01:13<00:01, 2195030.86it/s] 87%|████████▋ | 147808256/170498071 [01:13<00:09, 2269802.85it/s] 98%|█████████▊| 167649280/170498071 [01:13<00:01, 2184782.38it/s] 87%|████████▋ | 148054016/170498071 [01:13<00:09, 2245167.47it/s] 98%|█████████▊| 167895040/170498071 [01:13<00:01, 2238968.90it/s] 87%|████████▋ | 148316160/170498071 [01:13<00:09, 2298004.94it/s] 99%|█████████▊| 168124416/170498071 [01:14<00:01, 2204981.67it/s] 87%|████████▋ | 148561920/170498071 [01:14<00:09, 2321340.38it/s] 99%|█████████▉| 168370176/170498071 [01:14<00:00, 2255293.12it/s] 87%|████████▋ | 148807680/170498071 [01:14<00:09, 2348650.51it/s] 99%|█████████▉| 168599552/170498071 [01:14<00:00, 2217557.88it/s] 87%|████████▋ | 149053440/170498071 [01:14<00:09, 2343839.31it/s] 99%|█████████▉| 168861696/170498071 [01:14<00:00, 2292627.30it/s] 88%|████████▊ | 149315584/170498071 [01:14<00:08, 2396673.26it/s] 99%|█████████▉| 169099264/170498071 [01:14<00:00, 2280914.81it/s] 99%|█████████▉| 169353216/170498071 [01:14<00:00, 2326826.84it/s] 88%|████████▊ | 149561344/170498071 [01:14<00:09, 2148606.16it/s] 88%|████████▊ | 149782528/170498071 [01:14<00:09, 2130850.61it/s] 99%|█████████▉| 169598976/170498071 [01:14<00:00, 2270621.51it/s]100%|█████████▉| 169893888/170498071 [01:14<00:00, 2417827.40it/s] 88%|████████▊ | 150003712/170498071 [01:14<00:10, 1990699.13it/s]100%|█████████▉| 170139648/170498071 [01:14<00:00, 2355133.08it/s] 88%|████████▊ | 150208512/170498071 [01:14<00:10, 2000252.16it/s]100%|█████████▉| 170385408/170498071 [01:15<00:00, 1979952.60it/s] 88%|████████▊ | 150413312/170498071 [01:15<00:11, 1698464.40it/s] 88%|████████▊ | 150593536/170498071 [01:15<00:12, 1538429.41it/s] 88%|████████▊ | 150790144/170498071 [01:15<00:12, 1530885.37it/s] 89%|████████▊ | 150986752/170498071 [01:15<00:13, 1493734.42it/s] 89%|████████▊ | 151183360/170498071 [01:15<00:12, 1534702.90it/s] 89%|████████▉ | 151347200/170498071 [01:15<00:12, 1504797.43it/s] 89%|████████▉ | 151502848/170498071 [01:15<00:13, 1458856.15it/s] 89%|████████▉ | 151691264/170498071 [01:15<00:12, 1563503.07it/s] 89%|████████▉ | 151855104/170498071 [01:16<00:12, 1450078.57it/s] 89%|████████▉ | 152018944/170498071 [01:16<00:12, 1435705.58it/s] 89%|████████▉ | 152231936/170498071 [01:16<00:12, 1462954.60it/s] 89%|████████▉ | 152444928/170498071 [01:16<00:11, 1543067.50it/s] 90%|████████▉ | 152608768/170498071 [01:16<00:11, 1523642.48it/s] 90%|████████▉ | 152788992/170498071 [01:16<00:11, 1529069.12it/s] 90%|████████▉ | 153001984/170498071 [01:16<00:11, 1530390.45it/s] 90%|████████▉ | 153214976/170498071 [01:16<00:10, 1596005.43it/s] 90%|████████▉ | 153378816/170498071 [01:17<00:10, 1558162.71it/s] 90%|█████████ | 153559040/170498071 [01:17<00:10, 1555842.83it/s] 90%|█████████ | 153772032/170498071 [01:17<00:10, 1615152.31it/s] 90%|█████████ | 153935872/170498071 [01:17<00:10, 1574087.65it/s] 90%|█████████ | 154132480/170498071 [01:17<00:10, 1602616.85it/s] 91%|█████████ | 154345472/170498071 [01:17<00:09, 1651926.28it/s] 91%|█████████ | 154517504/170498071 [01:17<00:09, 1630045.65it/s] 91%|█████████ | 154681344/170498071 [01:17<00:09, 1627029.65it/s] 91%|█████████ | 154845184/170498071 [01:17<00:09, 1575387.97it/s] 91%|█████████ | 155009024/170498071 [01:18<00:10, 1436048.64it/s] 91%|█████████ | 155156480/170498071 [01:18<00:11, 1385547.32it/s] 91%|█████████ | 155328512/170498071 [01:18<00:10, 1392420.10it/s] 91%|█████████ | 155475968/170498071 [01:18<00:10, 1371759.00it/s] 91%|█████████▏| 155623424/170498071 [01:18<00:11, 1347545.07it/s] 91%|█████████▏| 155795456/170498071 [01:18<00:10, 1441221.67it/s] 91%|█████████▏| 155942912/170498071 [01:18<00:10, 1406434.16it/s] 92%|█████████▏| 156114944/170498071 [01:18<00:09, 1485972.27it/s] 92%|█████████▏| 156270592/170498071 [01:18<00:09, 1450447.86it/s]avail True
ngpus_per_node 4
 92%|█████████▏| 156426240/170498071 [01:19<00:09, 1464554.53it/s] 92%|█████████▏| 156581888/170498071 [01:19<00:09, 1481888.85it/s] 92%|█████████▏| 156737536/170498071 [01:19<00:09, 1454912.82it/s] 92%|█████████▏| 156934144/170498071 [01:19<00:09, 1497698.08it/s] 92%|█████████▏| 157114368/170498071 [01:19<00:08, 1523027.12it/s] 92%|█████████▏| 157278208/170498071 [01:19<00:08, 1508141.58it/s] 92%|█████████▏| 157491200/170498071 [01:19<00:07, 1637540.63it/s] 92%|█████████▏| 157663232/170498071 [01:19<00:07, 1631073.14it/s] 93%|█████████▎| 157851648/170498071 [01:19<00:07, 1608032.21it/s] 93%|█████████▎| 158031872/170498071 [01:20<00:07, 1605206.38it/s] 93%|█████████▎| 158212096/170498071 [01:20<00:07, 1606021.87it/s] 93%|█████████▎| 158425088/170498071 [01:20<00:07, 1718613.09it/s] 93%|█████████▎| 158605312/170498071 [01:20<00:06, 1706824.36it/s] 93%|█████████▎| 158785536/170498071 [01:20<00:06, 1725326.98it/s] 93%|█████████▎| 158965760/170498071 [01:20<00:06, 1713753.27it/s] 93%|█████████▎| 159145984/170498071 [01:20<00:06, 1729965.82it/s] 93%|█████████▎| 159326208/170498071 [01:20<00:06, 1715230.47it/s] 94%|█████████▎| 159506432/170498071 [01:20<00:06, 1633761.79it/s] 94%|█████████▎| 159703040/170498071 [01:21<00:06, 1671722.80it/s] 94%|█████████▍| 159883264/170498071 [01:21<00:06, 1652689.71it/s] 94%|█████████▍| 160096256/170498071 [01:21<00:06, 1677423.54it/s] 94%|█████████▍| 160292864/170498071 [01:21<00:06, 1698790.80it/s] 94%|█████████▍| 160473088/170498071 [01:21<00:06, 1668447.45it/s] 94%|█████████▍| 160686080/170498071 [01:21<00:05, 1776462.35it/s] 94%|█████████▍| 160866304/170498071 [01:21<00:05, 1741462.91it/s] 94%|█████████▍| 161062912/170498071 [01:21<00:05, 1798013.45it/s] 95%|█████████▍| 161251328/170498071 [01:21<00:05, 1785069.34it/s] 95%|█████████▍| 161439744/170498071 [01:22<00:05, 1808654.25it/s] 95%|█████████▍| 161628160/170498071 [01:22<00:04, 1790765.05it/s] 95%|█████████▍| 161816576/170498071 [01:22<00:04, 1814251.66it/s] 95%|█████████▌| 162004992/170498071 [01:22<00:04, 1796227.53it/s] 95%|█████████▌| 162209792/170498071 [01:22<00:04, 1858433.19it/s] 95%|█████████▌| 162398208/170498071 [01:22<00:04, 1827235.40it/s] 95%|█████████▌| 162603008/170498071 [01:22<00:04, 1883006.99it/s] 95%|█████████▌| 162799616/170498071 [01:22<00:04, 1859528.21it/s] 96%|█████████▌| 163012608/170498071 [01:22<00:03, 1931275.52it/s] 96%|█████████▌| 163209216/170498071 [01:22<00:03, 1891285.34it/s] 96%|█████████▌| 163422208/170498071 [01:23<00:03, 1956846.40it/s] 96%|█████████▌| 163627008/170498071 [01:23<00:03, 1935664.89it/s] 96%|█████████▌| 163848192/170498071 [01:23<00:03, 2009315.45it/s] 96%|█████████▌| 164052992/170498071 [01:23<00:03, 1972390.74it/s] 96%|█████████▋| 164274176/170498071 [01:23<00:03, 2038255.66it/s] 96%|█████████▋| 164487168/170498071 [01:23<00:02, 2011380.39it/s] 97%|█████████▋| 164732928/170498071 [01:23<00:02, 2004459.70it/s] 97%|█████████▋| 164962304/170498071 [01:23<00:02, 2039528.15it/s] 97%|█████████▋| 165175296/170498071 [01:23<00:02, 1983761.86it/s] 97%|█████████▋| 165453824/170498071 [01:24<00:02, 2163580.07it/s] 97%|█████████▋| 165683200/170498071 [01:24<00:02, 2114769.37it/s] 97%|█████████▋| 165928960/170498071 [01:24<00:02, 2025303.71it/s] 97%|█████████▋| 166207488/170498071 [01:24<00:01, 2196724.95it/s] 98%|█████████▊| 166436864/170498071 [01:24<00:01, 2139216.57it/s] 98%|█████████▊| 166682624/170498071 [01:24<00:01, 2128504.99it/s] 98%|█████████▊| 166928384/170498071 [01:24<00:01, 2165285.82it/s] 98%|█████████▊| 167157760/170498071 [01:24<00:01, 2190788.41it/s] 98%|█████████▊| 167403520/170498071 [01:24<00:01, 2215789.17it/s] 98%|█████████▊| 167632896/170498071 [01:25<00:01, 2233019.56it/s] 98%|█████████▊| 167878656/170498071 [01:25<00:01, 2252515.12it/s] 99%|█████████▊| 168124416/170498071 [01:25<00:01, 2293712.03it/s] 99%|█████████▉| 168370176/170498071 [01:25<00:00, 2289525.94it/s] 99%|█████████▉| 168615936/170498071 [01:25<00:00, 2329017.22it/s] 99%|█████████▉| 168861696/170498071 [01:25<00:00, 2317646.08it/s] 99%|█████████▉| 169107456/170498071 [01:25<00:00, 2347985.17it/s] 99%|█████████▉| 169353216/170498071 [01:25<00:00, 2335125.85it/s] 99%|█████████▉| 169615360/170498071 [01:25<00:00, 2397373.39it/s]100%|█████████▉| 169877504/170498071 [01:25<00:00, 2406741.68it/s]100%|█████████▉| 170123264/170498071 [01:26<00:00, 2421308.14it/s]100%|█████████▉| 170385408/170498071 [01:26<00:00, 2421914.85it/s]avail True
ngpus_per_node 4
170500096it [01:30, 1979952.60it/s]                               170500096it [01:40, 2421914.85it/s]                               avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
Epoch: [0][  0/390]	Time 58.914 (58.914)	Data 20.233 (20.233)	Loss 1.3243e-01 (1.3243e-01)	Acc@1 100.00 (100.00)	Acc@5 100.00 (100.00)
Epoch: [0][ 10/390]	Time  0.172 ( 5.516)	Data  0.000 ( 1.840)	Loss 7.0100e+00 (6.0164e+00)	Acc@1   0.00 ( 10.23)	Acc@5   3.12 ( 12.50)
Epoch: [0][ 20/390]	Time  0.174 ( 2.971)	Data  0.000 ( 0.965)	Loss 7.2541e+00 (6.5993e+00)	Acc@1   0.00 (  6.25)	Acc@5   6.25 (  9.08)
Epoch: [0][ 30/390]	Time  0.179 ( 2.069)	Data  0.000 ( 0.655)	Loss 6.9509e+00 (6.7636e+00)	Acc@1   9.38 (  5.04)	Acc@5  21.88 ( 10.48)
Epoch: [0][ 40/390]	Time  0.171 ( 1.606)	Data  0.000 ( 0.496)	Loss 6.8088e+00 (6.8048e+00)	Acc@1   0.00 (  5.03)	Acc@5  15.62 ( 12.35)
Epoch: [0][ 50/390]	Time  0.170 ( 1.325)	Data  0.000 ( 0.400)	Loss 6.9680e+00 (6.8207e+00)	Acc@1   9.38 (  5.39)	Acc@5  21.88 ( 13.91)
Epoch: [0][ 60/390]	Time  0.177 ( 1.136)	Data  0.000 ( 0.335)	Loss 6.9182e+00 (6.8469e+00)	Acc@1   0.00 (  5.33)	Acc@5  21.88 ( 14.04)
Epoch: [0][ 70/390]	Time  0.178 ( 1.001)	Data  0.000 ( 0.288)	Loss 7.1656e+00 (6.8808e+00)	Acc@1   9.38 (  5.37)	Acc@5  12.50 ( 14.17)
Epoch: [0][ 80/390]	Time  0.170 ( 0.898)	Data  0.000 ( 0.253)	Loss 7.1492e+00 (6.9209e+00)	Acc@1   9.38 (  5.25)	Acc@5  21.88 ( 13.97)
Epoch: [0][ 90/390]	Time  0.171 ( 0.819)	Data  0.000 ( 0.226)	Loss 7.3753e+00 (6.9621e+00)	Acc@1   3.12 (  5.05)	Acc@5  15.62 ( 13.46)
Epoch: [0][100/390]	Time  0.174 ( 0.754)	Data  0.000 ( 0.204)	Loss 7.3856e+00 (7.0024e+00)	Acc@1   9.38 (  5.14)	Acc@5  18.75 ( 13.52)
Epoch: [0][110/390]	Time  0.171 ( 0.702)	Data  0.000 ( 0.185)	Loss 7.3549e+00 (7.0408e+00)	Acc@1   3.12 (  4.98)	Acc@5   9.38 ( 13.32)
Epoch: [0][120/390]	Time  0.181 ( 0.658)	Data  0.000 ( 0.170)	Loss 7.4047e+00 (7.0830e+00)	Acc@1   9.38 (  4.93)	Acc@5  18.75 ( 13.35)
Epoch: [0][130/390]	Time  0.171 ( 0.621)	Data  0.000 ( 0.158)	Loss 7.5495e+00 (7.1218e+00)	Acc@1   6.25 (  4.91)	Acc@5  12.50 ( 13.17)
Epoch: [0][140/390]	Time  0.173 ( 0.589)	Data  0.000 ( 0.147)	Loss 7.6247e+00 (7.1524e+00)	Acc@1   3.12 (  4.90)	Acc@5  12.50 ( 13.05)
Epoch: [0][150/390]	Time  0.172 ( 0.561)	Data  0.000 ( 0.137)	Loss 7.8234e+00 (7.1896e+00)	Acc@1   3.12 (  4.80)	Acc@5   3.12 ( 12.67)
Epoch: [0][160/390]	Time  0.171 ( 0.537)	Data  0.000 ( 0.129)	Loss 7.7351e+00 (7.2200e+00)	Acc@1   3.12 (  4.68)	Acc@5   3.12 ( 12.56)
Epoch: [0][170/390]	Time  0.170 ( 0.516)	Data  0.000 ( 0.122)	Loss 7.6255e+00 (7.2505e+00)	Acc@1   3.12 (  4.61)	Acc@5  18.75 ( 12.48)
Epoch: [0][180/390]	Time  0.177 ( 0.497)	Data  0.000 ( 0.115)	Loss 7.7883e+00 (7.2785e+00)	Acc@1   6.25 (  4.61)	Acc@5   6.25 ( 12.52)
Epoch: [0][190/390]	Time  0.170 ( 0.480)	Data  0.000 ( 0.109)	Loss 7.8623e+00 (7.3023e+00)	Acc@1   0.00 (  4.50)	Acc@5   3.12 ( 12.30)
Epoch: [0][200/390]	Time  0.171 ( 0.464)	Data  0.000 ( 0.104)	Loss 7.7911e+00 (7.3271e+00)	Acc@1   6.25 (  4.43)	Acc@5   9.38 ( 12.14)
Epoch: [0][210/390]	Time  0.176 ( 0.451)	Data  0.000 ( 0.099)	Loss 7.6170e+00 (7.3483e+00)	Acc@1  12.50 (  4.34)	Acc@5  28.12 ( 11.98)
Epoch: [0][220/390]	Time  0.170 ( 0.438)	Data  0.000 ( 0.095)	Loss 7.7914e+00 (7.3668e+00)	Acc@1   0.00 (  4.34)	Acc@5   0.00 ( 11.96)
Epoch: [0][230/390]	Time  0.169 ( 0.426)	Data  0.000 ( 0.091)	Loss 7.8050e+00 (7.3841e+00)	Acc@1   3.12 (  4.33)	Acc@5  12.50 ( 12.03)
Epoch: [0][240/390]	Time  0.170 ( 0.416)	Data  0.000 ( 0.087)	Loss 7.7206e+00 (7.4037e+00)	Acc@1   0.00 (  4.27)	Acc@5  15.62 ( 12.07)
Epoch: [0][250/390]	Time  0.170 ( 0.406)	Data  0.000 ( 0.084)	Loss 7.6765e+00 (7.4217e+00)	Acc@1   3.12 (  4.21)	Acc@5   6.25 ( 11.99)
Epoch: [0][260/390]	Time  0.170 ( 0.397)	Data  0.000 ( 0.081)	Loss 7.7502e+00 (7.4360e+00)	Acc@1   3.12 (  4.24)	Acc@5  18.75 ( 12.18)
Epoch: [0][270/390]	Time  0.173 ( 0.389)	Data  0.000 ( 0.078)	Loss 7.9537e+00 (7.4528e+00)	Acc@1   3.12 (  4.19)	Acc@5  15.62 ( 12.10)
Epoch: [0][280/390]	Time  0.170 ( 0.381)	Data  0.000 ( 0.075)	Loss 7.8275e+00 (7.4669e+00)	Acc@1   3.12 (  4.15)	Acc@5  12.50 ( 12.12)
Epoch: [0][290/390]	Time  0.170 ( 0.374)	Data  0.000 ( 0.073)	Loss 7.9468e+00 (7.4803e+00)	Acc@1   0.00 (  4.12)	Acc@5   9.38 ( 12.18)
Epoch: [0][300/390]	Time  0.170 ( 0.367)	Data  0.000 ( 0.071)	Loss 7.9174e+00 (7.4930e+00)	Acc@1   3.12 (  4.08)	Acc@5   6.25 ( 12.15)
Epoch: [0][310/390]	Time  0.172 ( 0.361)	Data  0.000 ( 0.068)	Loss 7.8100e+00 (7.5046e+00)	Acc@1   9.38 (  4.15)	Acc@5  18.75 ( 12.14)
Epoch: [0][320/390]	Time  0.169 ( 0.355)	Data  0.000 ( 0.066)	Loss 8.0189e+00 (7.5164e+00)	Acc@1   6.25 (  4.16)	Acc@5   6.25 ( 12.08)
Epoch: [0][330/390]	Time  0.170 ( 0.349)	Data  0.000 ( 0.064)	Loss 7.7648e+00 (7.5280e+00)	Acc@1  12.50 (  4.25)	Acc@5  25.00 ( 12.16)
Epoch: [0][340/390]	Time  0.174 ( 0.344)	Data  0.000 ( 0.063)	Loss 7.8566e+00 (7.5379e+00)	Acc@1   9.38 (  4.28)	Acc@5  12.50 ( 12.18)
Epoch: [0][350/390]	Time  0.169 ( 0.339)	Data  0.000 ( 0.061)	Loss 7.8351e+00 (7.5470e+00)	Acc@1  12.50 (  4.32)	Acc@5  18.75 ( 12.17)
Epoch: [0][360/390]	Time  0.176 ( 0.334)	Data  0.000 ( 0.059)	Loss 7.8367e+00 (7.5555e+00)	Acc@1   3.12 (  4.37)	Acc@5  12.50 ( 12.17)
Epoch: [0][370/390]	Time  0.170 ( 0.330)	Data  0.000 ( 0.058)	Loss 7.9224e+00 (7.5647e+00)	Acc@1   0.00 (  4.40)	Acc@5  12.50 ( 12.26)
Epoch: [0][380/390]	Time  0.169 ( 0.326)	Data  0.000 ( 0.056)	Loss 7.8983e+00 (7.5732e+00)	Acc@1   3.12 (  4.40)	Acc@5   9.38 ( 12.25)
170500096it [02:59, 948357.86it/s] 
/userdata/smetzger/gim/lib/python3.6/multiprocessing/semaphore_tracker.py:143: UserWarning: semaphore_tracker: There appear to be 12 leaked semaphores to clean up at shutdown
  len(cache))
/userdata/smetzger/gim/lib/python3.6/multiprocessing/semaphore_tracker.py:143: UserWarning: semaphore_tracker: There appear to be 12 leaked semaphores to clean up at shutdown
  len(cache))
/userdata/smetzger/gim/lib/python3.6/multiprocessing/semaphore_tracker.py:143: UserWarning: semaphore_tracker: There appear to be 12 leaked semaphores to clean up at shutdown
  len(cache))
Traceback (most recent call last):
  File "/userdata/smetzger/all_deepul_files/deepul_proj/moco/main_moco.py", line 419, in <module>
    main()
  File "/userdata/smetzger/all_deepul_files/deepul_proj/moco/main_moco.py", line 141, in main
    mp.spawn(main_worker, nprocs=ngpus_per_node, args=(ngpus_per_node, args))
  File "/userdata/smetzger/gim/lib/python3.6/site-packages/torch/multiprocessing/spawn.py", line 171, in spawn
    while not spawn_context.join():
  File "/userdata/smetzger/gim/lib/python3.6/site-packages/torch/multiprocessing/spawn.py", line 118, in join
    raise Exception(msg)
Exception: 

-- Process 0 terminated with the following error:
Traceback (most recent call last):
  File "/userdata/smetzger/gim/lib/python3.6/site-packages/torch/multiprocessing/spawn.py", line 19, in _wrap
    fn(i, *args)
  File "/userdata/smetzger/all_deepul_files/deepul_proj/moco/main_moco.py", line 292, in main_worker
    }, is_best=False, filename= args.checkpoint_fp + 'checkpoint_{:04d}.pth.tar'.format(epoch))
  File "/userdata/smetzger/all_deepul_files/deepul_proj/moco/main_moco.py", line 343, in save_checkpoint
    torch.save(state, filename)
  File "/userdata/smetzger/gim/lib/python3.6/site-packages/torch/serialization.py", line 224, in save
    return _with_file_like(f, "wb", lambda f: _save(obj, f, pickle_module, pickle_protocol))
  File "/userdata/smetzger/gim/lib/python3.6/site-packages/torch/serialization.py", line 147, in _with_file_like
    f = open(f, mode)
FileNotFoundError: [Errno 2] No such file or directory: '/userdata/smetzger/all_deepul_files/ckpt/checkpoint_0000.pth.tar'

time(seconds)        unlimited
file(blocks)         unlimited
data(kbytes)         unlimited
stack(kbytes)        unlimited
coredump(blocks)     unlimited
memory(kbytes)       unlimited
locked memory(kbytes) 64
process              1542210
nofiles              1024
vmemory(kbytes)      318000000
locks                unlimited
rtprio               0
avail True
ngpus_per_node 4
args Namespace(arch='resnet50', aug_plus=False, batch_size=128, checkpoint_fp='/userdata/smetzger/all_deepul_files/ckpts/', cos=False, data='/userdata/smetzger/data/cifar_10/', dist_backend='nccl', dist_url='tcp://localhost:10001', epochs=200, gpu=None, lr=0.015, mlp=True, moco_dim=128, moco_k=65536, moco_m=0.999, moco_t=0.07, momentum=0.9, multiprocessing_distributed=True, print_freq=10, rank=0, resume='', schedule=[120, 160], seed=None, start_epoch=0, weight_decay=0.0001, workers=32, world_size=1)
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
Use GPU: 0 for training
=> creating model 'resnet50'
MoCo(
  (encoder_q): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Sequential(
      (0): Linear(in_features=2048, out_features=2048, bias=True)
      (1): ReLU()
      (2): Linear(in_features=2048, out_features=128, bias=True)
    )
  )
  (encoder_k): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Sequential(
      (0): Linear(in_features=2048, out_features=2048, bias=True)
      (1): ReLU()
      (2): Linear(in_features=2048, out_features=128, bias=True)
    )
  )
)
Files already downloaded and verified
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
Epoch: [0][  0/390]	Time 22.641 (22.641)	Data 19.375 (19.375)	Loss 1.2981e-01 (1.2981e-01)	Acc@1 100.00 (100.00)	Acc@5 100.00 (100.00)
Epoch: [0][ 10/390]	Time  0.167 ( 2.214)	Data  0.000 ( 1.761)	Loss 6.8525e+00 (5.7315e+00)	Acc@1   0.00 ( 10.23)	Acc@5   9.38 ( 12.50)
Epoch: [0][ 20/390]	Time  0.176 ( 1.241)	Data  0.000 ( 0.924)	Loss 7.0967e+00 (6.3681e+00)	Acc@1   0.00 (  5.95)	Acc@5   6.25 (  8.33)
Epoch: [0][ 30/390]	Time  0.169 ( 0.895)	Data  0.000 ( 0.627)	Loss 6.8234e+00 (6.5798e+00)	Acc@1   3.12 (  5.34)	Acc@5  18.75 ( 10.28)
Epoch: [0][ 40/390]	Time  0.172 ( 0.719)	Data  0.000 ( 0.475)	Loss 7.0673e+00 (6.6714e+00)	Acc@1   0.00 (  5.11)	Acc@5   3.12 ( 11.36)
Epoch: [0][ 50/390]	Time  0.172 ( 0.611)	Data  0.000 ( 0.383)	Loss 6.9080e+00 (6.7283e+00)	Acc@1   3.12 (  5.39)	Acc@5  25.00 ( 12.56)
Epoch: [0][ 60/390]	Time  0.168 ( 0.539)	Data  0.000 ( 0.320)	Loss 6.8947e+00 (6.7712e+00)	Acc@1   0.00 (  5.17)	Acc@5  21.88 ( 13.47)
Epoch: [0][ 70/390]	Time  0.178 ( 0.487)	Data  0.000 ( 0.276)	Loss 7.1901e+00 (6.8048e+00)	Acc@1   0.00 (  5.11)	Acc@5  18.75 ( 13.95)
Epoch: [0][ 80/390]	Time  0.170 ( 0.448)	Data  0.000 ( 0.242)	Loss 7.0308e+00 (6.8540e+00)	Acc@1   3.12 (  4.94)	Acc@5  18.75 ( 14.16)
Epoch: [0][ 90/390]	Time  0.167 ( 0.417)	Data  0.000 ( 0.216)	Loss 7.3300e+00 (6.8982e+00)	Acc@1   6.25 (  4.84)	Acc@5   9.38 ( 14.22)
Epoch: [0][100/390]	Time  0.175 ( 0.393)	Data  0.000 ( 0.195)	Loss 7.3055e+00 (6.9380e+00)	Acc@1   0.00 (  4.67)	Acc@5   9.38 ( 13.89)
Epoch: [0][110/390]	Time  0.168 ( 0.373)	Data  0.000 ( 0.178)	Loss 7.3834e+00 (6.9798e+00)	Acc@1   3.12 (  4.62)	Acc@5  12.50 ( 13.74)
Epoch: [0][120/390]	Time  0.171 ( 0.356)	Data  0.000 ( 0.163)	Loss 7.3787e+00 (7.0176e+00)	Acc@1   3.12 (  4.60)	Acc@5  12.50 ( 13.66)
Epoch: [0][130/390]	Time  0.167 ( 0.342)	Data  0.000 ( 0.151)	Loss 7.4706e+00 (7.0625e+00)	Acc@1   6.25 (  4.44)	Acc@5   9.38 ( 13.26)
Epoch: [0][140/390]	Time  0.172 ( 0.329)	Data  0.000 ( 0.141)	Loss 7.6414e+00 (7.0982e+00)	Acc@1   3.12 (  4.32)	Acc@5   6.25 ( 13.12)
Epoch: [0][150/390]	Time  0.167 ( 0.319)	Data  0.000 ( 0.132)	Loss 7.8657e+00 (7.1369e+00)	Acc@1   0.00 (  4.16)	Acc@5   3.12 ( 12.71)
Epoch: [0][160/390]	Time  0.167 ( 0.309)	Data  0.000 ( 0.124)	Loss 7.9309e+00 (7.1750e+00)	Acc@1   9.38 (  4.11)	Acc@5  18.75 ( 12.58)
Epoch: [0][170/390]	Time  0.168 ( 0.301)	Data  0.000 ( 0.117)	Loss 7.7148e+00 (7.2117e+00)	Acc@1   3.12 (  3.98)	Acc@5   6.25 ( 12.23)
Epoch: [0][180/390]	Time  0.167 ( 0.294)	Data  0.000 ( 0.110)	Loss 7.8796e+00 (7.2457e+00)	Acc@1   0.00 (  3.94)	Acc@5   3.12 ( 11.88)
Epoch: [0][190/390]	Time  0.172 ( 0.287)	Data  0.000 ( 0.105)	Loss 7.9351e+00 (7.2752e+00)	Acc@1   6.25 (  3.86)	Acc@5   6.25 ( 11.78)
Epoch: [0][200/390]	Time  0.169 ( 0.281)	Data  0.000 ( 0.100)	Loss 7.9235e+00 (7.3047e+00)	Acc@1   0.00 (  3.82)	Acc@5   6.25 ( 11.61)
Epoch: [0][210/390]	Time  0.173 ( 0.276)	Data  0.000 ( 0.095)	Loss 7.7710e+00 (7.3297e+00)	Acc@1   9.38 (  3.78)	Acc@5  21.88 ( 11.52)
Epoch: [0][220/390]	Time  0.170 ( 0.271)	Data  0.000 ( 0.091)	Loss 7.9205e+00 (7.3547e+00)	Acc@1   0.00 (  3.76)	Acc@5   9.38 ( 11.45)
Epoch: [0][230/390]	Time  0.172 ( 0.267)	Data  0.000 ( 0.087)	Loss 7.8833e+00 (7.3766e+00)	Acc@1   0.00 (  3.79)	Acc@5   3.12 ( 11.40)
Epoch: [0][240/390]	Time  0.171 ( 0.263)	Data  0.000 ( 0.084)	Loss 7.8912e+00 (7.4014e+00)	Acc@1   0.00 (  3.70)	Acc@5   9.38 ( 11.23)
Epoch: [0][250/390]	Time  0.171 ( 0.259)	Data  0.000 ( 0.081)	Loss 8.0159e+00 (7.4244e+00)	Acc@1   0.00 (  3.59)	Acc@5   0.00 ( 10.97)
Epoch: [0][260/390]	Time  0.168 ( 0.255)	Data  0.000 ( 0.078)	Loss 7.9041e+00 (7.4459e+00)	Acc@1   6.25 (  3.60)	Acc@5  12.50 ( 10.92)
Epoch: [0][270/390]	Time  0.169 ( 0.252)	Data  0.000 ( 0.075)	Loss 7.9474e+00 (7.4692e+00)	Acc@1   0.00 (  3.64)	Acc@5  15.62 ( 10.95)
Epoch: [0][280/390]	Time  0.168 ( 0.249)	Data  0.000 ( 0.072)	Loss 7.9716e+00 (7.4875e+00)	Acc@1   3.12 (  3.60)	Acc@5  15.62 ( 10.91)
Epoch: [0][290/390]	Time  0.171 ( 0.246)	Data  0.000 ( 0.070)	Loss 7.8601e+00 (7.5053e+00)	Acc@1   0.00 (  3.59)	Acc@5  15.62 ( 10.84)
Epoch: [0][300/390]	Time  0.168 ( 0.244)	Data  0.000 ( 0.068)	Loss 8.1752e+00 (7.5242e+00)	Acc@1   3.12 (  3.52)	Acc@5  12.50 ( 10.69)
Epoch: [0][310/390]	Time  0.168 ( 0.241)	Data  0.000 ( 0.066)	Loss 7.8874e+00 (7.5418e+00)	Acc@1   9.38 (  3.49)	Acc@5  21.88 ( 10.60)
Epoch: [0][320/390]	Time  0.170 ( 0.239)	Data  0.000 ( 0.064)	Loss 8.1266e+00 (7.5578e+00)	Acc@1   0.00 (  3.44)	Acc@5   0.00 ( 10.52)
Epoch: [0][330/390]	Time  0.173 ( 0.237)	Data  0.000 ( 0.062)	Loss 7.9715e+00 (7.5731e+00)	Acc@1  15.62 (  3.42)	Acc@5  25.00 ( 10.49)
Epoch: [0][340/390]	Time  0.169 ( 0.235)	Data  0.000 ( 0.060)	Loss 8.1846e+00 (7.5884e+00)	Acc@1   0.00 (  3.37)	Acc@5   3.12 ( 10.43)
Epoch: [0][350/390]	Time  0.169 ( 0.233)	Data  0.000 ( 0.059)	Loss 8.1423e+00 (7.6023e+00)	Acc@1   0.00 (  3.31)	Acc@5   6.25 ( 10.38)
Epoch: [0][360/390]	Time  0.172 ( 0.231)	Data  0.000 ( 0.057)	Loss 7.9723e+00 (7.6148e+00)	Acc@1   6.25 (  3.31)	Acc@5  18.75 ( 10.40)
Epoch: [0][370/390]	Time  0.168 ( 0.230)	Data  0.000 ( 0.056)	Loss 8.2502e+00 (7.6298e+00)	Acc@1   0.00 (  3.29)	Acc@5   3.12 ( 10.38)
Epoch: [0][380/390]	Time  0.168 ( 0.228)	Data  0.000 ( 0.054)	Loss 8.1468e+00 (7.6426e+00)	Acc@1   3.12 (  3.27)	Acc@5   9.38 ( 10.31)
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
Epoch: [1][  0/390]	Time 20.555 (20.555)	Data 20.403 (20.403)	Loss 8.1060e+00 (8.1060e+00)	Acc@1   3.12 (  3.12)	Acc@5   9.38 (  9.38)
Epoch: [1][ 10/390]	Time  0.167 ( 2.023)	Data  0.000 ( 1.858)	Loss 8.0515e+00 (8.1049e+00)	Acc@1   3.12 (  2.27)	Acc@5  18.75 ( 10.51)
Epoch: [1][ 20/390]	Time  0.171 ( 1.141)	Data  0.000 ( 0.975)	Loss 8.1570e+00 (8.1438e+00)	Acc@1   6.25 (  2.98)	Acc@5  12.50 (  9.67)
Epoch: [1][ 30/390]	Time  0.175 ( 0.828)	Data  0.000 ( 0.661)	Loss 8.0353e+00 (8.1344e+00)	Acc@1   0.00 (  2.82)	Acc@5   3.12 (  9.27)
Epoch: [1][ 40/390]	Time  0.173 ( 0.668)	Data  0.000 ( 0.501)	Loss 8.0805e+00 (8.1430e+00)	Acc@1   3.12 (  2.82)	Acc@5  15.62 (  9.15)
Epoch: [1][ 50/390]	Time  0.176 ( 0.570)	Data  0.000 ( 0.403)	Loss 8.0746e+00 (8.1445e+00)	Acc@1   0.00 (  2.70)	Acc@5  15.62 (  9.25)
Epoch: [1][ 60/390]	Time  0.168 ( 0.505)	Data  0.000 ( 0.338)	Loss 8.2755e+00 (8.1417e+00)	Acc@1   0.00 (  2.56)	Acc@5   6.25 (  9.07)
Epoch: [1][ 70/390]	Time  0.168 ( 0.458)	Data  0.000 ( 0.291)	Loss 8.1335e+00 (8.1378e+00)	Acc@1   3.12 (  2.68)	Acc@5   9.38 (  9.02)
Epoch: [1][ 80/390]	Time  0.173 ( 0.422)	Data  0.000 ( 0.255)	Loss 8.2743e+00 (8.1312e+00)	Acc@1   0.00 (  2.70)	Acc@5   0.00 (  8.99)
Epoch: [1][ 90/390]	Time  0.170 ( 0.395)	Data  0.000 ( 0.228)	Loss 8.1496e+00 (8.1340e+00)	Acc@1   3.12 (  2.61)	Acc@5   9.38 (  8.89)
Epoch: [1][100/390]	Time  0.173 ( 0.373)	Data  0.000 ( 0.205)	Loss 7.9942e+00 (8.1349e+00)	Acc@1   0.00 (  2.51)	Acc@5   0.00 (  8.66)
Epoch: [1][110/390]	Time  0.170 ( 0.354)	Data  0.000 ( 0.187)	Loss 8.0656e+00 (8.1347e+00)	Acc@1   3.12 (  2.45)	Acc@5   6.25 (  8.56)
Epoch: [1][120/390]	Time  0.170 ( 0.339)	Data  0.000 ( 0.172)	Loss 8.2253e+00 (8.1349e+00)	Acc@1   3.12 (  2.61)	Acc@5   6.25 (  8.65)
Epoch: [1][130/390]	Time  0.167 ( 0.326)	Data  0.000 ( 0.159)	Loss 8.0283e+00 (8.1315e+00)	Acc@1   3.12 (  2.77)	Acc@5   9.38 (  8.54)
Epoch: [1][140/390]	Time  0.169 ( 0.315)	Data  0.000 ( 0.148)	Loss 7.9689e+00 (8.1228e+00)	Acc@1   0.00 (  2.75)	Acc@5   6.25 (  8.58)
Epoch: [1][150/390]	Time  0.167 ( 0.305)	Data  0.000 ( 0.139)	Loss 7.9995e+00 (8.1210e+00)	Acc@1   0.00 (  2.73)	Acc@5   6.25 (  8.38)
Epoch: [1][160/390]	Time  0.171 ( 0.297)	Data  0.000 ( 0.130)	Loss 7.9233e+00 (8.1176e+00)	Acc@1   3.12 (  2.66)	Acc@5  25.00 (  8.33)
Epoch: [1][170/390]	Time  0.167 ( 0.289)	Data  0.000 ( 0.123)	Loss 8.0950e+00 (8.1177e+00)	Acc@1   0.00 (  2.65)	Acc@5   6.25 (  8.24)
Epoch: [1][180/390]	Time  0.167 ( 0.283)	Data  0.000 ( 0.116)	Loss 8.0413e+00 (8.1126e+00)	Acc@1   9.38 (  2.59)	Acc@5   9.38 (  8.10)
Epoch: [1][190/390]	Time  0.169 ( 0.277)	Data  0.000 ( 0.110)	Loss 8.0273e+00 (8.1064e+00)	Acc@1   3.12 (  2.52)	Acc@5   9.38 (  8.16)
Epoch: [1][200/390]	Time  0.167 ( 0.271)	Data  0.000 ( 0.105)	Loss 8.0273e+00 (8.1008e+00)	Acc@1   3.12 (  2.53)	Acc@5   9.38 (  8.12)
Epoch: [1][210/390]	Time  0.167 ( 0.267)	Data  0.000 ( 0.100)	Loss 8.0529e+00 (8.0994e+00)	Acc@1   0.00 (  2.50)	Acc@5   6.25 (  8.07)
Epoch: [1][220/390]	Time  0.167 ( 0.262)	Data  0.000 ( 0.096)	Loss 8.1785e+00 (8.0971e+00)	Acc@1  15.62 (  2.49)	Acc@5  15.62 (  8.03)
Epoch: [1][230/390]	Time  0.171 ( 0.258)	Data  0.000 ( 0.092)	Loss 8.2243e+00 (8.0946e+00)	Acc@1   3.12 (  2.52)	Acc@5   3.12 (  8.00)
Epoch: [1][240/390]	Time  0.168 ( 0.254)	Data  0.000 ( 0.088)	Loss 7.7878e+00 (8.0909e+00)	Acc@1   0.00 (  2.48)	Acc@5   6.25 (  8.05)
Epoch: [1][250/390]	Time  0.171 ( 0.251)	Data  0.000 ( 0.085)	Loss 8.0571e+00 (8.0879e+00)	Acc@1   0.00 (  2.43)	Acc@5  18.75 (  7.98)
Epoch: [1][260/390]	Time  0.169 ( 0.248)	Data  0.000 ( 0.082)	Loss 8.2585e+00 (8.0870e+00)	Acc@1   3.12 (  2.44)	Acc@5   6.25 (  8.00)
Epoch: [1][270/390]	Time  0.168 ( 0.245)	Data  0.000 ( 0.079)	Loss 7.9433e+00 (8.0860e+00)	Acc@1   3.12 (  2.46)	Acc@5   3.12 (  7.97)
Epoch: [1][280/390]	Time  0.166 ( 0.242)	Data  0.000 ( 0.076)	Loss 8.0465e+00 (8.0847e+00)	Acc@1   6.25 (  2.46)	Acc@5   6.25 (  8.03)
Epoch: [1][290/390]	Time  0.168 ( 0.240)	Data  0.000 ( 0.074)	Loss 7.9077e+00 (8.0832e+00)	Acc@1   9.38 (  2.48)	Acc@5   9.38 (  8.10)
Epoch: [1][300/390]	Time  0.172 ( 0.237)	Data  0.000 ( 0.071)	Loss 7.9572e+00 (8.0825e+00)	Acc@1   0.00 (  2.46)	Acc@5   9.38 (  8.06)
Epoch: [1][310/390]	Time  0.169 ( 0.235)	Data  0.000 ( 0.069)	Loss 8.0726e+00 (8.0798e+00)	Acc@1   0.00 (  2.44)	Acc@5   3.12 (  8.06)
Epoch: [1][320/390]	Time  0.167 ( 0.233)	Data  0.000 ( 0.067)	Loss 8.0905e+00 (8.0777e+00)	Acc@1   3.12 (  2.43)	Acc@5   3.12 (  8.00)
Epoch: [1][330/390]	Time  0.168 ( 0.231)	Data  0.000 ( 0.065)	Loss 8.1385e+00 (8.0779e+00)	Acc@1   0.00 (  2.46)	Acc@5   3.12 (  8.02)
Epoch: [1][340/390]	Time  0.171 ( 0.229)	Data  0.000 ( 0.063)	Loss 8.1685e+00 (8.0775e+00)	Acc@1   3.12 (  2.46)	Acc@5   6.25 (  7.97)
Epoch: [1][350/390]	Time  0.175 ( 0.228)	Data  0.000 ( 0.062)	Loss 7.9798e+00 (8.0772e+00)	Acc@1   3.12 (  2.45)	Acc@5  15.62 (  8.00)
Epoch: [1][360/390]	Time  0.172 ( 0.226)	Data  0.000 ( 0.060)	Loss 7.9484e+00 (8.0766e+00)	Acc@1   0.00 (  2.48)	Acc@5  12.50 (  8.04)
Epoch: [1][370/390]	Time  0.168 ( 0.224)	Data  0.000 ( 0.058)	Loss 8.0752e+00 (8.0773e+00)	Acc@1   0.00 (  2.49)	Acc@5   6.25 (  8.04)
Epoch: [1][380/390]	Time  0.168 ( 0.223)	Data  0.000 ( 0.057)	Loss 7.9551e+00 (8.0765e+00)	Acc@1   3.12 (  2.47)	Acc@5   6.25 (  7.98)
time(seconds)        unlimited
file(blocks)         unlimited
data(kbytes)         unlimited
stack(kbytes)        unlimited
coredump(blocks)     unlimited
memory(kbytes)       unlimited
locked memory(kbytes) 64
process              1542210
nofiles              1024
vmemory(kbytes)      318000000
locks                unlimited
rtprio               0
avail True
ngpus_per_node 4
args Namespace(arch='resnet50', aug_plus=False, batch_size=128, checkpoint_fp='/userdata/smetzger/all_deepul_files/ckpts/', cos=False, data='/userdata/smetzger/data/cifar_10/', dist_backend='nccl', dist_url='tcp://localhost:10001', epochs=100, gpu=None, lr=0.015, mlp=True, moco_dim=128, moco_k=65536, moco_m=0.999, moco_t=0.07, momentum=0.9, multiprocessing_distributed=True, print_freq=10, rank=0, resume='', schedule=[120, 160], seed=None, start_epoch=0, weight_decay=0.0001, workers=32, world_size=1)
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
Use GPU: 0 for training
=> creating model 'resnet50'
MoCo(
  (encoder_q): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Sequential(
      (0): Linear(in_features=2048, out_features=2048, bias=True)
      (1): ReLU()
      (2): Linear(in_features=2048, out_features=128, bias=True)
    )
  )
  (encoder_k): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Sequential(
      (0): Linear(in_features=2048, out_features=2048, bias=True)
      (1): ReLU()
      (2): Linear(in_features=2048, out_features=128, bias=True)
    )
  )
)
Files already downloaded and verified
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
Epoch: [0][  0/390]	Time 22.959 (22.959)	Data 20.057 (20.057)	Loss 1.2445e-01 (1.2445e-01)	Acc@1 100.00 (100.00)	Acc@5 100.00 (100.00)
Epoch: [0][ 10/390]	Time  0.168 ( 2.245)	Data  0.000 ( 1.824)	Loss 6.8350e+00 (5.7692e+00)	Acc@1   0.00 (  9.38)	Acc@5   3.12 ( 12.22)
Epoch: [0][ 20/390]	Time  0.173 ( 1.257)	Data  0.000 ( 0.957)	Loss 7.0300e+00 (6.3572e+00)	Acc@1   3.12 (  5.65)	Acc@5   9.38 ( 10.86)
Epoch: [0][ 30/390]	Time  0.172 ( 0.907)	Data  0.000 ( 0.649)	Loss 6.9221e+00 (6.5860e+00)	Acc@1   3.12 (  4.84)	Acc@5   9.38 (  9.68)
Epoch: [0][ 40/390]	Time  0.172 ( 0.728)	Data  0.000 ( 0.492)	Loss 6.9564e+00 (6.6740e+00)	Acc@1   0.00 (  4.12)	Acc@5   9.38 (  9.76)
Epoch: [0][ 50/390]	Time  0.173 ( 0.619)	Data  0.000 ( 0.396)	Loss 7.1283e+00 (6.7417e+00)	Acc@1   0.00 (  3.43)	Acc@5   9.38 (  9.99)
Epoch: [0][ 60/390]	Time  0.173 ( 0.546)	Data  0.000 ( 0.332)	Loss 7.0368e+00 (6.7903e+00)	Acc@1   9.38 (  3.43)	Acc@5  18.75 ( 10.14)
Epoch: [0][ 70/390]	Time  0.172 ( 0.493)	Data  0.000 ( 0.286)	Loss 7.0442e+00 (6.8321e+00)	Acc@1   3.12 (  3.39)	Acc@5  12.50 ( 10.39)
Epoch: [0][ 80/390]	Time  0.171 ( 0.453)	Data  0.000 ( 0.251)	Loss 7.0023e+00 (6.8694e+00)	Acc@1   3.12 (  3.47)	Acc@5  12.50 ( 10.38)
Epoch: [0][ 90/390]	Time  0.175 ( 0.422)	Data  0.000 ( 0.224)	Loss 7.1688e+00 (6.9148e+00)	Acc@1   0.00 (  3.37)	Acc@5  25.00 ( 10.44)
Epoch: [0][100/390]	Time  0.168 ( 0.397)	Data  0.000 ( 0.202)	Loss 7.2088e+00 (6.9508e+00)	Acc@1   0.00 (  3.40)	Acc@5  18.75 ( 10.43)
Epoch: [0][110/390]	Time  0.167 ( 0.377)	Data  0.000 ( 0.184)	Loss 7.2939e+00 (6.9836e+00)	Acc@1   0.00 (  3.46)	Acc@5   3.12 ( 10.42)
Epoch: [0][120/390]	Time  0.171 ( 0.360)	Data  0.000 ( 0.169)	Loss 7.4843e+00 (7.0216e+00)	Acc@1   3.12 (  3.54)	Acc@5   6.25 ( 10.36)
Epoch: [0][130/390]	Time  0.178 ( 0.345)	Data  0.000 ( 0.156)	Loss 7.3941e+00 (7.0582e+00)	Acc@1   3.12 (  3.48)	Acc@5  12.50 ( 10.31)
Epoch: [0][140/390]	Time  0.172 ( 0.333)	Data  0.000 ( 0.145)	Loss 7.5715e+00 (7.0911e+00)	Acc@1   6.25 (  3.44)	Acc@5   6.25 ( 10.22)
Epoch: [0][150/390]	Time  0.172 ( 0.322)	Data  0.000 ( 0.136)	Loss 7.6797e+00 (7.1282e+00)	Acc@1   6.25 (  3.37)	Acc@5   9.38 ( 10.10)
Epoch: [0][160/390]	Time  0.167 ( 0.312)	Data  0.000 ( 0.128)	Loss 7.8074e+00 (7.1597e+00)	Acc@1   0.00 (  3.36)	Acc@5   0.00 (  9.90)
Epoch: [0][170/390]	Time  0.170 ( 0.304)	Data  0.000 ( 0.121)	Loss 7.6335e+00 (7.1891e+00)	Acc@1   0.00 (  3.25)	Acc@5  12.50 (  9.76)
Epoch: [0][180/390]	Time  0.175 ( 0.297)	Data  0.000 ( 0.114)	Loss 7.9025e+00 (7.2236e+00)	Acc@1   0.00 (  3.13)	Acc@5   3.12 (  9.55)
Epoch: [0][190/390]	Time  0.167 ( 0.290)	Data  0.000 ( 0.108)	Loss 7.6677e+00 (7.2532e+00)	Acc@1   3.12 (  3.04)	Acc@5   6.25 (  9.31)
Epoch: [0][200/390]	Time  0.173 ( 0.284)	Data  0.000 ( 0.103)	Loss 7.7731e+00 (7.2791e+00)	Acc@1   0.00 (  3.02)	Acc@5   6.25 (  9.25)
Epoch: [0][210/390]	Time  0.168 ( 0.279)	Data  0.000 ( 0.098)	Loss 7.6227e+00 (7.3035e+00)	Acc@1   9.38 (  2.96)	Acc@5  15.62 (  9.27)
Epoch: [0][220/390]	Time  0.169 ( 0.274)	Data  0.000 ( 0.094)	Loss 7.7980e+00 (7.3278e+00)	Acc@1   6.25 (  2.96)	Acc@5   6.25 (  9.15)
Epoch: [0][230/390]	Time  0.168 ( 0.269)	Data  0.000 ( 0.090)	Loss 7.9530e+00 (7.3528e+00)	Acc@1   0.00 (  2.85)	Acc@5   0.00 (  9.02)
Epoch: [0][240/390]	Time  0.175 ( 0.265)	Data  0.000 ( 0.087)	Loss 7.9841e+00 (7.3776e+00)	Acc@1   3.12 (  2.81)	Acc@5  12.50 (  8.95)
Epoch: [0][250/390]	Time  0.169 ( 0.261)	Data  0.000 ( 0.083)	Loss 7.8261e+00 (7.4015e+00)	Acc@1   6.25 (  2.81)	Acc@5  18.75 (  8.93)
Epoch: [0][260/390]	Time  0.171 ( 0.258)	Data  0.000 ( 0.080)	Loss 7.9185e+00 (7.4222e+00)	Acc@1   3.12 (  2.83)	Acc@5   6.25 (  8.90)
Epoch: [0][270/390]	Time  0.172 ( 0.254)	Data  0.000 ( 0.077)	Loss 8.0483e+00 (7.4440e+00)	Acc@1   0.00 (  2.76)	Acc@5   3.12 (  8.79)
Epoch: [0][280/390]	Time  0.170 ( 0.251)	Data  0.000 ( 0.075)	Loss 8.0247e+00 (7.4647e+00)	Acc@1   0.00 (  2.70)	Acc@5   6.25 (  8.67)
Epoch: [0][290/390]	Time  0.174 ( 0.249)	Data  0.000 ( 0.072)	Loss 7.7792e+00 (7.4814e+00)	Acc@1   3.12 (  2.68)	Acc@5   9.38 (  8.67)
Epoch: [0][300/390]	Time  0.170 ( 0.246)	Data  0.000 ( 0.070)	Loss 8.0647e+00 (7.5005e+00)	Acc@1   3.12 (  2.65)	Acc@5   3.12 (  8.59)
Epoch: [0][310/390]	Time  0.168 ( 0.244)	Data  0.000 ( 0.068)	Loss 7.8711e+00 (7.5205e+00)	Acc@1   6.25 (  2.64)	Acc@5   9.38 (  8.49)
Epoch: [0][320/390]	Time  0.168 ( 0.241)	Data  0.000 ( 0.066)	Loss 8.1799e+00 (7.5375e+00)	Acc@1   6.25 (  2.66)	Acc@5   6.25 (  8.44)
Epoch: [0][330/390]	Time  0.174 ( 0.239)	Data  0.000 ( 0.064)	Loss 7.9732e+00 (7.5539e+00)	Acc@1   6.25 (  2.64)	Acc@5  15.62 (  8.38)
Epoch: [0][340/390]	Time  0.170 ( 0.237)	Data  0.000 ( 0.062)	Loss 8.0711e+00 (7.5696e+00)	Acc@1   0.00 (  2.61)	Acc@5   3.12 (  8.36)
Epoch: [0][350/390]	Time  0.174 ( 0.235)	Data  0.000 ( 0.061)	Loss 8.3958e+00 (7.5834e+00)	Acc@1   0.00 (  2.61)	Acc@5  12.50 (  8.36)
Epoch: [0][360/390]	Time  0.168 ( 0.233)	Data  0.000 ( 0.059)	Loss 8.0156e+00 (7.5981e+00)	Acc@1   0.00 (  2.58)	Acc@5   3.12 (  8.35)
Epoch: [0][370/390]	Time  0.168 ( 0.232)	Data  0.000 ( 0.057)	Loss 8.2916e+00 (7.6124e+00)	Acc@1   3.12 (  2.56)	Acc@5   9.38 (  8.31)
Epoch: [0][380/390]	Time  0.168 ( 0.230)	Data  0.000 ( 0.056)	Loss 8.0087e+00 (7.6271e+00)	Acc@1   3.12 (  2.55)	Acc@5  15.62 (  8.28)
time(seconds)        unlimited
file(blocks)         unlimited
data(kbytes)         unlimited
stack(kbytes)        unlimited
coredump(blocks)     unlimited
memory(kbytes)       unlimited
locked memory(kbytes) 64
process              1542210
nofiles              1024
vmemory(kbytes)      318000000
locks                unlimited
rtprio               0
avail True
ngpus_per_node 4
args Namespace(arch='resnet50', aug_plus=False, batch_size=128, checkpoint_fp='/userdata/smetzger/all_deepul_files/ckpts/', cos=False, data='/userdata/smetzger/data/cifar_10/', dist_backend='nccl', dist_url='tcp://localhost:10001', epochs=100, gpu=None, lr=0.015, mlp=True, moco_dim=128, moco_k=65536, moco_m=0.999, moco_t=0.07, momentum=0.9, multiprocessing_distributed=True, print_freq=10, rank=0, resume='', schedule=[120, 160], seed=None, start_epoch=0, weight_decay=0.0001, workers=32, world_size=1)
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
avail True
ngpus_per_node 4
Use GPU: 0 for training
=> creating model 'resnet50'
MoCo(
  (encoder_q): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Sequential(
      (0): Linear(in_features=2048, out_features=2048, bias=True)
      (1): ReLU()
      (2): Linear(in_features=2048, out_features=128, bias=True)
    )
  )
  (encoder_k): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Sequential(
      (0): Linear(in_features=2048, out_features=2048, bias=True)
      (1): ReLU()
      (2): Linear(in_features=2048, out_features=128, bias=True)
    )
  )
)
Files already downloaded and verified
avail True
ngpus_per_node 4
